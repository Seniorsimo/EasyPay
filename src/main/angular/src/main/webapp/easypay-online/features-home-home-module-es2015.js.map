{"version":3,"sources":["./src/app/features/home/home-routing.module.ts","./src/app/features/home/home.component.ts","./src/app/features/home/home.component.html","./src/app/features/home/home.module.ts"],"names":[],"mappings":"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","file":"features-home-home-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NfcComponent, PinComponent, QrCodeComponent } from '../../shared';\nimport { HomeComponent } from './home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'pin',\n        pathMatch: 'full'\n      },\n      {\n        path: 'pin',\n        component: PinComponent\n      },\n      {\n        path: 'qr',\n        component: QrCodeComponent\n      },\n      {\n        path: 'nfc',\n        component: NfcComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule {}\n","import { CursorError } from '@angular/compiler/src/ml_parser/lexer';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { concatMap, debounceTime, map, switchMap } from 'rxjs/operators';\nimport { UtenteType } from 'src/app/core/constants/utente-type.enum';\nimport { Utente } from 'src/app/core/models/utente.model';\nimport { ContoService } from 'src/app/core/services/conto.service';\nimport { LoaderService, LoadingStatus } from 'src/app/core/services/loader.service';\nimport { PagamentoService } from 'src/app/core/services/pagamento.service';\nimport { UtenteService } from 'src/app/core/services/utente.service';\nimport { ContiStore } from 'src/app/core/stores/conti.store';\nimport { UtentiStore } from 'src/app/core/stores/utenti.store';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  readonly LoadingStatus =  LoadingStatus;\n\n  /** dati sull' errore ottenuto cercando di recuperare le informazioni */\n  error$: BehaviorSubject<CursorError> = new BehaviorSubject(undefined);\n\n  statusLoader$: BehaviorSubject<LoadingStatus>;\n\n  prezzo$: BehaviorSubject<number>;\n\n  commerciante$: BehaviorSubject<Utente>;\n\n  constructor(\n    private route: ActivatedRoute,\n    private utenteService: UtenteService,\n    private pagamentoService: PagamentoService,\n    private loaderService: LoaderService,\n    private contoService: ContoService,\n    private utentiStore: UtentiStore,\n    private contiStore: ContiStore,\n  ) {\n    this.statusLoader$ = this.loaderService.status$;\n  }\n\n  /*\n   * idConto: id del commerciante\n   * prezzo: prezzo da pagare\n   */\n  ngOnInit() {\n    this.commerciante$ = new BehaviorSubject(this.utentiStore.get(UtenteType.commerciante));\n    this.prezzo$ = this.pagamentoService.prezzo$;\n\n    this.route.queryParams\n      .pipe(\n        // debounceTime evita l'emit iniziale prima che i param siano effettivamente inizializzati\n        debounceTime(200),\n        switchMap(params => {\n          this.pagamentoService.setPrezzo(params.prezzo);\n          if (this.commerciante$.value && this.commerciante$.value.id) {\n            return this.commerciante$;\n          } else {\n            return this.contoService.getConto(params.idConto).pipe(\n              concatMap(conto =>{\n                this.contiStore.add(UtenteType.commerciante, conto);\n                return this.utenteService.getUtenteNoSecurity(conto.id);\n              })\n            );\n          }\n        })\n      )\n      .subscribe({\n        next:  result => {\n          if (result.type === UtenteType.commerciante) {\n            this.commerciante$.next(result);\n            this.loaderService.changeStatus(LoadingStatus.SUCCESS);\n          }\n        },\n        error: error => {\n          this.error$.next(error);\n          this.loaderService.changeStatus(LoadingStatus.FAILED);\n        },\n      });\n  }\n}\n","  <!-- a caricamento del conto mostra l'applicazione -->\n  <ng-container *ngIf=\"(statusLoader$ | async) === LoadingStatus.SUCCESS\">\n    <h1 class=\"mb-0\">\n      <mat-icon svgIcon=\"bank\" class=\"logo\"></mat-icon>\n    </h1>\n    <h2 class=\"logo-title mt-0\">EasyPay</h2>\n    <p class=\"price\">{{ prezzo$ | async | currency: 'EUR':'symbol':'1.2' }}</p>\n    <div>\n      <p class=\"customer-rs\">{{ (commerciante$ | async).ragSoc }}</p>\n      <p class=\"customer-name\">{{ (commerciante$ | async).cognome }} {{ (commerciante$ | async).nome }}</p>\n    </div>\n\n    <div class=\"content\">\n      <router-outlet></router-outlet>\n    </div>\n    <button mat-icon-button queryParamsHandling=\"preserve\" [routerLink]=\"['pin']\">\n      <mat-icon svgIcon=\"textbox-password\"></mat-icon>\n    </button>\n    <button mat-icon-button queryParamsHandling=\"preserve\" [routerLink]=\"['qr']\" class=\"mr-2 ml-2\">\n      <mat-icon svgIcon=\"qrcode\"></mat-icon>\n    </button>\n    <button mat-icon-button queryParamsHandling=\"preserve\" [routerLink]=\"['nfc']\">\n      <mat-icon svgIcon=\"nfc-variant\"></mat-icon>\n    </button>\n  </ng-container>\n\n  <!-- caricamento del conto fallito -->\n  <app-error\n    *ngIf=\"(statusLoader$ | async) === LoadingStatus.FAILED\"\n    titleLabel=\"Impossibile procedere con il pagamento. Se il problema persiste contattare il venditore\"\n    content=\"SUGGERIMENTO PER IL VENDITORE: assicurarsi che il idConto e prezzo siano validi\"\n    [error]=\"error$ | async\"\n  ></app-error>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home.component';\nimport { HomeRoutingModule } from './home-routing.module';\nimport { SharedModule } from 'src/app/shared';\nimport { CoreModule } from 'src/app/core/core.module';\n\n\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    CoreModule,\n    SharedModule,\n  ]\n})\nexport class HomeModule { }\n"],"sourceRoot":"webpack:///"}