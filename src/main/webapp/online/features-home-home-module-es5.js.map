{"version":3,"sources":["webpack:///src/app/features/home/home-routing.module.ts","webpack:///src/app/features/home/home.component.ts","webpack:///src/app/features/home/home.component.html","webpack:///src/app/features/home/home.module.ts"],"names":["routes","path","component","children","redirectTo","pathMatch","HomeRoutingModule","forChild","imports","exports","HomeComponent","route","utenteService","pagamentoService","loaderService","contoService","utentiStore","contiStore","LoadingStatus","error$","undefined","subscriptions","statusLoader$","status$","commerciante$","get","commerciante","prezzo$","push","queryParams","pipe","params","localStorage","setItem","token","setPrezzo","prezzo","value","id","getConto","idConto","conto","add","getUtenteNoSecurity","subscribe","next","result","type","changeStatus","SUCCESS","error","name","message","FAILED","forEach","subsc","unsubscribe","selector","templateUrl","styleUrls","HomeModule","declarations"],"mappings":"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","file":"features-home-home-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NfcComponent, PinComponent, QrCodeComponent } from '../../shared';\nimport { HomeComponent } from './home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'pin',\n        pathMatch: 'full'\n      },\n      {\n        path: 'pin',\n        component: PinComponent\n      },\n      {\n        path: 'qr',\n        component: QrCodeComponent\n      },\n      {\n        path: 'nfc',\n        component: NfcComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { concatMap, debounceTime, switchMap } from 'rxjs/operators';\nimport { UtenteType } from 'src/app/core/constants/utente-type.enum';\nimport { CustomError, CUSTOM_ERROR } from 'src/app/core/models/error.model';\nimport { Utente } from 'src/app/core/models/utente.model';\nimport { ContoService } from 'src/app/core/services/conto.service';\nimport { LoaderService, LoadingStatus } from 'src/app/core/services/loader.service';\nimport { PagamentoService } from 'src/app/core/services/pagamento.service';\nimport { UtenteService } from 'src/app/core/services/utente.service';\nimport { ContiStore } from 'src/app/core/stores/conti.store';\nimport { UtentiStore } from 'src/app/core/stores/utenti.store';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n\n  readonly LoadingStatus =  LoadingStatus;\n\n  /** dati sull' errore ottenuto cercando di recuperare le informazioni */\n  error$: BehaviorSubject<CustomError> = new BehaviorSubject(undefined);\n\n  statusLoader$: BehaviorSubject<LoadingStatus>;\n\n  prezzo$: BehaviorSubject<number>;\n\n  commerciante$: BehaviorSubject<Utente>;\n\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private utenteService: UtenteService,\n    private pagamentoService: PagamentoService,\n    private loaderService: LoaderService,\n    private contoService: ContoService,\n    private utentiStore: UtentiStore,\n    private contiStore: ContiStore,\n  ) {\n    this.statusLoader$ = this.loaderService.status$;\n  }\n\n  /*\n   * idConto: id del commerciante\n   * prezzo: prezzo da pagare\n   */\n  ngOnInit() {\n    this.commerciante$ = new BehaviorSubject(this.utentiStore.get(UtenteType.commerciante));\n    this.prezzo$ = this.pagamentoService.prezzo$;\n\n    this.subscriptions.push(this.route.queryParams\n      .pipe(\n        // debounceTime evita l'emit iniziale prima che i param siano effettivamente inizializzati\n        debounceTime(200),\n        switchMap(params => {\n          localStorage.setItem('onlineToken', params.token);\n          this.pagamentoService.setPrezzo(params.prezzo);\n          if (this.commerciante$.value && this.commerciante$.value.id) {\n            return this.commerciante$;\n          } else {\n            return this.contoService.getConto(params.idConto).pipe(\n              concatMap(conto => {\n                this.contiStore.add(UtenteType.commerciante, conto);\n                return this.utenteService.getUtenteNoSecurity(conto.id);\n              })\n            );\n          }\n        })\n      )\n      .subscribe({\n        next:  result => {\n          if (result.type === UtenteType.commerciante) {\n            this.utentiStore.add(UtenteType.commerciante, result);\n            this.commerciante$.next(result);\n            this.loaderService.changeStatus(LoadingStatus.SUCCESS);\n          } else {\n            // account cliente\n            const error = {\n              type: CUSTOM_ERROR,\n              name: 'tipo account errato',\n              message: 'è necessario un account da commerciante, ma questo account è di tipo ' + result.type,\n            };\n            this.error$.next(error);\n            this.loaderService.changeStatus(LoadingStatus.FAILED);\n            throw error;\n          }\n        },\n        error: error => {\n          this.error$.next(error);\n          this.loaderService.changeStatus(LoadingStatus.FAILED);\n        },\n      }));\n  }\n\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subsc => subsc.unsubscribe());\n  }\n}\n","  <!-- a caricamento del conto mostra l'applicazione -->\n  <ng-container *ngIf=\"(statusLoader$ | async) === LoadingStatus.SUCCESS\">\n    <h1 class=\"mb-0\">\n      <mat-icon svgIcon=\"bank\" class=\"logo\"></mat-icon>\n    </h1>\n    <h2 class=\"logo-title mt-0\">EasyPay</h2>\n    <p class=\"price\">{{ prezzo$ | async | currency: 'EUR':'symbol':'1.2' }}</p>\n    <div>\n      <p class=\"customer-rs\">{{ (commerciante$ | async).ragSoc }}</p>\n      <p class=\"customer-name\">{{ (commerciante$ | async).cognome }} {{ (commerciante$ | async).nome }}</p>\n    </div>\n\n    <div class=\"content\">\n      <router-outlet></router-outlet>\n    </div>\n    <button mat-icon-button queryParamsHandling=\"preserve\" [routerLink]=\"['pin']\">\n      <mat-icon svgIcon=\"textbox-password\"></mat-icon>\n    </button>\n    <button mat-icon-button queryParamsHandling=\"preserve\" [routerLink]=\"['qr']\" class=\"mr-2 ml-2\">\n      <mat-icon svgIcon=\"qrcode\"></mat-icon>\n    </button>\n    <button mat-icon-button queryParamsHandling=\"preserve\" [routerLink]=\"['nfc']\">\n      <mat-icon svgIcon=\"nfc-variant\"></mat-icon>\n    </button>\n  </ng-container>\n\n  <!-- caricamento del conto fallito -->\n  <app-error\n    *ngIf=\"(statusLoader$ | async) === LoadingStatus.FAILED\"\n    titleLabel=\"Impossibile procedere con il pagamento. Se il problema persiste contattare il venditore\"\n    content=\"SUGGERIMENTO PER IL VENDITORE: assicurarsi che il idConto e prezzo siano validi\"\n    [error]=\"error$ | async\"\n  ></app-error>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home.component';\nimport { HomeRoutingModule } from './home-routing.module';\nimport { SharedModule } from 'src/app/shared';\nimport { CoreModule } from 'src/app/core/core.module';\n\n\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    CoreModule,\n    SharedModule,\n  ]\n})\nexport class HomeModule { }\n"]}