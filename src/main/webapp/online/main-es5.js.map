{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/constants/utente-type.enum.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/http-interceptors/auth.interceptor.ts","webpack:///src/app/core/models/error.model.ts","webpack:///src/app/core/services/conto.service.ts","webpack:///src/app/core/services/loader.service.ts","webpack:///src/app/core/services/pagamento.service.ts","webpack:///src/app/core/services/utente.service.ts","webpack:///src/app/core/stores/conti.store.ts","webpack:///src/app/core/stores/utenti.store.ts","webpack:///src/app/shared/components/error-page/error-page.component.ts","webpack:///src/app/shared/components/error-page/error-page.component.html","webpack:///src/app/shared/components/error/error.component.ts","webpack:///src/app/shared/components/error/error.component.html","webpack:///src/app/shared/components/loader/loader.component.ts","webpack:///src/app/shared/components/loader/loader.component.html","webpack:///src/app/shared/components/nfc/nfc.component.ts","webpack:///src/app/shared/components/nfc/nfc.component.html","webpack:///src/app/shared/components/pin/pin.component.ts","webpack:///src/app/shared/components/pin/pin.component.html","webpack:///src/app/shared/components/qr-code/qr-code.component.ts","webpack:///src/app/shared/components/qr-code/qr-code.component.html","webpack:///src/app/shared/directives/numeric.directive.ts","webpack:///src/app/shared/index.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","children","redirectTo","pathMatch","loadChildren","m","HomeModule","component","AppRoutingModule","forRoot","imports","AppComponent","loaderService","statusLoader$","status$","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","UtenteType","CoreModule","matIconRegistry","domSanitizer","addSvgIconSet","bypassSecurityTrustResourceUrl","ngModule","AuthInterceptor","router","next","authReq","clone","headers","set","localStorage","getItem","handle","pipe","response","status","console","error","removeItem","navigate","httpInterceptorProviders","provide","useClass","multi","WrongParamError","param","type","CUSTOM_ERROR","name","message","JSON","stringify","ContoService","http","emptyConto","budget","saldo","availableBudget","idCliente","idConto","_getContoRequest","url","get","result","apiConto","id_cliente","providedIn","LoadingStatus","LoaderService","LOADING","PagamentoService","utentiStore","prezzo$","subscriptions","value","convPrezzo","Number","parseFloat","isNaN","changeStatus","push","pagamento","cliente","commerciante","subscribe","timestamp","Date","getTime","window","opener","postMessage","success","setInterval","close","SUCCESS","titleLabel","erroCode","errorMessage","navigateByUrl","idContoCliente","idContoCommerciante","prezzo","params","from","to","post","forEach","subsc","unsubscribe","UtenteService","emptyUtente","otp","nome","cognome","email","createdAt","undefined","updatedAt","address","birthDate","phone","_getUtenteHttp","pin","qrCode","split","apiUtente","_cleanUtente","id_conto","birth_date","ContiStore","store","utenteType","Object","find","key","conto","UtentiStore","ErrorPageComponent","route","titleLabel$","content$","error$","FAILED","queryParams","content","parse","ErrorComponent","LoaderComponent","NfcComponent","PinComponent","fb","utenteService","pagamentoService","formCrl","group","userId","control","required","pinCode","minLength","maxLength","getUtenteByPin","add","handlePagamento","err","controls","setErrors","WrongBE","login","QrCodeComponent","allowedFormats","QR_CODE","EAN_13","statusScanner$","token","scanner","enable","getUtenteByTokenOtp","scanSuccessHandler","readerStatus","numericValidator","isNumeric","RegExp","test","NumericDirective","useExisting","SharedModule","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PinComponent, QrCodeComponent, NfcComponent } from './shared';\nimport { ErrorPageComponent } from './shared/components/error-page/error-page.component';\nimport { HomeComponent } from './features/home/home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: '',\n        redirectTo: '/home',\n        pathMatch: 'full',\n      },\n      {\n        path: 'home',\n        loadChildren: () => import('./features/home/home.module').then(m => m.HomeModule)\n      },\n      {\n        path: 'error',\n        component: ErrorPageComponent,\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { LoaderService, LoadingStatus } from './core/services/loader.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  statusLoader$: BehaviorSubject<LoadingStatus>;\n\n  constructor(\n    public loaderService: LoaderService,\n  ) {\n    this.statusLoader$ = this.loaderService.status$;\n  }\n\n  ngOnInit() {\n  }\n}\n","<div class=\"container\">\n  <!-- loader in attesa di recuperare il conto -->\n  <ng-container *ngIf=\"!(statusLoader$ | async)\">\n    <app-loader></app-loader>\n  </ng-container>\n  <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule.forRoot(),\n    AppRoutingModule,\n    SharedModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","/** Tipologia di utente che può essere */\nexport enum UtenteType {\n  cliente = 'cliente',\n  commerciante = 'commerciante',\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { MatIconModule, MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { UtenteService } from './services/utente.service';\nimport { ContoService } from './services/conto.service';\nimport { PagamentoService } from './services/pagamento.service';\nimport { UtentiStore } from './stores/utenti.store';\nimport { ContiStore } from './stores/conti.store';\nimport { httpInterceptorProviders } from './http-interceptors/auth.interceptor';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, HttpClientModule, MatIconModule],\n  exports: [MatIconModule],\n  providers: [/* No providers */],\n})\nexport class CoreModule {\n  constructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer) {\n    // aggiunge le nuova svg a material\n    matIconRegistry.addSvgIconSet(domSanitizer.bypassSecurityTrustResourceUrl('assets/svgs/mdi.svg'));\n    // matIconRegistry.addSvgIconSet(domSanitizer.bypassSecurityTrustResourceUrl('../../assets/fonts/materialdesignicons-webfont.woff'));\n  }\n\n  static forRoot(): ModuleWithProviders<CoreModule> {\n    return {\n      ngModule: CoreModule,\n      providers: [\n        UtenteService,\n        PagamentoService,\n        ContoService,\n        UtentiStore,\n        ContiStore,\n        httpInterceptorProviders,\n      ],\n    };\n  }\n}\n","import { HTTP_INTERCEPTORS, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/** Pass untouched request through to the next request handler. */\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n\n  constructor(private router: Router) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const authReq = req.clone({\n      headers: req.headers.set('Authorization', localStorage.getItem('onlineToken') || '')\n    });\n    return next.handle(authReq)\n    .pipe(\n      // filter((response: HttpResponse<any>) => ),\n      map( (response: HttpResponse<any>) => {\n          if ( response && response.status === 403) {\n            console.error('Token di accesso scaduto, logout!');\n            localStorage.removeItem('onlineToken');\n            this.router.navigate([]);\n          }\n          return response;\n      })\n    );\n  }\n}\n\n/** Http interceptor providers in outside-in order */\nexport const httpInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n];\n","export interface CustomError extends Error {\n  type: string;\n}\n\nexport class WrongParamError implements CustomError {\n  readonly type = CUSTOM_ERROR;\n\n  name = '';\n  message = '';\n\n  constructor(param) {\n    this.name = 'Errore nei parametri';\n    this.message = JSON.stringify(param);\n  }\n}\n\nexport const CUSTOM_ERROR = 'CUSTOM_ERROR';\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { ApiConto } from '../models/api-conto.model';\nimport { Conto } from '../models/conto.model';\nimport { CustomError, CUSTOM_ERROR, WrongParamError } from '../models/error.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContoService {\n\n  readonly emptyConto: Conto = {\n    id: '',\n    budget: 0,\n    saldo: 0,\n    availableBudget: 0,\n    idCliente: '',\n  };\n\n  constructor(private http: HttpClient) { }\n\n\n  getConto(idConto: string): Observable<Conto> {\n    if (!idConto) {\n      return throwError(new WrongParamError(idConto));\n    }\n    return this._getContoRequest(`/api/conti/${idConto}`);\n  }\n\n  getSelfConto(): Observable<Conto> {\n    return this._getContoRequest('/api/conti}/self');\n  }\n\n\n  private _getContoRequest(url: string) {\n    return this.http.get<ApiConto>(url).pipe(\n      map(result => {\n        if (result && result.id) {\n          return result;\n        } else {\n          throw { type: CUSTOM_ERROR, name: 'account not found', message: `non è stato possibile trovare l'account` };\n        }\n      }),\n      map(apiConto => ({...apiConto, id: apiConto.id + '', idCliente: apiConto.id_cliente + '' } as Conto)),\n      catchError((error) => {\n        console.error('error');\n        throw {\n          type: CUSTOM_ERROR,\n          name: 'backend error',\n          message: error,\n        };\n      })\n    );\n  }\n\n\n  /** ripulisce e restituisce il Conto ben formattato */\n  private clearConto(apiConto: ApiConto): Conto {\n    return {...apiConto, id: apiConto.id + '', idCliente: apiConto.id_cliente + '' };\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport enum LoadingStatus {\n  LOADING = '',\n  FAILED = 'FAILED',\n  SUCCESS = 'SUCCESS'\n}\n\n/** service sche gestisce il loader */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  /** Alla fine del caricamento chiude il loader e apre la modale */\n  status$: BehaviorSubject<LoadingStatus>;\n\n  constructor() {\n    this.status$ = new BehaviorSubject(LoadingStatus.LOADING);\n  }\n\n  changeStatus(status: LoadingStatus) {\n    this.status$.next(status);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { LoaderService, LoadingStatus } from 'src/app/core/services/loader.service';\n\nimport { UtenteType } from '../constants/utente-type.enum';\nimport { CUSTOM_ERROR, CustomError } from '../models/error.model';\nimport { UtentiStore } from '../stores/utenti.store';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PagamentoService implements OnDestroy {\n  prezzo$: BehaviorSubject<number> = new BehaviorSubject(0);\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private http: HttpClient,\n    private utentiStore: UtentiStore,\n    private router: Router,\n    private loaderService: LoaderService,\n  ) {}\n  /** Salva il valore del trasferimento da effettuare */\n  setPrezzo(value: string) {\n    const convPrezzo = Number.parseFloat(value);\n    if (!isNaN(convPrezzo)) {\n      this.prezzo$.next(Number.parseFloat(value));\n    } else {\n      throw { type: CUSTOM_ERROR, name: 'errore sul prezzo', message: 'deve essere un valore numerico' };\n    }\n  }\n\n  /** gestisce un pagamento una volta che gli store sono stati tutti inizializzati correttamente */\n  handlePagamento() {\n    this.loaderService.changeStatus(LoadingStatus.LOADING);\n    this.subscriptions.push(\n      this.pagamento(\n        this.utentiStore.get(UtenteType.cliente) ? this.utentiStore.get(UtenteType.cliente).idConto : '',\n        this.utentiStore.get(UtenteType.commerciante) ? this.utentiStore.get(UtenteType.commerciante).idConto : '',\n        this.prezzo$.value // TODO: vedere che fare del prezzo\n      ).subscribe({\n        next: result => {\n          const response = { timestamp: new Date().getTime() };\n          if (window.opener) {\n            window.opener.postMessage(JSON.stringify({ success: true, ...response }), '*');\n            setInterval(() => window.close(), 1000);\n          } else {\n            console.error('Impossibile chiudere pagina');\n          }\n          this.loaderService.changeStatus(LoadingStatus.SUCCESS);\n        },\n        error: (error: CustomError) => {\n          this.loaderService.changeStatus(LoadingStatus.SUCCESS);\n          const titleLabel = 'Impossibile procedere con il pagamento';\n          window.opener.postMessage(\n            JSON.stringify({ success: false, erroCode: error.name, errorMessage: error.message }),\n            '*'\n          );\n          setInterval(() => window.close(), 1000);\n          this.router.navigateByUrl(`/error?titleLabel=${titleLabel}&content=${error.message}&error=${JSON.stringify(error)}`);\n        }\n      }));\n  }\n\n  pagamento(idContoCliente: string, idContoCommerciante: string, prezzo: number): Observable<boolean> {\n    const params = {\n      from: idContoCliente,\n      to: idContoCommerciante,\n      value: prezzo + '',\n    };\n    return this.http.post('/api/pagamenti', params).pipe(\n      map(result => {\n        console.error('TODO: gestire la risposta del pagamento');\n        return true;\n        // TODO: caso di saldo mancante:\n        // const message = 'Ricaricare il conto';\n        // throw { type: CUSTOM_ERROR, name: 'Saldo Insufficiente', message } as CustomError;\n      }),\n      catchError((error) => {\n        console.error('error');\n        throw {\n          type: CUSTOM_ERROR,\n          name: 'backend error',\n          message: error,\n        };\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subsc => subsc.unsubscribe());\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport {\n  CUSTOM_ERROR,\n  WrongParamError,\n} from '../models/error.model';\nimport { Utente } from '../models/utente.model';\nimport { ApiUtente } from '../models/api-utente.model';\nimport { UtenteType } from '../constants/utente-type.enum';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UtenteService {\n\n  readonly emptyUtente = {\n    type: UtenteType.cliente,\n    id: '',\n    otp: '',\n    nome: '',\n    cognome: '',\n    email: '',\n    createdAt: undefined,\n    updatedAt: undefined,\n    address: '',\n    birthDate: '',\n    phone: '',\n    idConto: '',\n  };\n\n  constructor(private http: HttpClient) {\n  }\n\n  /** restituisce una variante ridotta dell'Utente senza i dati più sensibili */\n  public getUtenteNoSecurity(id: string): Observable<Utente> {\n    if (!id) {\n      return throwError(new WrongParamError({ id }));\n    }\n    return this._getUtenteHttp(id);\n  }\n\n\n  public getUtenteByPin(id: string, pin: string): Observable<Utente> {\n    if (!id || !pin) {\n      return throwError(new WrongParamError({ id, pin }));\n    }\n    return this._getUtenteHttp(id, { pin });\n  }\n\n  public getUtenteByTokenOtp(qrCode: string): Observable<Utente> {\n    const [id, otp] = qrCode.split('-');\n    if (!id || !otp) {\n      return throwError(new WrongParamError({ id, otp }));\n    }\n\n    return this._getUtenteHttp(id, { otp });\n  }\n\n  /** effettua la richiesta HTTP per verificare se il login dell'utente va a buon fine */\n  private _getUtenteHttp(\n    id: string,\n    params: { pin?: string; otp?: string } = {}\n  ): Observable<Utente> {\n    return this.http\n      .get<ApiUtente>(`/api/clienti/${id}`, { params })\n      .pipe(\n        map(result => {\n          if (result && result.id && (result.type === UtenteType.cliente || result.type === UtenteType.commerciante)) {\n            return result;\n          } else {\n            throw {\n              type: CUSTOM_ERROR,\n              name: 'account not found',\n              message: `non è stato possibile trovare l'account`,\n            };\n          }\n        }),\n        map((apiUtente) => this._cleanUtente(apiUtente)),\n        catchError((error) => {\n          console.error('error');\n          throw {\n            type: CUSTOM_ERROR,\n            name: 'backend error',\n            message: error,\n          };\n        })\n      );\n  }\n\n\n  /** riceve in input un apiUtente e modifica i parametri diversi in modo da ottenere un oggetto utente */\n  private _cleanUtente(apiUtente: ApiUtente): Utente {\n    return ({\n      type: UtenteType.cliente,\n      ...apiUtente,\n      id: apiUtente.id + '',\n      idConto: apiUtente.id_conto + '',\n      birthDate: apiUtente.birth_date,\n    } as Utente);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { UtenteType } from '../constants/utente-type.enum';\nimport { Conto } from '../models/conto.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContiStore {\n\n  private store: {[UtenteType: string]: Conto} = {};\n\n  constructor() { }\n\n  public get(id: string): Conto;\n  public get(utenteType: UtenteType, id: string = ''): Conto {\n    if (utenteType === UtenteType.cliente || utenteType === UtenteType.commerciante) {\n      return this.store[utenteType];\n    } else if (id) {\n      return this.store[Object.keys(this.store).find(key => this.store[key].id === id )];\n    }\n  }\n\n  public add(utenteType: UtenteType, conto: Conto) {\n    this.store[utenteType] = conto;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { UtenteType } from '../constants/utente-type.enum';\nimport { Utente } from '../models/utente.model';\n\n/**\n * Salva nello store i dati del commerciante e i dati del cliente.\n * Trick: il Cliente potrebbe essere un commerciante, ma all'interno dello store si usa UtenteType.cliente\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtentiStore {\n\n  private store: {[UtenteType: string]: Utente} = {};\n\n  constructor() { }\n\n\n  public get(id: string): Utente;\n  public get(utenteType: UtenteType, id: string = ''): Utente {\n    if (utenteType === UtenteType.cliente || utenteType === UtenteType.commerciante) {\n      return this.store[utenteType];\n    } else if (id) {\n      return this.store[Object.keys(this.store).find(key => this.store[key].id === id )];\n    }\n  }\n\n  public add(utenteType: UtenteType, cliente: Utente) {\n    this.store[utenteType] = cliente;\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { debounceTime, switchMap } from 'rxjs/operators';\nimport { LoaderService, LoadingStatus } from 'src/app/core/services/loader.service';\nimport { CustomError } from 'src/app/core/models/error.model';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.scss']\n})\nexport class ErrorPageComponent implements OnInit, OnDestroy {\n\n  /** titolo della pagina di errore */\n  titleLabel$: BehaviorSubject<string>;\n\n  /** contenuto html del messaggio di errore */\n  content$: BehaviorSubject<string>;\n\n  /** oggetto errore da stampare se presente */\n  error$: BehaviorSubject<CustomError>;\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(private route: ActivatedRoute, private loaderService: LoaderService) {\n    this.titleLabel$ = new BehaviorSubject('Impossibile procedere con il pagamento. Se il problema persiste contattare il venditore');\n    this.content$ = new BehaviorSubject('SUGGERIMENTO PER IL VENDITORE: assicurarsi che il idConto e prezzo siano validi');\n    this.error$ = new BehaviorSubject(undefined);\n    this.loaderService.status$.next(LoadingStatus.FAILED);\n  }\n\n  ngOnInit() {\n    this.subscriptions.push(this.route.queryParams\n    .pipe(\n      // debounceTime evita l'emit iniziale prima che i param siano effettivamente inizializzati\n      debounceTime(200),\n      switchMap(params => {\n        if ( params.titleLabel) {\n          this.titleLabel$.next(params.titleLabel);\n        }\n        if ( params.content ) {\n          this.content$.next(params.content);\n        }\n        if ( params.error ) {\n          this.error$.next(JSON.parse(params.error));\n        }\n        return [];\n      })\n    )\n    .subscribe());\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subsc => subsc.unsubscribe());\n  }\n}\n","<app-error [titleLabel]=\"titleLabel$ | async\" [content]=\"content$ | async\" [error]=\"error$ | async\"></app-error>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { CustomError } from 'src/app/core/models/error.model';\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n  /** titolo della pagina di errore */\n  @Input() titleLabel: string;\n\n  /** contenuto html del messaggio di errore */\n  @Input() content: string;\n\n  /** oggetto errore da stampare se presente */\n  @Input() error: CustomError;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<ng-container>\n  <h1 class=\"mb-0\">\n    <mat-icon svgIcon=\"alert-circle\" class=\"logo\"></mat-icon>\n  </h1>\n  <h2 class=\"logo-title mt-0\">{{titleLabel}}</h2>\n  <div [innerHTML]=\"content\"></div>\n\n  <p>{{ error | json }}</p>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<img src=\"assets/loader.gif\" alt=\"loader\">\n<mat-icon svgIcon=\"bank\" class=\"logo\"></mat-icon>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nfc',\n  templateUrl: './nfc.component.html',\n  styleUrls: ['./nfc.component.scss']\n})\nexport class NfcComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-icon svgIcon=\"nfc-variant\" class=\"nfc-icon\"></mat-icon>\n<div class=\"nfc-message\">passare il cellulare con nfc abilitato sul dispositivo per collegarsi</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { UtenteType } from 'src/app/core/constants/utente-type.enum';\nimport { PagamentoService } from 'src/app/core/services/pagamento.service';\nimport { UtenteService } from 'src/app/core/services/utente.service';\nimport { UtentiStore } from 'src/app/core/stores/utenti.store';\n\nimport { numericValidator } from '../../directives/numeric.directive';\n\n@Component({\n  selector: 'app-pin',\n  templateUrl: './pin.component.html',\n  styleUrls: ['./pin.component.scss']\n})\nexport class PinComponent implements OnInit, OnDestroy {\n  /** controller del form */\n  formCrl: FormGroup;\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private utenteService: UtenteService,\n    private utentiStore: UtentiStore,\n    private pagamentoService: PagamentoService,\n  ) {\n    this.formCrl = this.fb.group({\n      userId: this.fb.control('', [Validators.required]),\n      pinCode: this.fb.control('', [Validators.required, numericValidator(), Validators.minLength(4), Validators.maxLength(4)])\n    });\n  }\n\n  ngOnInit() {}\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subsc => subsc.unsubscribe());\n  }\n\n  login() {\n    this.subscriptions.push(\n      this.utenteService.getUtenteByPin(this.formCrl.value.userId, this.formCrl.value.pinCode).pipe(\n        map(cliente => this.utentiStore.add(UtenteType.cliente, cliente)),\n      ).subscribe({\n        next: () => this.pagamentoService.handlePagamento(),\n        error: (err) => {\n          // TODO: differenziare dal semplice errore del login per riproporre la schermata\n          console.error(err);\n          this.formCrl.controls.userId.setErrors({ WrongBE: true });\n          this.formCrl.controls.pinCode.setErrors({ WrongBE: true });\n          // const titleLabel = 'Impossibile effettuare il login';\n          // this.router.navigateByUrl(`/error?titleLabel=${titleLabel}&content=${err.message}&error=${JSON.stringify(err)}`);\n        }\n      }));\n  }\n}","<div>\n  <form class=\"form\" [formGroup]=\"formCrl\">\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput placeholder=\"ID*\" formControlName=\"userId\" />\n        <mat-error *ngIf=\"formCrl.controls['userId'].hasError('required')\"> L'id utente è <strong>richiesto</strong> </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['userId'].hasError('WrongBE')\"> Id o Pin Sbagliati</mat-error>\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput type=\"password\" placeholder=\"Pin*\" formControlName=\"pinCode\"/>\n        <mat-hint>4 cifre numeriche</mat-hint>\n        <mat-error *ngIf=\"formCrl.controls['pinCode'].hasError('minLength') || formCrl.controls['pinCode'].hasError('maxLength') || formCrl.controls['pinCode'].hasError('numeric')\">\n          il pin è composto da 4 cifre <strong>numeriche</strong>\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['pinCode'].hasError('required')\"> pin obbligatorio per il login </mat-error>\n      </mat-form-field>\n    </div>\n    <div class=\"login\">\n        <button mat-button color=\"primary\" [disabled]=\"formCrl.status === 'INVALID'\" (click)=\"login()\">Login</button>\n    </div>\n  </form>\n</div>\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { BarcodeFormat } from '@zxing/library';\nimport { ZXingScannerComponent } from '@zxing/ngx-scanner';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { UtenteType } from 'src/app/core/constants/utente-type.enum';\nimport { PagamentoService } from 'src/app/core/services/pagamento.service';\nimport { UtenteService } from 'src/app/core/services/utente.service';\nimport { UtentiStore } from 'src/app/core/stores/utenti.store';\n\n@Component({\n  selector: 'app-qr-code',\n  templateUrl: './qr-code.component.html',\n  styleUrls: ['./qr-code.component.scss']\n})\nexport class QrCodeComponent implements OnInit, OnDestroy {\n\n  /** standard accettati dal lettore */\n  readonly allowedFormats = [ BarcodeFormat.QR_CODE, BarcodeFormat.EAN_13];\n\n  /**\n   * scanner.\n   * documentazione: https://github.com/zxing-js/ngx-scanner/wiki/Advanced-Usage\n   */\n  @ViewChild(ZXingScannerComponent)\n  scanner: ZXingScannerComponent;\n\n  /** determina se è riuscito ad aprire o meno lo scanner */\n  statusScanner$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(private utenteService: UtenteService, private utentiStore: UtentiStore, private pagamentoService: PagamentoService) { }\n\n  ngOnInit() { }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subsc => subsc.unsubscribe());\n  }\n\n  /** alla lettura dello stato prova ad effettuare il login */\n  scanSuccessHandler(token: string) {\n    this.scanner.enable = false;\n    this.subscriptions.push(\n      this.utenteService.getUtenteByTokenOtp(token).pipe(\n        map(cliente => this.utentiStore.add(UtenteType.cliente, cliente)),\n      ).subscribe({\n        next: () =>  this.pagamentoService.handlePagamento(),\n        error: () => this.scanner.enable = true,\n      }));\n  }\n\n  /** modifica lo stato del reader, che indica se è in funzione o ha dei problemi in esecuzione */\n  readerStatus(status: boolean) {\n    this.statusScanner$.next(status);\n  }\n}\n","<!-- scanner -->\n<div [hidden]=\"!(statusScanner$ | async)\">\n  <zxing-scanner\n    class=\"qr-reader\"\n    [formats]=\"allowedFormats\"\n    (scanSuccess)=\"scanSuccessHandler($event)\"\n    (permissionResponse)=\"readerStatus($event)\"\n  ></zxing-scanner>\n</div>\n\n<!-- gestione in caso di scanner disabilitato o non funzionante -->\n<div [hidden]=\"statusScanner$ | async\">\n  <mat-icon svgIcon=\"qrcode\" class=\"qr-icon\"></mat-icon>\n  <div class=\"qr-message\">abilitare il lettore qrcode.</div>\n</div>\n","import { Directive } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator, ValidatorFn } from '@angular/forms';\n\n/** Validatore di caratteri numerici. ritorna */\nexport function numericValidator(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const isNumeric = new RegExp('^[0-9]*$').test(control.value);\n    return !isNumeric ? { 'numeric': { value: control.value } } : null;\n  };\n}\n\n@Directive({\n  selector: '[appNumeric]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: NumericDirective, multi: true }]\n})\nexport class NumericDirective implements Validator {\n\n  validate(control: AbstractControl): { [key: string]: any } | null {\n    return  numericValidator()(control);\n  }\n}\n","export { SharedModule } from './shared.module';\n\n\nexport { QrCodeComponent } from './components/qr-code/qr-code.component';\nexport { NfcComponent } from './components/nfc/nfc.component';\nexport { PinComponent } from './components/pin/pin.component';\n\n\nexport { numericValidator, NumericDirective } from './directives/numeric.directive';\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\n\nimport { CoreModule } from '../core/core.module';\nimport { ErrorPageComponent } from './components/error-page/error-page.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { LoaderComponent } from './components/loader/loader.component';\nimport { NfcComponent } from './components/nfc/nfc.component';\nimport { PinComponent } from './components/pin/pin.component';\nimport { QrCodeComponent } from './components/qr-code/qr-code.component';\nimport { NumericDirective } from './directives/numeric.directive';\n\n@NgModule({\n  declarations: [QrCodeComponent, NfcComponent, PinComponent, NumericDirective, LoaderComponent, ErrorPageComponent, ErrorComponent],\n  imports: [CommonModule, CoreModule, MatInputModule, ReactiveFormsModule, ZXingScannerModule],\n  exports: [LoaderComponent, ErrorComponent]\n})\nexport class SharedModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}