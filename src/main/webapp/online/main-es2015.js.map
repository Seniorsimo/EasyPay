{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/constants/utente-type.enum.ts","./src/app/core/core.module.ts","./src/app/core/models/error.model.ts","./src/app/core/services/conto.service.ts","./src/app/core/services/loader.service.ts","./src/app/core/services/pagamento.service.ts","./src/app/core/services/utente.service.ts","./src/app/core/stores/conti.store.ts","./src/app/core/stores/utenti.store.ts","./src/app/shared/components/error-page/error-page.component.ts","./src/app/shared/components/error-page/error-page.component.html","./src/app/shared/components/error/error.component.ts","./src/app/shared/components/error/error.component.html","./src/app/shared/components/loader/loader.component.ts","./src/app/shared/components/loader/loader.component.html","./src/app/shared/components/nfc/nfc.component.ts","./src/app/shared/components/nfc/nfc.component.html","./src/app/shared/components/pin/pin.component.ts","./src/app/shared/components/pin/pin.component.html","./src/app/shared/components/qr-code/qr-code.component.ts","./src/app/shared/components/qr-code/qr-code.component.html","./src/app/shared/directives/numeric.directive.ts","./src/app/shared/index.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PinComponent, QrCodeComponent, NfcComponent } from './shared';\nimport { ErrorPageComponent } from './shared/components/error-page/error-page.component';\nimport { HomeComponent } from './features/home/home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: '',\n        redirectTo: '/home',\n        pathMatch: 'full',\n      },\n      {\n        path: 'home',\n        loadChildren: () => import('./features/home/home.module').then(m => m.HomeModule)\n      },\n      {\n        path: 'error',\n        component: ErrorPageComponent,\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { LoaderService, LoadingStatus } from './core/services/loader.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  statusLoader$: BehaviorSubject<LoadingStatus>;\n\n  constructor(\n    public loaderService: LoaderService,\n  ) {\n    this.statusLoader$ = this.loaderService.status$;\n  }\n\n  ngOnInit() {\n  }\n}\n","<div class=\"container\">\n  <!-- loader in attesa di recuperare il conto -->\n  <ng-container *ngIf=\"!(statusLoader$ | async)\">\n    <app-loader></app-loader>\n  </ng-container>\n  <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule.forRoot(),\n    AppRoutingModule,\n    SharedModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","/** Tipologia di utente che può essere */\nexport enum UtenteType {\n  cliente = 'cliente',\n  commerciante = 'commerciante',\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { MatIconModule, MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { UtenteService } from './services/utente.service';\nimport { ContoService } from './services/conto.service';\nimport { PagamentoService } from './services/pagamento.service';\nimport { UtentiStore } from './stores/utenti.store';\nimport { ContiStore } from './stores/conti.store';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, HttpClientModule, MatIconModule],\n  exports: [MatIconModule],\n  providers: [/* No providers */],\n})\nexport class CoreModule {\n  constructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer) {\n    // aggiunge le nuova svg a material\n    matIconRegistry.addSvgIconSet(domSanitizer.bypassSecurityTrustResourceUrl('assets/svgs/mdi.svg'));\n    // matIconRegistry.addSvgIconSet(domSanitizer.bypassSecurityTrustResourceUrl('../../assets/fonts/materialdesignicons-webfont.woff'));\n  }\n\n  static forRoot(): ModuleWithProviders<CoreModule> {\n    return {\n      ngModule: CoreModule,\n      providers: [\n        UtenteService,\n        PagamentoService,\n        ContoService,\n        UtentiStore,\n        ContiStore,\n      ],\n    };\n  }\n}\n","export interface CustomError extends Error {\n  type: string;\n}\n\nexport class WrongParamError implements CustomError {\n  readonly type = CUSTOM_ERROR;\n\n  name = '';\n  message = '';\n\n  constructor(param) {\n    this.name = 'Errore nei parametri';\n    this.message = JSON.stringify(param);\n  }\n}\n\nexport const CUSTOM_ERROR = 'CUSTOM_ERROR';\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { ApiConto } from '../models/api-conto.model';\nimport { Conto } from '../models/conto.model';\nimport { CustomError, CUSTOM_ERROR, WrongParamError } from '../models/error.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContoService {\n\n  readonly emptyConto: Conto = {\n    id: '',\n    budget: 0,\n    saldo: 0,\n    availableBudget: 0,\n    idCliente: '',\n  };\n\n  constructor(private http: HttpClient) { }\n\n\n  getConto(idConto: string): Observable<Conto> {\n    if (!idConto) {\n      return throwError(new WrongParamError(idConto));\n    }\n    return this._getContoRequest(`/api/conti/${idConto}`);\n  }\n\n  getSelfConto(): Observable<Conto> {\n    return this._getContoRequest('/api/conti}/self');\n  }\n\n\n  private _getContoRequest(url: string) {\n    return this.http.get<ApiConto>(url).pipe(\n      map(result => {\n        if (result && result.id) {\n          return result;\n        } else {\n          throw { type: CUSTOM_ERROR, name: 'account not found', message: `non è stato possibile trovare l'account` };\n        }\n      }),\n      map(apiConto => ({...apiConto, id: apiConto.id + '', idCliente: apiConto.id_cliente + '' } as Conto)),\n      catchError((error) => {\n        console.error('error');\n        throw {\n          type: CUSTOM_ERROR,\n          name: 'backend error',\n          message: error,\n        };\n      })\n    );\n  }\n\n\n  /** ripulisce e restituisce il Conto ben formattato */\n  private clearConto(apiConto: ApiConto): Conto {\n    return {...apiConto, id: apiConto.id + '', idCliente: apiConto.id_cliente + '' };\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport enum LoadingStatus {\n  LOADING = '',\n  FAILED = 'FAILED',\n  SUCCESS = 'SUCCESS'\n}\n\n/** service sche gestisce il loader */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  /** Alla fine del caricamento chiude il loader e apre la modale */\n  status$: BehaviorSubject<LoadingStatus>;\n\n  constructor() {\n    this.status$ = new BehaviorSubject(LoadingStatus.LOADING);\n  }\n\n  changeStatus(status: LoadingStatus) {\n    this.status$.next(status);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { LoaderService, LoadingStatus } from 'src/app/core/services/loader.service';\n\nimport { UtenteType } from '../constants/utente-type.enum';\nimport { CUSTOM_ERROR, CustomError } from '../models/error.model';\nimport { UtentiStore } from '../stores/utenti.store';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PagamentoService {\n  prezzo$: BehaviorSubject<number> = new BehaviorSubject(0);\n\n  constructor(\n    private http: HttpClient,\n    private clientiStore: UtentiStore,\n    private router: Router,\n    private loaderService: LoaderService,\n  ) {}\n  /** Salva il valore del trasferimento da effettuare */\n  setPrezzo(value: string) {\n    const convPrezzo = Number.parseFloat(value);\n    if (!isNaN(convPrezzo)) {\n      this.prezzo$.next(Number.parseFloat(value));\n    } else {\n      throw { type: CUSTOM_ERROR, name: 'errore sul prezzo', message: 'deve essere un valore numerico' };\n    }\n  }\n\n  /** gestisce un pagamento una volta che gli store sono stati tutti inizializzati correttamente */\n  handlePagamento() {\n    this.loaderService.changeStatus(LoadingStatus.LOADING);\n    this.pagamento(\n      this.clientiStore.get(UtenteType.cliente) ? this.clientiStore.get(UtenteType.cliente).idConto : '',\n      this.clientiStore.get(UtenteType.commerciante) ? this.clientiStore.get(UtenteType.commerciante).idConto : '',\n      this.prezzo$.value // TODO: vedere che fare del prezzo\n    ).subscribe({\n      next: result => {\n        const response = { timestamp: new Date().getTime() };\n        if (window.opener) {\n          window.opener.postMessage(JSON.stringify({ success: true, ...response }), '*');\n          setInterval(() => window.close(), 1000);\n        } else {\n          console.error('Impossibile chiudere pagina');\n        }\n        this.loaderService.changeStatus(LoadingStatus.SUCCESS);\n      },\n      error: (error: CustomError) => {\n        this.loaderService.changeStatus(LoadingStatus.SUCCESS);\n        const titleLabel = 'Impossibile procedere con il pagamento';\n        window.opener.postMessage(\n          JSON.stringify({ success: false, erroCode: error.name, errorMessage: error.message }),\n          '*'\n        );\n        setInterval(() => window.close(), 1000);\n        this.router.navigateByUrl(`/error?titleLabel=${titleLabel}&content=${error.message}&error=${JSON.stringify(error)}`);\n      }\n    });\n  }\n\n  pagamento(idContoCliente: string, idContoCommerciante: string, prezzo: number): Observable<boolean> {\n    const params = {\n      from: idContoCliente,\n      to: idContoCommerciante,\n      value: prezzo + '',\n    };\n    return this.http.post('api/pagamenti', params).pipe(\n      map(result => {\n        console.error('TODO: gestire la risposta del pagamento');\n        return true;\n        // TODO: caso di saldo mancante:\n        // const message = 'Ricaricare il conto';\n        // throw { type: CUSTOM_ERROR, name: 'Saldo Insufficiente', message } as CustomError;\n      }),\n      catchError((error) => {\n        console.error('error');\n        throw {\n          type: CUSTOM_ERROR,\n          name: 'backend error',\n          message: error,\n        };\n      })\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport {\n  CUSTOM_ERROR,\n  WrongParamError,\n} from '../models/error.model';\nimport { Utente } from '../models/utente.model';\nimport { ApiUtente } from '../models/api-utente.model';\nimport { UtenteType } from '../constants/utente-type.enum';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UtenteService {\n\n  readonly emptyUtente = {\n    type: UtenteType.cliente,\n    id: '',\n    otp: '',\n    nome: '',\n    cognome: '',\n    email: '',\n    createdAt: undefined,\n    updatedAt: undefined,\n    address: '',\n    birthDate: '',\n    phone: '',\n    idConto: '',\n  };\n\n  constructor(private http: HttpClient) {\n  }\n\n  /** restituisce una variante ridotta dell'Utente senza i dati più sensibili */\n  public getUtenteNoSecurity(id: string): Observable<Utente> {\n    if (!id) {\n      return throwError(new WrongParamError({ id }));\n    }\n    return this._getUtenteHttp(id);\n  }\n\n\n  public getUtenteByPin(id: string, pin: string): Observable<Utente> {\n    if (!id || !pin) {\n      return throwError(new WrongParamError({ id, pin }));\n    }\n    return this._getUtenteHttp(id, { pin });\n  }\n\n  public getUtenteByTokenOtp(qrCode: string): Observable<Utente> {\n    const [id, otp] = qrCode.split('-');\n    if (!id || !otp) {\n      return throwError(new WrongParamError({ id, otp }));\n    }\n\n    return this._getUtenteHttp(id, { otp });\n  }\n\n  /** effettua la richiesta HTTP per verificare se il login dell'utente va a buon fine */\n  private _getUtenteHttp(\n    id: string,\n    params: { pin?: string; otp?: string } = {}\n  ): Observable<Utente> {\n    return this.http\n      .get<ApiUtente>(`/api/clienti/${id}`, { params })\n      .pipe(\n        map(result => {\n          if (result && result.id && (result.type === UtenteType.cliente || result.type === UtenteType.commerciante)) {\n            return result;\n          } else {\n            throw {\n              type: CUSTOM_ERROR,\n              name: 'account not found',\n              message: `non è stato possibile trovare l'account`,\n            };\n          }\n        }),\n        map((apiUtente) => this._cleanUtente(apiUtente)),\n        catchError((error) => {\n          console.error('error');\n          throw {\n            type: CUSTOM_ERROR,\n            name: 'backend error',\n            message: error,\n          };\n        })\n      );\n  }\n\n\n  /** riceve in input un apiUtente e modifica i parametri diversi in modo da ottenere un oggetto utente */\n  private _cleanUtente(apiUtente: ApiUtente): Utente {\n    return ({\n      type: UtenteType.cliente,\n      ...apiUtente,\n      id: apiUtente.id + '',\n      idConto: apiUtente.id_conto + '',\n      birthDate: apiUtente.birth_date,\n    } as Utente);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { UtenteType } from '../constants/utente-type.enum';\nimport { Conto } from '../models/conto.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContiStore {\n\n  private store: {[UtenteType: string]: Conto} = {};\n\n  constructor() { }\n\n  public get(id: string): Conto;\n  public get(utenteType: UtenteType, id: string = ''): Conto {\n    if (utenteType === UtenteType.cliente || utenteType === UtenteType.commerciante) {\n      return this.store[utenteType];\n    } else if (id) {\n      return this.store[Object.keys(this.store).find(key => this.store[key].id === id )];\n    }\n  }\n\n  public add(utenteType: UtenteType, conto: Conto) {\n    this.store[utenteType] = conto;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { UtenteType } from '../constants/utente-type.enum';\nimport { Utente } from '../models/utente.model';\n\n/**\n * Salva nello store i dati del commerciante e i dati del cliente.\n * Trick: il Cliente potrebbe essere un commerciante, ma all'interno dello store si usa UtenteType.cliente\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtentiStore {\n\n  private store: {[UtenteType: string]: Utente} = {};\n\n  constructor() { }\n\n\n  public get(id: string): Utente;\n  public get(utenteType: UtenteType, id: string = ''): Utente {\n    if (utenteType === UtenteType.cliente || utenteType === UtenteType.commerciante) {\n      return this.store[utenteType];\n    } else if (id) {\n      return this.store[Object.keys(this.store).find(key => this.store[key].id === id )];\n    }\n  }\n\n  public add(utenteType: UtenteType, cliente: Utente) {\n    this.store[utenteType] = cliente;\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { debounceTime, switchMap } from 'rxjs/operators';\nimport { LoaderService, LoadingStatus } from 'src/app/core/services/loader.service';\nimport { CustomError } from 'src/app/core/models/error.model';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.scss']\n})\nexport class ErrorPageComponent implements OnInit {\n\n  /** titolo della pagina di errore */\n  titleLabel$: BehaviorSubject<string>;\n\n  /** contenuto html del messaggio di errore */\n  content$: BehaviorSubject<string>;\n\n  /** oggetto errore da stampare se presente */\n  error$: BehaviorSubject<CustomError>;\n\n  constructor(private route: ActivatedRoute, private loaderService: LoaderService) {\n    this.titleLabel$ = new BehaviorSubject('Impossibile procedere con il pagamento. Se il problema persiste contattare il venditore');\n    this.content$ = new BehaviorSubject('SUGGERIMENTO PER IL VENDITORE: assicurarsi che il idConto e prezzo siano validi');\n    this.error$ = new BehaviorSubject(undefined);\n    this.loaderService.status$.next(LoadingStatus.FAILED);\n  }\n\n  ngOnInit() {\n    this.route.queryParams\n    .pipe(\n      // debounceTime evita l'emit iniziale prima che i param siano effettivamente inizializzati\n      debounceTime(200),\n      switchMap(params => {\n        if ( params.titleLabel) {\n          this.titleLabel$.next(params.titleLabel);\n        }\n        if ( params.content ) {\n          this.content$.next(params.content);\n        }\n        if ( params.error ) {\n          this.error$.next(JSON.parse(params.error));\n        }\n        return [];\n      })\n    )\n    .subscribe();\n  }\n}\n","<app-error [titleLabel]=\"titleLabel$ | async\" [content]=\"content$ | async\" [error]=\"error$ | async\"></app-error>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { CustomError } from 'src/app/core/models/error.model';\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n  /** titolo della pagina di errore */\n  @Input() titleLabel: string;\n\n  /** contenuto html del messaggio di errore */\n  @Input() content: string;\n\n  /** oggetto errore da stampare se presente */\n  @Input() error: CustomError;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<ng-container>\n  <h1 class=\"mb-0\">\n    <mat-icon svgIcon=\"alert-circle\" class=\"logo\"></mat-icon>\n  </h1>\n  <h2 class=\"logo-title mt-0\">{{titleLabel}}</h2>\n  <div [innerHTML]=\"content\"></div>\n\n  <p>{{ error | json }}</p>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<img src=\"assets/loader.gif\" alt=\"loader\">\n<mat-icon svgIcon=\"bank\" class=\"logo\"></mat-icon>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nfc',\n  templateUrl: './nfc.component.html',\n  styleUrls: ['./nfc.component.scss']\n})\nexport class NfcComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-icon svgIcon=\"nfc-variant\" class=\"nfc-icon\"></mat-icon>\n<div class=\"nfc-message\">passare il cellulare con nfc abilitato sul dispositivo per collegarsi</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { PagamentoService } from 'src/app/core/services/pagamento.service';\nimport { UtenteService } from 'src/app/core/services/utente.service';\n\nimport { numericValidator } from '../../directives/numeric.directive';\n\n@Component({\n  selector: 'app-pin',\n  templateUrl: './pin.component.html',\n  styleUrls: ['./pin.component.scss']\n})\nexport class PinComponent implements OnInit {\n  /** controller del form */\n  formCrl: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private utenteService: UtenteService,\n    private pagamentoService: PagamentoService,\n    private router: Router,\n  ) {\n    this.formCrl = this.fb.group({\n      userId: this.fb.control('', [Validators.required]),\n      pinCode: this.fb.control('', [Validators.required, numericValidator(), Validators.minLength(4), Validators.maxLength(4)])\n    });\n  }\n\n  ngOnInit() {}\n\n  login() {\n    this.utenteService.getUtenteByPin(this.formCrl.value.userId, this.formCrl.value.pinCode).subscribe({\n      next: () => this.pagamentoService.handlePagamento(),\n      error: (err) => {\n        // TODO: differenziare dal semplice errore del login per riproporre la schermata\n        console.error(err);\n        this.formCrl.controls.userId.setErrors({ WrongBE: true });\n        this.formCrl.controls.pinCode.setErrors({ WrongBE: true });\n        // const titleLabel = 'Impossibile effettuare il login';\n        // this.router.navigateByUrl(`/error?titleLabel=${titleLabel}&content=${err.message}&error=${JSON.stringify(err)}`);\n      }\n    });\n  }\n}","<div>\n  <form class=\"form\" [formGroup]=\"formCrl\">\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput placeholder=\"ID*\" formControlName=\"userId\" />\n        <mat-error *ngIf=\"formCrl.controls['userId'].hasError('required')\"> L'id utente è <strong>richiesto</strong> </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['userId'].hasError('WrongBE')\"> Id o Pin Sbagliati</mat-error>\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput type=\"password\" placeholder=\"Pin*\" formControlName=\"pinCode\"/>\n        <mat-hint>4 cifre numeriche</mat-hint>\n        <mat-error *ngIf=\"formCrl.controls['pinCode'].hasError('minLength') || formCrl.controls['pinCode'].hasError('maxLength') || formCrl.controls['pinCode'].hasError('numeric')\">\n          il pin è composto da 4 cifre <strong>numeriche</strong>\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['pinCode'].hasError('required')\"> pin obbligatorio per il login </mat-error>\n      </mat-form-field>\n    </div>\n    <div class=\"login\">\n        <button mat-button color=\"primary\" [disabled]=\"formCrl.status === 'INVALID'\" (click)=\"login()\">Login</button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { BarcodeFormat } from '@zxing/library';\nimport { ZXingScannerComponent } from '@zxing/ngx-scanner';\nimport { BehaviorSubject } from 'rxjs';\nimport { CUSTOM_ERROR } from 'src/app/core/models/error.model';\nimport { PagamentoService } from 'src/app/core/services/pagamento.service';\nimport { UtenteService } from 'src/app/core/services/utente.service';\n\n@Component({\n  selector: 'app-qr-code',\n  templateUrl: './qr-code.component.html',\n  styleUrls: ['./qr-code.component.scss']\n})\nexport class QrCodeComponent implements OnInit {\n\n  /** standard accettati dal lettore */\n  readonly allowedFormats = [ BarcodeFormat.QR_CODE, BarcodeFormat.EAN_13];\n\n  /**\n   * scanner.\n   * documentazione: https://github.com/zxing-js/ngx-scanner/wiki/Advanced-Usage\n   */\n  @ViewChild(ZXingScannerComponent)\n  scanner: ZXingScannerComponent;\n\n  /** determina se è riuscito ad aprire o meno lo scanner */\n  statusScanner$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(private utenteService: UtenteService, private pagamentoService: PagamentoService) { }\n\n  ngOnInit() { }\n\n  /** alla lettura dello stato prova ad effettuare il login */\n  scanSuccessHandler(token: string) {\n    this.scanner.enable = false;\n    this.utenteService.getUtenteByTokenOtp(token).subscribe(result => {\n      if (result.type !== CUSTOM_ERROR) {\n        this.pagamentoService.handlePagamento();\n      } else {\n        this.scanner.enable = true;\n      }\n\n    });\n  }\n\n  /** modifica lo stato del reader, che indica se è in funzione o ha dei problemi in esecuzione */\n  readerStatus(status: boolean) {\n    this.statusScanner$.next(status);\n  }\n}\n","<!-- scanner -->\n<div [hidden]=\"!(statusScanner$ | async)\">\n  <zxing-scanner\n    class=\"qr-reader\"\n    [formats]=\"allowedFormats\"\n    (scanSuccess)=\"scanSuccessHandler($event)\"\n    (permissionResponse)=\"readerStatus($event)\"\n  ></zxing-scanner>\n</div>\n\n<!-- gestione in caso di scanner disabilitato o non funzionante -->\n<div [hidden]=\"statusScanner$ | async\">\n  <mat-icon svgIcon=\"qrcode\" class=\"qr-icon\"></mat-icon>\n  <div class=\"qr-message\">abilitare il lettore qrcode.</div>\n</div>\n","import { Directive } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator, ValidatorFn } from '@angular/forms';\n\n/** Validatore di caratteri numerici. ritorna */\nexport function numericValidator(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const isNumeric = new RegExp('^[0-9]*$').test(control.value);\n    return !isNumeric ? { 'numeric': { value: control.value } } : null;\n  };\n}\n\n@Directive({\n  selector: '[appNumeric]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: NumericDirective, multi: true }]\n})\nexport class NumericDirective implements Validator {\n\n  validate(control: AbstractControl): { [key: string]: any } | null {\n    return  numericValidator()(control);\n  }\n}\n","export { SharedModule } from './shared.module';\n\n\nexport { QrCodeComponent } from './components/qr-code/qr-code.component';\nexport { NfcComponent } from './components/nfc/nfc.component';\nexport { PinComponent } from './components/pin/pin.component';\n\n\nexport { numericValidator, NumericDirective } from './directives/numeric.directive';\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\n\nimport { CoreModule } from '../core/core.module';\nimport { ErrorPageComponent } from './components/error-page/error-page.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { LoaderComponent } from './components/loader/loader.component';\nimport { NfcComponent } from './components/nfc/nfc.component';\nimport { PinComponent } from './components/pin/pin.component';\nimport { QrCodeComponent } from './components/qr-code/qr-code.component';\nimport { NumericDirective } from './directives/numeric.directive';\n\n@NgModule({\n  declarations: [QrCodeComponent, NfcComponent, PinComponent, NumericDirective, LoaderComponent, ErrorPageComponent, ErrorComponent],\n  imports: [CommonModule, CoreModule, MatInputModule, ReactiveFormsModule, ZXingScannerModule],\n  exports: [LoaderComponent, ErrorComponent]\n})\nexport class SharedModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}