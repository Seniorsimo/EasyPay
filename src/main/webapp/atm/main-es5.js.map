{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/constants/routing.constants.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/index.ts","webpack:///src/app/core/models/cliente.model.ts","webpack:///src/app/core/models/commerciante.model.ts","webpack:///src/app/core/models/error.model.ts","webpack:///src/app/core/services/cliente.service.ts","webpack:///src/app/core/services/commerciante.service.ts","webpack:///src/app/core/services/loader.service.ts","webpack:///src/app/core/services/pagamento.service.ts","webpack:///src/app/core/services/routing.service.ts","webpack:///src/app/features/home/home.component.ts","webpack:///src/app/features/home/home.component.html","webpack:///src/app/features/home/home.module.ts","webpack:///src/app/features/login-page/login-page.component.ts","webpack:///src/app/features/login-page/login-page.component.html","webpack:///src/app/features/login-page/login-page.module.ts","webpack:///src/app/features/login-page/services/login.service.ts","webpack:///src/app/features/login-page/store/login.store.ts","webpack:///src/app/features/template/template.component.ts","webpack:///src/app/features/template/template.component.html","webpack:///src/app/features/template/template.module.ts","webpack:///src/app/shared/components/banner/banner.component.ts","webpack:///src/app/shared/components/banner/banner.component.html","webpack:///src/app/shared/components/big-button/big-button.component.ts","webpack:///src/app/shared/components/big-button/big-button.component.html","webpack:///src/app/shared/components/error-page/error-page.component.ts","webpack:///src/app/shared/components/error-page/error-page.component.html","webpack:///src/app/shared/components/error/error.component.ts","webpack:///src/app/shared/components/error/error.component.html","webpack:///src/app/shared/components/loader/loader.component.ts","webpack:///src/app/shared/components/loader/loader.component.html","webpack:///src/app/shared/components/login/login.component.ts","webpack:///src/app/shared/components/login/login.component.html","webpack:///src/app/shared/components/nfc/nfc.component.ts","webpack:///src/app/shared/components/nfc/nfc.component.html","webpack:///src/app/shared/components/pin/pin.component.ts","webpack:///src/app/shared/components/pin/pin.component.html","webpack:///src/app/shared/components/qr-code/qr-code.component.ts","webpack:///src/app/shared/components/qr-code/qr-code.component.html","webpack:///src/app/shared/constants/login-type.enum.ts","webpack:///src/app/shared/directives/numeric.directive.ts","webpack:///src/app/shared/index.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","loaderService","statusLoader$","status$","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","RoutersPath","base","home","login","payment","movement","reload","baseUrl","ApiRoute","CoreModule","matIconRegistry","domSanitizer","addSvgIconSet","bypassSecurityTrustResourceUrl","ngModule","CLIENTE_TYPE","COMMERCIANTE_TYPE","WrongParamError","param","type","CUSTOM_ERROR","name","message","JSON","stringify","ClienteService","httpClient","cliente$","pin","token","nome","budget","value","params","_getClient","formData","FormData","append","post","pipe","result","success","cliente","body","next","providedIn","CommercianteService","contoCommerciante$","idConto","nomenclatura","get","commerciante","LoadingStatus","LoaderService","LOADING","status","PrezzoService","http","commercianteService","clienteService","router","prezzo$","convPrezzo","Number","parseFloat","isNaN","pagamento","subscribe","response","timestamp","Date","getTime","window","opener","postMessage","setInterval","close","console","error","titleLabel","erroCode","errorMessage","navigateByUrl","idCommerciante","idCliente","prezzo","RoutingService","activeSection","activeSection$","text","navigate","HomeComponent","routingService","buttonWidth","buttonHeight","updateHeader","gotoPayment","gotoMovements","HomeModule","LoginPageComponent","maxCol","minCol","deviceSize","breakpoint","innerWidth","warn","Math","floor","random","toString","event","target","onResize","clickInfo","LoginPageModule","LoginService","loginStore","username","password","LoginStore","pToken","localStorage","getItem","setItem","TemplateComponent","actSection","subscriptions","push","setTimeout","forEach","sub","unsubscribe","TemplateModule","BannerComponent","BigButtonComponent","clickEmitter","clickEvent","ErrorPageComponent","route","titleLabel$","content$","error$","undefined","FAILED","queryParams","content","parse","ErrorComponent","LoaderComponent","LoginComponent","loginService","LoginType","loginType","choosenLoginType","getToken","changeLogin","NfcComponent","PinComponent","fb","loginEvent","formCrl","group","userId","control","required","pinCode","minLength","maxLength","emit","QrCodeComponent","pagamentoService","allowedFormats","QR_CODE","EAN_13","statusScanner$","scanner","enable","getClienteByToken","handlePagamento","scanSuccessHandler","readerStatus","numericValidator","isNumeric","RegExp","test","NumericDirective","provide","useExisting","multi","SharedModule","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './features/home/home.component';\nimport { LoginPageComponent } from './features/login-page/login-page.component';\nimport { TemplateComponent } from './features/template/template.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TemplateComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: '/login',\n        pathMatch: 'full'\n      },\n      {\n        path: 'home',\n        component: HomeComponent\n      },\n      {\n        path: 'login',\n        component: LoginPageComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { LoadingStatus, LoaderService } from './core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  statusLoader$: BehaviorSubject<LoadingStatus>;\n\n  constructor(\n    public loaderService: LoaderService,\n  ) {\n    this.statusLoader$ = this.loaderService.status$;\n  }\n}\n","<div class=\"container\">\n  <!-- loader in attesa di recuperare il conto -->\n  <!-- <ng-container *ngIf=\"!(statusLoader$ | async)\">\n    <app-loader></app-loader>\n  </ng-container> -->\n  <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { HomeModule } from './features/home/home.module';\nimport { LoginPageModule } from './features/login-page/login-page.module';\nimport { TemplateModule } from './features/template/template.module';\nimport { SharedModule } from './shared';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule.forRoot(),\n    AppRoutingModule,\n    SharedModule,\n    TemplateModule,\n    LoginPageModule,\n    HomeModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export const RoutersPath = {\n  base: '/',\n  home: '/home',\n  login: '/login',\n  payment: '/payments',\n  movement: '/movements',\n  reload: '/reload'\n};\n\nexport const baseUrl = '';\n\nexport const ApiRoute = {\n  login: baseUrl + '/api/login'\n};\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { MatIconModule, MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { ClienteService } from './services/cliente.service';\nimport { CommercianteService } from './services/commerciante.service';\nimport { PrezzoService } from './services/pagamento.service';\nimport { RoutingService } from './services/routing.service';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, HttpClientModule, MatIconModule],\n  exports: [MatIconModule],\n  providers: [/* No providers */],\n})\nexport class CoreModule {\n  constructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer) {\n    // aggiunge le nuova svg a material\n    matIconRegistry.addSvgIconSet(domSanitizer.bypassSecurityTrustResourceUrl('assets/svgs/mdi.svg'));\n    // matIconRegistry.addSvgIconSet(domSanitizer.bypassSecurityTrustResourceUrl('../../assets/fonts/materialdesignicons-webfont.woff'));\n  }\n\n  static forRoot(): ModuleWithProviders<CoreModule> {\n    return {\n      ngModule: CoreModule,\n      providers: [\n        CommercianteService,\n        ClienteService,\n        PrezzoService,\n        RoutingService,\n      ],\n    };\n  }\n}\n","export * from './constants/routing.constants';\n\nexport { PrezzoService } from './services/pagamento.service';\nexport { CommercianteService } from './services/commerciante.service';\nexport { ClienteService } from './services/cliente.service';\nexport { LoaderService } from './services/loader.service';\nexport { LoadingStatus } from './services/loader.service';\n\nexport * from './models/error.model';\nexport * from './models/commerciante.model';\nexport * from './models/cliente.model';\n\nexport * from './models/api.response';\nexport * from './models/api.request';\n\n","export interface Cliente {\n  type: string;\n\n  id: string;\n  pin: string;\n  token: string;\n  nome: string;\n  budget: number;\n}\n\n\nexport const CLIENTE_TYPE = 'CLIENTE_TYPE';\n","/** Struttura contenente i dati del commerciante  */\nexport interface Commerciante {\n\n  type: string;\n\n  idConto: string;\n  nome: string;\n  /** nome identificativo della società */\n  nomenclatura: string;\n}\n\nexport const COMMERCIANTE_TYPE = 'COMMERCIANTE_TYPE';\n","export interface CustomError extends Error {\n  type: string;\n}\n\nexport class WrongParamError implements CustomError {\n  readonly type = CUSTOM_ERROR;\n\n  name = '';\n  message = '';\n\n  constructor(param) {\n    this.name = 'Errore nei parametri';\n    this.message = JSON.stringify(param);\n  }\n}\n\nexport const CUSTOM_ERROR = 'CUSTOM_ERROR';\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ApiResponse } from '../models/api.response';\nimport { CUSTOM_ERROR, CustomError, WrongParamError } from '../models/error.model';\nimport { Cliente, CLIENTE_TYPE } from '../models/cliente.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClienteService {\n  cliente$: BehaviorSubject<Cliente>;\n\n  constructor(private httpClient: HttpClient) {\n    this.cliente$ = new BehaviorSubject({\n      type: CLIENTE_TYPE,\n      id: '',\n      pin: '',\n      token: '',\n      nome: '',\n      budget: 0,\n    });\n  }\n\n  getClienteByPin(id: string, pin: string): Observable<Cliente | CustomError>  {\n    // se già presente nello store non riscarica i dati del cliente:\n    if (this.cliente$.value.id) {\n      return this.cliente$;\n    }\n\n    if (!id || !pin) {\n      return throwError(new WrongParamError({id, pin}));\n    }\n\n    const params: {id: string, pin: string} =  { id, pin } ;\n    return this._getClient(params);\n  }\n\n  getClienteByToken(token: string): Observable<Cliente | CustomError> {\n    // se già presente nello store non riscarica i dati del cliente:\n    if (this.cliente$.value.id) {\n      return this.cliente$;\n    }\n\n    if (!token) {\n      return throwError(new WrongParamError(token));\n    }\n\n    const params: {token: string} = { token };\n    return this._getClient(params);\n  }\n\n  /** effettua la richiesta HTTP per verificare se il login del cliente va a buon fine */\n  private _getClient(params: {id?: string, pin?: string; token?: string}): Observable<Cliente | CustomError> {\n    const formData = new FormData();\n    formData.append('id', params.id);\n    formData.append('pin', params.pin);\n    formData.append('token', params.token);\n    return this.httpClient\n      .post<ApiResponse<Cliente>>('/api/clienti', formData)\n      .pipe(\n        map(result => {\n          if (result && result.success) {\n            const cliente = { type: CLIENTE_TYPE, ...result.body };\n            this.cliente$.next(cliente);\n            return cliente;\n          } else {\n            throw { type: CUSTOM_ERROR, name: 'account not found', message: `non è stato possibile trovare l'account` };\n          }\n        })\n      );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ApiResponse } from '../models/api.response';\nimport { Commerciante, COMMERCIANTE_TYPE } from '../models/commerciante.model';\nimport { CustomError, WrongParamError, CUSTOM_ERROR } from '../models/error.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommercianteService {\n  contoCommerciante$: BehaviorSubject<Commerciante>;\n\n  constructor(private httpClient: HttpClient) {\n    this.contoCommerciante$ = new BehaviorSubject({\n      type: COMMERCIANTE_TYPE,\n      idConto: '',\n      nome: '',\n      nomenclatura: ''\n    });\n  }\n\n  getConto(idConto: string): Observable<Commerciante | CustomError> {\n    // se già presente nello store non riscarica i dati del cliente:\n    if (this.contoCommerciante$.value.idConto) {\n      return this.contoCommerciante$;\n    }\n\n    if (!idConto) {\n      return of(new WrongParamError(idConto));\n    }\n\n    return this.httpClient\n      .get<ApiResponse<Commerciante>>(`/api/commercianti/${idConto}`)\n      .pipe(\n        map(result => {\n          if (result && result.success) {\n            const commerciante = { type: COMMERCIANTE_TYPE, ...result.body };\n            this.contoCommerciante$.next(commerciante);\n            return commerciante;\n          } else {\n            throw { type: CUSTOM_ERROR, name: 'account not found', message: `non è stato possibile trovare l'account` };\n          }\n        })\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport enum LoadingStatus {\n  LOADING = '',\n  FAILED = 'FAILED',\n  SUCCESS = 'SUCCESS'\n}\n\n/** service sche gestisce il loader */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  /** Alla fine del caricamento chiude il loader e apre la modale */\n  status$: BehaviorSubject<LoadingStatus>;\n\n  constructor() {\n    this.status$ = new BehaviorSubject(LoadingStatus.LOADING);\n  }\n\n  changeStatus(status: LoadingStatus) {\n    this.status$.next(status);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { ApiRequest } from 'src/app/core/models/api.request';\nimport { ApiResponse } from 'src/app/core/models/api.response';\nimport { ClienteService } from 'src/app/core/services/cliente.service';\nimport { CommercianteService } from 'src/app/core/services/commerciante.service';\n\nimport { CUSTOM_ERROR, CustomError } from '../models/error.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrezzoService {\n  prezzo$: BehaviorSubject<number> = new BehaviorSubject(0);\n\n  constructor(\n    private http: HttpClient,\n    private commercianteService: CommercianteService,\n    private clienteService: ClienteService,\n    private router: Router\n  ) {}\n  /** Salva il valore del trasferimento da effettuare */\n  setPrezzo(value: string) {\n    const convPrezzo = Number.parseFloat(value);\n    if (!isNaN(convPrezzo)) {\n      this.prezzo$.next(Number.parseFloat(value));\n    } else {\n      throw { type: CUSTOM_ERROR, name: 'errore sul prezzo', message: 'deve essere un valore numerico' };\n    }\n  }\n\n  /** gestisce un pagamento una volta che gli store sono stati tutti inizializzati correttamente */\n  handlePagamento() {\n    this.pagamento(\n      this.commercianteService.contoCommerciante$.value.idConto,\n      this.clienteService.cliente$.value.id,\n      this.prezzo$.value\n    ).subscribe(result => {\n      const response = { timestamp: new Date().getTime() };\n      if (result.success) {\n        if (window.opener) {\n          window.opener.postMessage(JSON.stringify({ success: true, ...response }), '*');\n          setInterval(() => window.close(), 1000);\n        } else {\n          console.error('Impossibile chiudere pagina');\n        }\n      } else {\n        const titleLabel = 'Impossibile procedere con il pagamento';\n        const message = 'Ricaricare il conto';\n        const error: CustomError = { type: CUSTOM_ERROR, name: result.error.id, message: result.error.message };\n        window.opener.postMessage(\n          JSON.stringify({ success: false, erroCode: result.error.id, errorMessage: result.error.message, ...response }),\n          '*'\n        );\n        setInterval(() => window.close(), 1000);\n        this.router.navigateByUrl(`/error?titleLabel=${titleLabel}&content=${message}&error=${JSON.stringify(error)}`);\n      }\n    });\n  }\n\n  /** effettua il pagamento e da un esito dell' operazione  */\n  pagamento(idCommerciante: string, idCliente: string, prezzo: number) {\n    const params = {\n      idCommerciante,\n      idCliente,\n      prezzo, // : prezzo + ''\n    };\n    return this.http.post<ApiResponse<{ success: boolean; error?: { id: string; message: string } }>>('/api/pagamenti', params);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { RoutersPath } from '../constants/routing.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoutingService {\n\n  activeSection = '';\n  activeSection$ = new Subject<string>();\n\n\n  constructor(private router: Router) { }\n\n\n  /** gestisce l'header nel TemplateComponent */\n  updateHeader(text: string) {\n    this.activeSection = text;\n    this.activeSection$.next(text);\n  }\n\n  gotoHome() {\n    this.router.navigate([RoutersPath.home]);\n  }\n\n  gotoLogin() {\n    this.router.navigate([RoutersPath.login]);\n  }\n\n  gotoReload() {\n    this.router.navigate([RoutersPath.reload]);\n  }\n\n  gotoPayment() {\n    this.router.navigate([RoutersPath.payment]);\n  }\n\n  gotoMovement() {\n    this.router.navigate([RoutersPath.movement]);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RoutingService } from 'src/app/core/services/routing.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  readonly buttonWidth = '400px';\n  readonly buttonHeight = '250px';\n\n  constructor(private routingService: RoutingService) { }\n\n  ngOnInit(): void {\n    this.routingService.updateHeader('Home');\n  }\n\n  gotoPayment() {\n\n  }\n\n  gotoMovements() {\n\n  }\n\n}\n","<mat-grid-list cols=\"3\" rowHeight=\"2:1\" gutterSize=\"30px\">\n  <mat-grid-tile>\n    <app-big-button\n      class=\"button\"\n      label=\"Pagamento\"\n      icon=\"euro\"\n      (clickEmitter)=\"gotoPayment()\"\n    ></app-big-button>\n  </mat-grid-tile>\n  <mat-grid-tile></mat-grid-tile>\n  <mat-grid-tile>\n    <app-big-button\n      class=\"button\"\n      label=\"Info Conto\"\n      icon=\"info\"\n      (clickEmitter)=\"gotoPayment()\"\n    ></app-big-button\n  ></mat-grid-tile>\n\n  <mat-grid-tile>\n    <app-big-button\n      class=\"button\"\n      label=\"Ricarica\"\n      icon=\"publish\"\n      (clickEmitter)=\"gotoPayment()\"\n    ></app-big-button>\n  </mat-grid-tile>\n  <mat-grid-tile></mat-grid-tile>\n  <mat-grid-tile>\n    <app-big-button\n      class=\"button\"\n      label=\"Movimenti\"\n      icon=\"account_balance_wallet\"\n      (clickEmitter)=\"gotoMovements()\"\n    ></app-big-button\n  ></mat-grid-tile>\n\n  <mat-grid-tile colspan=\"3\" rowspan=\"1\">\n    <div class=\"widget-container shadow-border spam-widget\">\n      <app-banner></app-banner>\n    </div>\n  </mat-grid-tile>\n</mat-grid-list>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { SharedModule } from 'src/app/shared';\n\nimport { HomeComponent } from './home.component';\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [CommonModule, MatGridListModule, SharedModule],\n  exports: [HomeComponent]\n})\nexport class HomeModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n\n  public breakpoint: number;\n  public  maxCol = 6;\n  public  minCol = 2;\n\n  private deviceSize = 850;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.breakpoint = (window.innerWidth <= this.deviceSize) ? this.minCol : this.maxCol;\n  }\n\n  clickInfo() {\n    console.warn('not yet implement');\n  }\n\n  randomColor(): string {\n    // return 'white';\n    return '#' + Math.floor(Math.random() * 16777215).toString(16);\n  }\n\n\nonResize(event) {\n  this.breakpoint = (event.target.innerWidth <= this.deviceSize) ? this.minCol : this.maxCol;\n}\n\n}\n","<mat-grid-list [cols]=\"breakpoint\" rowHeight=\"1:1\" gutterSize=\"20px\" (window:resize)=\"onResize($event)\">\n  <mat-grid-tile colspan=\"2\" rowspan=\"2\" >\n    <div class=\"widget-container login-widget shadow-border\">\n      <app-login></app-login>\n    </div>\n  </mat-grid-tile>\n  <mat-grid-tile *ngIf=\"breakpoint ===  maxCol\" class=\"empty\" colspan=\"3\" rowspan=\"2\" ></mat-grid-tile>\n  <mat-grid-tile [colspan]=\"breakpoint ===  maxCol ? 1 : 2\" rowspan=\"1\" >\n    <app-big-button\n      class=\"info_conto\"\n      label=\"Info Conto\"\n      icon=\"info\"\n      (clickEmitter)=\"clickInfo()\"\n    ></app-big-button>\n  </mat-grid-tile>\n  <mat-grid-tile *ngIf=\"breakpoint ===  maxCol\" class=\"empty\" colspan=\"1\" rowspan=\"1\" ></mat-grid-tile>\n  <mat-grid-tile *ngIf=\"breakpoint ===  maxCol\" colspan=\"6\" rowspan=\"1\" >\n    <div class=\"widget-container shadow-border spam-widget\">\n      <app-banner></app-banner>\n    </div>\n  </mat-grid-tile>\n</mat-grid-list>\n\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../../shared';\nimport { LoginPageComponent } from './login-page.component';\nimport { LoginService } from './services/login.service';\nimport { LoginStore } from './store/login.store';\n\n@NgModule({\n  declarations: [LoginPageComponent],\n  imports: [CommonModule, SharedModule],\n  exports: [LoginPageComponent],\n  providers: [LoginService, LoginStore]\n})\nexport class LoginPageModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { ApiRoute } from '../../../core';\nimport { map } from 'rxjs/operators';\nimport { LoginStore } from '../store/login.store';\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  private pToken: string;\n\n  constructor(private http: HttpClient, private loginStore: LoginStore) { }\n\n  getToken(username: string, password: string) {\n    const params = {username, password};\n    return this.http.post<{token: string}>(ApiRoute.login, params).pipe(map(response => {\n      if (response && response.token) {\n        this.loginStore.token = response.token;\n        return response.token;\n      }\n      return '';\n    }));\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginStore {\n\n  private pToken: string;\n\n\n  public get token() {\n\n    return this.pToken || localStorage.getItem('token');\n  }\n\n  public set token(token) {\n    this.pToken = token;\n    localStorage.setItem('token', token);\n  }\n\n  constructor() { }\n\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { RoutingService } from 'src/app/core/services/routing.service';\n\n@Component({\n  selector: 'app-template',\n  templateUrl: './template.component.html',\n  styleUrls: ['./template.component.scss']\n})\nexport class TemplateComponent implements OnInit, OnDestroy {\n\n  actSection = this.routingService.activeSection;\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(public routingService: RoutingService) {}\n\n  ngOnInit(): void {\n    this.subscriptions.push(\n      this.routingService.activeSection$.subscribe(activeSection =>\n        setTimeout(() => (this.actSection = activeSection), 0)\n      )\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"\">\n      <mat-icon>more_vert</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n      <button mat-menu-item (click)=\"routingService.gotoHome()\">\n        <mat-icon>more_vert</mat-icon>\n        <span>Home</span>\n      </button>\n      <button mat-menu-item (click)=\"routingService.gotoReload()\">\n        <mat-icon>publish</mat-icon>\n        <span>Ricarica</span>\n      </button>\n      <button mat-menu-item (click)=\"routingService.gotoPayment()\">\n        <mat-icon>euro</mat-icon>\n        <span>Pagamento</span>\n      </button>\n      <button mat-menu-item (click)=\"routingService.gotoMovement()\">\n        <mat-icon>account_balance_wallet</mat-icon>\n        <span>Movimenti</span>\n      </button>\n    </mat-menu>\n\n    <span class=\"title-big\">EasyPay</span>\n    <span class=\"title-separe\"> --> </span>\n    <span class=\"title-activePage\"> {{actSection}} </span>\n  </mat-toolbar-row>\n</mat-toolbar>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TemplateComponent } from './template.component';\nimport { HomeModule } from '../home/home.module';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [TemplateComponent],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule,\n    HomeModule,\n    RouterModule,\n  ],\n  exports: [TemplateComponent],\n})\nexport class TemplateModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.scss']\n})\nexport class BannerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed rutrum diam\n  posuere, tincidunt sapien sit amet, faucibus erat. Sed semper eu quam at\n  facilisis. Suspendisse accumsan pulvinar velit eu sollicitudin. Nulla massa\n  neque, pretium a cursus at, sodales id enim. Pellentesque volutpat, ante eu\n  varius luctus, lacus magna sollicitudin risus, ut tristique odio enim\n  vulputate odio. Sed eu justo augue. Fusce sem enim, gravida ac sollicitudin\n  sit amet, sagittis ac est. Aenean aliquam vulputate sem vitae porta. Morbi\n  eget magna sapien. In in interdum ante. Ut nisi enim, fermentum sed enim\n  vitae, accumsan mattis mauris. Praesent vel nisl lorem. Vestibulum eu urna\n  feugiat, dapibus massa sit amet, laoreet lorem.\n</p>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n/**\n * Nota: <app-big-button> richiede width e height impostati a 100%\n */\n@Component({\n  selector: 'app-big-button',\n  templateUrl: './big-button.component.html',\n  styleUrls: ['./big-button.component.scss']\n})\nexport class BigButtonComponent implements OnInit {\n\n  @Input() label: string;\n  @Input() icon: string;\n\n  @Output() clickEmitter: EventEmitter<void> = new  EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  clickEvent(): void {\n    this.clickEmitter.next();\n  }\n}\n","<div class=\"button-container widget-container shadow-border\" (click)=\"clickEvent()\">\n  <div class=\"icon-content\">\n    <mat-icon class=\"icon fix-top\" aria-hidden=\"false\" [inline]=\"true\">{{icon}}</mat-icon>\n  </div>\n  <div class=\"label-body\">\n    <span class=\"label centralize\" >{{label}}</span>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { CustomError, LoaderService, LoadingStatus } from 'src/app/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { debounceTime, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.scss']\n})\nexport class ErrorPageComponent implements OnInit {\n\n  /** titolo della pagina di errore */\n  titleLabel$: BehaviorSubject<string>;\n\n  /** contenuto html del messaggio di errore */\n  content$: BehaviorSubject<string>;\n\n  /** oggetto errore da stampare se presente */\n  error$: BehaviorSubject<CustomError>;\n\n  constructor(private route: ActivatedRoute, private loaderService: LoaderService) {\n    this.titleLabel$ = new BehaviorSubject('Impossibile procedere con il pagamento. Se il problema persiste contattare il venditore');\n    this.content$ = new BehaviorSubject('SUGGERIMENTO PER IL VENDITORE: assicurarsi che il idConto e prezzo siano validi');\n    this.error$ = new BehaviorSubject(undefined);\n    this.loaderService.status$.next(LoadingStatus.FAILED);\n  }\n\n  ngOnInit() {\n    this.route.queryParams\n    .pipe(\n      // debounceTime evita l'emit iniziale prima che i param siano effettivamente inizializzati\n      debounceTime(200),\n      switchMap(params => {\n        if ( params.titleLabel) {\n          this.titleLabel$.next(params.titleLabel);\n        }\n        if ( params.content ) {\n          this.content$.next(params.content);\n        }\n        if ( params.error ) {\n          this.error$.next(JSON.parse(params.error));\n        }\n        return [];\n      })\n    )\n    .subscribe();\n  }\n}\n","<app-error [titleLabel]=\"titleLabel$ | async\" [content]=\"content$ | async\" [error]=\"error$ | async\"></app-error>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { CustomError } from 'src/app/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n  /** titolo della pagina di errore */\n  @Input() titleLabel: string;\n\n  /** contenuto html del messaggio di errore */\n  @Input() content: string;\n\n  /** oggetto errore da stampare se presente */\n  @Input() error: CustomError;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<ng-container>\n  <h1 class=\"mb-0\">\n    <mat-icon svgIcon=\"alert-circle\" class=\"logo\"></mat-icon>\n  </h1>\n  <h2 class=\"logo-title mt-0\">{{titleLabel}}</h2>\n  <div [innerHTML]=\"content\"></div>\n\n  <p>{{ error | json }}</p>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<img src=\"assets/loader.gif\" alt=\"loader\">\n<mat-icon svgIcon=\"bank\" class=\"logo\"></mat-icon>\n","import { Component, OnInit } from '@angular/core';\nimport { LoginType } from '../../constants/login-type.enum';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { LoginService } from 'src/app/features/login-page/services/login.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  readonly LoginType = LoginType;\n  public loginType = LoginType.pin;\n\n  constructor(private routingService: RoutingService, private loginService: LoginService) { }\n\n  ngOnInit(): void {\n    this.routingService.updateHeader('Login');\n  }\n\n  changeLogin(choosenLoginType: LoginType) {\n    this.loginType = choosenLoginType;\n  }\n\n  login({username, password}: { username: string, password: string}) {\n    this.loginService.getToken(username, password);\n  }\n\n}\n","<div class=\"content\">\n  <div class=\"login-body\">\n    <div *ngIf=\"loginType === LoginType.pin\" (loginEvent)=\"login($event)\"><app-pin></app-pin></div>\n    <div *ngIf=\"loginType === LoginType.qr\"><app-qr-code></app-qr-code></div>\n    <div *ngIf=\"loginType === LoginType.nfc\"><app-nfc></app-nfc></div>\n  </div>\n</div>\n<button mat-icon-button (click)=\"changeLogin(LoginType.pin)\">\n  <mat-icon svgIcon=\"textbox-password\"></mat-icon>\n</button>\n<button mat-icon-button (click)=\"changeLogin(LoginType.qr)\" class=\"mr-2 ml-2\">\n  <mat-icon svgIcon=\"qrcode\"></mat-icon>\n</button>\n<button mat-icon-button (click)=\"changeLogin(LoginType.nfc)\">\n  <mat-icon svgIcon=\"nfc-variant\"></mat-icon>\n</button>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nfc',\n  templateUrl: './nfc.component.html',\n  styleUrls: ['./nfc.component.scss']\n})\nexport class NfcComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-icon svgIcon=\"nfc-variant\" class=\"nfc-icon\"></mat-icon>\n<div class=\"nfc-message\">passare il cellulare con nfc abilitato sul dispositivo per collegarsi</div>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\n\nimport { numericValidator } from '../../directives/numeric.directive';\n\n@Component({\n  selector: 'app-pin',\n  templateUrl: './pin.component.html',\n  styleUrls: ['./pin.component.scss']\n})\nexport class PinComponent implements OnInit {\n  /** controller del form */\n  formCrl: FormGroup;\n\n  @Output() loginEvent = new EventEmitter<{username: string, password: string}>();\n\n  constructor(\n    private fb: FormBuilder\n  ) {\n    this.formCrl = this.fb.group({\n      userId: this.fb.control('', [Validators.required]),\n      pinCode: this.fb.control('', [Validators.required, numericValidator(), Validators.minLength(4), Validators.maxLength(4)])\n    });\n  }\n\n  ngOnInit() {}\n\n  login() {\n    this.loginEvent.emit({username: this.formCrl.value.userId, password: this.formCrl.value.pinCode});\n  }\n}\n","<div>\n  <form class=\"form\" [formGroup]=\"formCrl\">\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput placeholder=\"ID*\" formControlName=\"userId\" />\n        <mat-error *ngIf=\"formCrl.controls['userId'].hasError('required')\"> L'id utente è <strong>richiesto</strong> </mat-error>\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput type=\"password\" placeholder=\"Pin*\" formControlName=\"pinCode\"/>\n        <mat-hint>4 cifre numeriche</mat-hint>\n        <mat-error *ngIf=\"formCrl.controls['pinCode'].hasError('minLength') || formCrl.controls['pinCode'].hasError('maxLength') || formCrl.controls['pinCode'].hasError('numeric')\">\n          il pin è composto da 4 cifre <strong>numeriche</strong>\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['pinCode'].hasError('required')\"> pin obbligatorio per il login </mat-error>\n      </mat-form-field>\n    </div>\n    <div class=\"login\">\n        <button mat-button color=\"primary\" [disabled]=\"formCrl.status === 'INVALID'\" (click)=\"login()\">Login</button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { BarcodeFormat } from '@zxing/library';\nimport { ZXingScannerComponent } from '@zxing/ngx-scanner';\nimport { BehaviorSubject } from 'rxjs';\nimport { ClienteService, CUSTOM_ERROR, PrezzoService } from 'src/app/core';\n\n@Component({\n  selector: 'app-qr-code',\n  templateUrl: './qr-code.component.html',\n  styleUrls: ['./qr-code.component.scss']\n})\nexport class QrCodeComponent implements OnInit {\n\n  /** standard accettati dal lettore */\n  readonly allowedFormats = [ BarcodeFormat.QR_CODE, BarcodeFormat.EAN_13];\n\n  /**\n   * scanner.\n   * documentazione: https://github.com/zxing-js/ngx-scanner/wiki/Advanced-Usage\n   */\n  @ViewChild(ZXingScannerComponent)\n  scanner: ZXingScannerComponent;\n\n  /** determina se è riuscito ad aprire o meno lo scanner */\n  statusScanner$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(private clienteService: ClienteService, private pagamentoService: PrezzoService) { }\n\n  ngOnInit() { }\n\n  /** alla lettura dello stato prova ad effettuare il login */\n  scanSuccessHandler(token: string) {\n    this.scanner.enable = false;\n    this.clienteService.getClienteByToken(token).subscribe(result => {\n      if (result.type !== CUSTOM_ERROR) {\n        this.pagamentoService.handlePagamento();\n      } else {\n        this.scanner.enable = true;\n      }\n\n    });\n  }\n\n  /** modifica lo stato del reader, che indica se è in funzione o ha dei problemi in esecuzione */\n  readerStatus(status: boolean) {\n    this.statusScanner$.next(status);\n  }\n}\n","<!-- scanner -->\n<div [hidden]=\"!(statusScanner$ | async)\">\n  <zxing-scanner\n    class=\"qr-reader\"\n    [formats]=\"allowedFormats\"\n    (scanSuccess)=\"scanSuccessHandler($event)\"\n    (permissionResponse)=\"readerStatus($event)\"\n  ></zxing-scanner>\n</div>\n\n<!-- gestione in caso di scanner disabilitato o non funzionante -->\n<div [hidden]=\"statusScanner$ | async\">\n  <mat-icon svgIcon=\"qrcode\" class=\"qr-icon\"></mat-icon>\n  <div class=\"qr-message\">abilitare il lettore qrcode.</div>\n</div>\n","export enum LoginType {\n  pin= 'PIN',\n  qr= 'QR',\n  nfc= 'NFC',\n}\n","import { Directive } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator, ValidatorFn } from '@angular/forms';\n\n/** Validatore di caratteri numerici. ritorna */\nexport function numericValidator(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const isNumeric = new RegExp('^[0-9]*$').test(control.value);\n    return !isNumeric ? { 'numeric': { value: control.value } } : null;\n  };\n}\n\n@Directive({\n  selector: '[appNumeric]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: NumericDirective, multi: true }]\n})\nexport class NumericDirective implements Validator {\n\n  validate(control: AbstractControl): { [key: string]: any } | null {\n    return  numericValidator()(control);\n  }\n}\n","export { SharedModule } from './shared.module';\n\nexport { LoginType } from './constants/login-type.enum';\n\nexport { QrCodeComponent } from './components/qr-code/qr-code.component';\nexport { NfcComponent } from './components/nfc/nfc.component';\nexport { PinComponent } from './components/pin/pin.component';\nexport { LoginComponent } from './components/login/login.component';\nexport { BigButtonComponent } from './components/big-button/big-button.component';\n\n\nexport { numericValidator, NumericDirective } from './directives/numeric.directive';\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatInputModule } from '@angular/material/input';\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\n\nimport { CoreModule } from '../core/core.module';\nimport { BigButtonComponent } from './components/big-button/big-button.component';\nimport { ErrorPageComponent } from './components/error-page/error-page.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { LoaderComponent } from './components/loader/loader.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { NfcComponent } from './components/nfc/nfc.component';\nimport { PinComponent } from './components/pin/pin.component';\nimport { QrCodeComponent } from './components/qr-code/qr-code.component';\nimport { NumericDirective } from './directives/numeric.directive';\nimport { BannerComponent } from './components/banner/banner.component';\n\n@NgModule({\n  declarations: [\n    QrCodeComponent,\n    NfcComponent,\n    PinComponent,\n    NumericDirective,\n    LoaderComponent,\n    ErrorPageComponent,\n    ErrorComponent,\n    LoginComponent,\n    BigButtonComponent,\n    BannerComponent\n  ],\n  imports: [\n    CommonModule,\n    CoreModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    ReactiveFormsModule,\n    ZXingScannerModule,\n    MatGridListModule,\n  ],\n  exports: [LoaderComponent, ErrorComponent, LoginComponent, BigButtonComponent, MatGridListModule, BannerComponent]\n})\nexport class SharedModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}