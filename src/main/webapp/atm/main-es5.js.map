{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/constants/routing.constants.ts","webpack:///src/app/core/constants/user-type.enum.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/guards/auth-guard.service.ts","webpack:///src/app/core/guards/no-login-guard.service.ts","webpack:///src/app/core/index.ts","webpack:///src/app/core/models/cliente.model.ts","webpack:///src/app/core/models/commerciante.model.ts","webpack:///src/app/core/models/error.model.ts","webpack:///src/app/core/services/cliente.service.ts","webpack:///src/app/core/services/commerciante.service.ts","webpack:///src/app/core/services/loader.service.ts","webpack:///src/app/core/services/local-storage.service.ts","webpack:///src/app/core/services/pagamento.service.ts","webpack:///src/app/core/services/routing.service.ts","webpack:///src/app/features/home/home.component.ts","webpack:///src/app/features/home/home.component.html","webpack:///src/app/features/home/home.module.ts","webpack:///src/app/features/login-page/login-page.component.ts","webpack:///src/app/features/login-page/login-page.component.html","webpack:///src/app/features/login-page/login-page.module.ts","webpack:///src/app/features/login-page/services/login.service.ts","webpack:///src/app/features/login-page/store/auth.store.ts","webpack:///src/app/features/payments/payments.component.ts","webpack:///src/app/features/payments/payments.component.html","webpack:///src/app/features/payments/payments.module.ts","webpack:///src/app/features/template/template.component.ts","webpack:///src/app/features/template/template.component.html","webpack:///src/app/features/template/template.module.ts","webpack:///src/app/shared/components/banner/banner.component.ts","webpack:///src/app/shared/components/banner/banner.component.html","webpack:///src/app/shared/components/big-button/big-button.component.ts","webpack:///src/app/shared/components/big-button/big-button.component.html","webpack:///src/app/shared/components/error-page/error-page.component.ts","webpack:///src/app/shared/components/error-page/error-page.component.html","webpack:///src/app/shared/components/error/error.component.ts","webpack:///src/app/shared/components/error/error.component.html","webpack:///src/app/shared/components/info-widget/info-widget.component.ts","webpack:///src/app/shared/components/info-widget/info-widget.component.html","webpack:///src/app/shared/components/join/join.component.ts","webpack:///src/app/shared/components/join/join.component.html","webpack:///src/app/shared/components/join/parts/abstract-join-part/abstract-join-part.component.ts","webpack:///src/app/shared/components/join/parts/abstract-join-part/abstract-join-part.component.html","webpack:///src/app/shared/components/join/parts/join-dashboard/join-dashboard.component.ts","webpack:///src/app/shared/components/join/parts/join-dashboard/join-dashboard.component.html","webpack:///src/app/shared/components/join/parts/join-part0/join-part0.component.ts","webpack:///src/app/shared/components/join/parts/join-part0/join-part0.component.html","webpack:///src/app/shared/components/join/parts/join-part1/join-part1.component.ts","webpack:///src/app/shared/components/join/parts/join-part1/join-part1.component.html","webpack:///src/app/shared/components/join/parts/join-part2/join-part2.component.ts","webpack:///src/app/shared/components/join/parts/join-part2/join-part2.component.html","webpack:///src/app/shared/components/join/parts/join-part3/join-part3.component.ts","webpack:///src/app/shared/components/join/parts/join-part3/join-part3.component.html","webpack:///src/app/shared/components/loader/loader.component.ts","webpack:///src/app/shared/components/loader/loader.component.html","webpack:///src/app/shared/components/login/login.component.ts","webpack:///src/app/shared/components/login/login.component.html","webpack:///src/app/shared/components/nfc/nfc.component.ts","webpack:///src/app/shared/components/nfc/nfc.component.html","webpack:///src/app/shared/components/pin/pin.component.ts","webpack:///src/app/shared/components/pin/pin.component.html","webpack:///src/app/shared/components/qr-code/qr-code.component.ts","webpack:///src/app/shared/components/qr-code/qr-code.component.html","webpack:///src/app/shared/components/recognition/recognition.component.ts","webpack:///src/app/shared/components/recognition/recognition.component.html","webpack:///src/app/shared/constants/login-type.enum.ts","webpack:///src/app/shared/directives/numeric.directive.ts","webpack:///src/app/shared/index.ts","webpack:///src/app/shared/pipes/min.pipe.ts","webpack:///src/app/shared/pipes/switch-number.pipe.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","base","redirectTo","pathMatch","home","canActivate","login","payment","AppRoutingModule","forRoot","imports","AppComponent","loaderService","statusLoader$","status$","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","RoutersPath","movement","reload","baseUrl","apiUrl","ApiRoute","logout","clienti","UserType","CoreModule","matIconRegistry","domSanitizer","addSvgIconSet","bypassSecurityTrustResourceUrl","ngModule","AuthGuard","router","loginStore","token","navigate","providedIn","NoLoginGuard","CLIENTE_TYPE","COMMERCIANTE_TYPE","WrongParamError","param","type","CUSTOM_ERROR","name","message","JSON","stringify","ClienteService","httpClient","cliente$","pin","nome","budget","value","params","_getClient","formData","FormData","append","post","pipe","result","success","cliente","body","next","CommercianteService","contoCommerciante$","idConto","nomenclatura","get","commerciante","LoadingStatus","LoaderService","LOADING","status","LocalStorageService","item","localStorage","getItem","parse","undefined","removeItem","setItem","PrezzoService","http","commercianteService","clienteService","prezzo$","convPrezzo","Number","parseFloat","isNaN","pagamento","subscribe","response","timestamp","Date","getTime","window","opener","postMessage","setInterval","close","console","error","titleLabel","erroCode","errorMessage","navigateByUrl","idCommerciante","idCliente","prezzo","RoutingService","activeSection","activeSection$","text","HomeComponent","routingService","buttonWidth","buttonHeight","updateHeader","gotoPayment","gotoMovements","HomeModule","FormTypes","LoginPageComponent","formType","maxCol","minCol","deviceSize","breakpoint","innerWidth","warn","event","target","onResize","clickInfo","LoginPageModule","LoginService","authStore","username","password","AuthStore","localStorageService","pToken","PaymentsComponent","PaymentsModule","TemplateComponent","loginService","menuItems","label","icon","clickEvent","gotoHome","isVisible","isLogin","gotoReload","gotoMovement","actSection","subscriptions","push","setTimeout","forEach","sub","unsubscribe","gotoLogin","some","TemplateModule","BannerComponent","BigButtonComponent","clickEmitter","ErrorPageComponent","route","titleLabel$","content$","error$","FAILED","queryParams","content","ErrorComponent","InfoWidgetComponent","JoinComponent","resolver","maxPage","data","loginRequest","page","container","clear","loadComponent","factory","resolveComponentFactory","componentRef","createComponent","instance","pg","validate","getValue","setPage","read","AbstractJoinPartComponent","formCrl","valid","validateAllFormFields","formGroup","Object","controls","field","control","markAsTouched","onlySelf","JoinDashboardComponent","changePage","emit","backPage","nextPage","JoinPart0Component","fb","valuesOutput","group","required","minLength","maxLength","JoinPart1Component","cognome","cf","JoinPart2Component","userType","customer","piva","disabled","ragSoc","valueChanges","disable","enable","StatusEnum","JoinPart3Component","waiting","failed","LoaderComponent","LoginComponent","joinRequest","getToken","join","NfcComponent","PinComponent","loginEvent","userId","QrCodeComponent","pagamentoService","allowedFormats","QR_CODE","EAN_13","statusScanner$","scanner","getClienteByToken","handlePagamento","scanSuccessHandler","readerStatus","RecognitionComponent","LoginType","loginType","choosenLoginType","changeLogin","numericValidator","isNumeric","RegExp","test","NumericDirective","provide","useExisting","multi","MinPipe","values","Array","isArray","n","Math","min","SwitchNumberPipe","switchFn","length","equal","SharedModule","entryComponents","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './features/home/home.component';\nimport { LoginPageComponent } from './features/login-page/login-page.component';\nimport { TemplateComponent } from './features/template/template.component';\nimport { AuthGuard } from './core/guards/auth-guard.service';\nimport { NoLoginGuard } from './core/guards/no-login-guard.service';\nimport { PaymentsComponent } from './features/payments/payments.component';\nimport { RoutersPath } from './core';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TemplateComponent,\n    children: [\n      {\n        path: RoutersPath.base,\n        redirectTo: '/login',\n        pathMatch: 'full'\n      },\n      {\n        path: RoutersPath.home,\n        component: HomeComponent,\n        canActivate: [AuthGuard],\n      },\n      {\n        path: RoutersPath.login,\n        component: LoginPageComponent,\n        canActivate: [NoLoginGuard],\n      },\n      {\n        path: RoutersPath.payment,\n        component: PaymentsComponent,\n        canActivate: [AuthGuard],\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { LoadingStatus, LoaderService } from './core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  statusLoader$: BehaviorSubject<LoadingStatus>;\n\n  constructor(\n    public loaderService: LoaderService,\n  ) {\n    this.statusLoader$ = this.loaderService.status$;\n  }\n}\n","<div class=\"container\">\n  <!-- loader in attesa di recuperare il conto -->\n  <!-- <ng-container *ngIf=\"!(statusLoader$ | async)\">\n    <app-loader></app-loader>\n  </ng-container> -->\n  <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { HomeModule } from './features/home/home.module';\nimport { LoginPageModule } from './features/login-page/login-page.module';\nimport { PaymentsModule } from './features/payments/payments.module';\nimport { TemplateModule } from './features/template/template.module';\nimport { SharedModule } from './shared';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule.forRoot(),\n    AppRoutingModule,\n    SharedModule,\n    TemplateModule,\n    LoginPageModule,\n    HomeModule,\n    PaymentsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { environment } from 'src/environments/environment';\n\nexport const RoutersPath = {\n  base: '',\n  home: 'home',\n  login: 'login',\n  payment: 'payments',\n  movement: 'movements',\n  reload: 'reload'\n};\n\nexport const baseUrl = environment.apiUrl;\n\nexport const ApiRoute = {\n  login: baseUrl + 'api/login',\n  logout: baseUrl + 'api/logout',\n  clienti: baseUrl + 'api/clienti',\n};\n","/** Tipologia di utente che può essere */\nexport enum UserType {\n  customer = 'cliente',\n  merchant = 'commerciante',\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { MatIconModule, MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { AuthGuard } from './guards/auth-guard.service';\nimport { NoLoginGuard } from './guards/no-login-guard.service';\nimport { ClienteService } from './services/cliente.service';\nimport { CommercianteService } from './services/commerciante.service';\nimport { LoaderService } from './services/loader.service';\nimport { LocalStorageService } from './services/local-storage.service';\nimport { PrezzoService } from './services/pagamento.service';\nimport { RoutingService } from './services/routing.service';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, HttpClientModule, MatIconModule],\n  exports: [MatIconModule],\n  providers: [\n    /* No providers */\n  ]\n})\nexport class CoreModule {\n  constructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer) {\n    // aggiunge le nuova svg a material\n    matIconRegistry.addSvgIconSet(\n      domSanitizer.bypassSecurityTrustResourceUrl('assets/svgs/mdi.svg')\n    );\n    // matIconRegistry.addSvgIconSet(domSanitizer.bypassSecurityTrustResourceUrl('../../assets/fonts/materialdesignicons-webfont.woff'));\n  }\n\n  static forRoot(): ModuleWithProviders<CoreModule> {\n    return {\n      ngModule: CoreModule,\n      providers: [\n        CommercianteService,\n        ClienteService,\n        PrezzoService,\n        RoutingService,\n        AuthGuard,\n        NoLoginGuard,\n        LoaderService,\n        LocalStorageService\n      ]\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthStore } from 'src/app/features/login-page/store/auth.store';\nimport { RoutersPath } from '../constants/routing.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router, private loginStore: AuthStore) { }\n\n  canActivate(): boolean {\n    if (!this.loginStore.token) {\n      this.router.navigate([RoutersPath.login]);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthStore } from 'src/app/features/login-page/store/auth.store';\nimport { RoutersPath } from '../constants/routing.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoLoginGuard {\n\n  constructor(private router: Router, private loginStore: AuthStore) { }\n\n  canActivate(): boolean {\n    if (this.loginStore.token) {\n      this.router.navigate([RoutersPath.home]);\n      return false;\n    }\n    return true;\n  }\n}\n","export * from './constants/routing.constants';\n\nexport { PrezzoService } from './services/pagamento.service';\nexport { CommercianteService } from './services/commerciante.service';\nexport { ClienteService } from './services/cliente.service';\nexport { LoaderService } from './services/loader.service';\nexport { LoadingStatus } from './services/loader.service';\nexport { LocalStorageService } from './services/local-storage.service';\n\nexport * from './models/error.model';\nexport * from './models/commerciante.model';\nexport * from './models/cliente.model';\n\nexport * from './models/api.response';\nexport * from './models/api.request';\n\n","export interface Cliente {\n  type: string;\n\n  id: string;\n  pin: string;\n  token: string;\n  nome: string;\n  budget: number;\n}\n\n\nexport const CLIENTE_TYPE = 'CLIENTE_TYPE';\n","/** Struttura contenente i dati del commerciante  */\nexport interface Commerciante {\n\n  type: string;\n\n  idConto: string;\n  nome: string;\n  /** nome identificativo della società */\n  nomenclatura: string;\n}\n\nexport const COMMERCIANTE_TYPE = 'COMMERCIANTE_TYPE';\n","export interface CustomError extends Error {\n  type: string;\n}\n\nexport class WrongParamError implements CustomError {\n  readonly type = CUSTOM_ERROR;\n\n  name = '';\n  message = '';\n\n  constructor(param) {\n    this.name = 'Errore nei parametri';\n    this.message = JSON.stringify(param);\n  }\n}\n\nexport const CUSTOM_ERROR = 'CUSTOM_ERROR';\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ApiResponse } from '../models/api.response';\nimport { CUSTOM_ERROR, CustomError, WrongParamError } from '../models/error.model';\nimport { Cliente, CLIENTE_TYPE } from '../models/cliente.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClienteService {\n  cliente$: BehaviorSubject<Cliente>;\n\n  constructor(private httpClient: HttpClient) {\n    this.cliente$ = new BehaviorSubject({\n      type: CLIENTE_TYPE,\n      id: '',\n      pin: '',\n      token: '',\n      nome: '',\n      budget: 0,\n    });\n  }\n\n  getClienteByPin(id: string, pin: string): Observable<Cliente | CustomError>  {\n    // se già presente nello store non riscarica i dati del cliente:\n    if (this.cliente$.value.id) {\n      return this.cliente$;\n    }\n\n    if (!id || !pin) {\n      return throwError(new WrongParamError({id, pin}));\n    }\n\n    const params: {id: string, pin: string} =  { id, pin } ;\n    return this._getClient(params);\n  }\n\n  getClienteByToken(token: string): Observable<Cliente | CustomError> {\n    // se già presente nello store non riscarica i dati del cliente:\n    if (this.cliente$.value.id) {\n      return this.cliente$;\n    }\n\n    if (!token) {\n      return throwError(new WrongParamError(token));\n    }\n\n    const params: {token: string} = { token };\n    return this._getClient(params);\n  }\n\n  /** effettua la richiesta HTTP per verificare se il login del cliente va a buon fine */\n  private _getClient(params: {id?: string, pin?: string; token?: string}): Observable<Cliente | CustomError> {\n    const formData = new FormData();\n    formData.append('id', params.id);\n    formData.append('pin', params.pin);\n    formData.append('token', params.token);\n    return this.httpClient\n      .post<ApiResponse<Cliente>>('/api/clienti', formData)\n      .pipe(\n        map(result => {\n          if (result && result.success) {\n            const cliente = { type: CLIENTE_TYPE, ...result.body };\n            this.cliente$.next(cliente);\n            return cliente;\n          } else {\n            throw { type: CUSTOM_ERROR, name: 'account not found', message: `non è stato possibile trovare l'account` };\n          }\n        })\n      );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ApiResponse } from '../models/api.response';\nimport { Commerciante, COMMERCIANTE_TYPE } from '../models/commerciante.model';\nimport { CustomError, WrongParamError, CUSTOM_ERROR } from '../models/error.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommercianteService {\n  contoCommerciante$: BehaviorSubject<Commerciante>;\n\n  constructor(private httpClient: HttpClient) {\n    this.contoCommerciante$ = new BehaviorSubject({\n      type: COMMERCIANTE_TYPE,\n      idConto: '',\n      nome: '',\n      nomenclatura: ''\n    });\n  }\n\n  getConto(idConto: string): Observable<Commerciante | CustomError> {\n    // se già presente nello store non riscarica i dati del cliente:\n    if (this.contoCommerciante$.value.idConto) {\n      return this.contoCommerciante$;\n    }\n\n    if (!idConto) {\n      return of(new WrongParamError(idConto));\n    }\n\n    return this.httpClient\n      .get<ApiResponse<Commerciante>>(`/api/commercianti/${idConto}`)\n      .pipe(\n        map(result => {\n          if (result && result.success) {\n            const commerciante = { type: COMMERCIANTE_TYPE, ...result.body };\n            this.contoCommerciante$.next(commerciante);\n            return commerciante;\n          } else {\n            throw { type: CUSTOM_ERROR, name: 'account not found', message: `non è stato possibile trovare l'account` };\n          }\n        })\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport enum LoadingStatus {\n  LOADING = '',\n  FAILED = 'FAILED',\n  SUCCESS = 'SUCCESS'\n}\n\n/** service sche gestisce il loader */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  /** Alla fine del caricamento chiude il loader e apre la modale */\n  status$: BehaviorSubject<LoadingStatus>;\n\n  constructor() {\n    this.status$ = new BehaviorSubject(LoadingStatus.LOADING);\n  }\n\n  changeStatus(status: LoadingStatus) {\n    this.status$.next(status);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n\n  constructor() { }\n\n  public getItem(name: string) {\n    const item = localStorage.getItem(name);\n    return JSON.parse(!item || item === 'undefined' ? null : item);\n  }\n\n  public setItem(name: string, value: any) {\n    if (value === undefined) {\n      localStorage.removeItem(name);\n    } else {\n      localStorage.setItem(name, JSON.stringify(value));\n    }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { ApiResponse } from 'src/app/core/models/api.response';\nimport { ClienteService } from 'src/app/core/services/cliente.service';\nimport { CommercianteService } from 'src/app/core/services/commerciante.service';\n\nimport { CUSTOM_ERROR, CustomError } from '../models/error.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrezzoService {\n  prezzo$: BehaviorSubject<number> = new BehaviorSubject(0);\n\n  constructor(\n    private http: HttpClient,\n    private commercianteService: CommercianteService,\n    private clienteService: ClienteService,\n    private router: Router\n  ) {}\n  /** Salva il valore del trasferimento da effettuare */\n  setPrezzo(value: string) {\n    const convPrezzo = Number.parseFloat(value);\n    if (!isNaN(convPrezzo)) {\n      this.prezzo$.next(Number.parseFloat(value));\n    } else {\n      throw { type: CUSTOM_ERROR, name: 'errore sul prezzo', message: 'deve essere un valore numerico' };\n    }\n  }\n\n  /** gestisce un pagamento una volta che gli store sono stati tutti inizializzati correttamente */\n  handlePagamento() {\n    this.pagamento(\n      this.commercianteService.contoCommerciante$.value.idConto,\n      this.clienteService.cliente$.value.id,\n      this.prezzo$.value\n    ).subscribe(result => {\n      const response = { timestamp: new Date().getTime() };\n      if (result.success) {\n        if (window.opener) {\n          window.opener.postMessage(JSON.stringify({ success: true, ...response }), '*');\n          setInterval(() => window.close(), 1000);\n        } else {\n          console.error('Impossibile chiudere pagina');\n        }\n      } else {\n        const titleLabel = 'Impossibile procedere con il pagamento';\n        const message = 'Ricaricare il conto';\n        const error: CustomError = { type: CUSTOM_ERROR, name: result.error.id, message: result.error.message };\n        window.opener.postMessage(\n          JSON.stringify({ success: false, erroCode: result.error.id, errorMessage: result.error.message, ...response }),\n          '*'\n        );\n        setInterval(() => window.close(), 1000);\n        this.router.navigateByUrl(`/error?titleLabel=${titleLabel}&content=${message}&error=${JSON.stringify(error)}`);\n      }\n    });\n  }\n\n  /** effettua il pagamento e da un esito dell' operazione  */\n  pagamento(idCommerciante: string, idCliente: string, prezzo: number) {\n    const params = {\n      idCommerciante,\n      idCliente,\n      prezzo, // : prezzo + ''\n    };\n    return this.http.post<ApiResponse<{ success: boolean; error?: { id: string; message: string } }>>('/api/pagamenti', params);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { RoutersPath } from '../constants/routing.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoutingService {\n\n  activeSection = '';\n  activeSection$ = new Subject<string>();\n\n\n  constructor(private router: Router) { }\n\n\n  /** gestisce l'header nel TemplateComponent */\n  updateHeader(text: string) {\n    this.activeSection = text;\n    this.activeSection$.next(text);\n  }\n\n  gotoHome() {\n    this.router.navigate([RoutersPath.home]);\n  }\n\n  gotoLogin() {\n    this.router.navigate([RoutersPath.login]);\n  }\n\n  gotoReload() {\n    this.router.navigate([RoutersPath.reload]);\n  }\n\n  gotoPayment() {\n    this.router.navigate([RoutersPath.payment]);\n  }\n\n  gotoMovement() {\n    this.router.navigate([RoutersPath.movement]);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RoutingService } from 'src/app/core/services/routing.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  readonly buttonWidth = '400px';\n  readonly buttonHeight = '250px';\n\n  constructor(private routingService: RoutingService) { }\n\n  ngOnInit(): void {\n    this.routingService.updateHeader('Home');\n  }\n\n  gotoPayment() {\n    this.routingService.gotoPayment();\n  }\n\n  gotoMovements() {\n\n  }\n\n}\n","<mat-grid-list cols=\"3\" rowHeight=\"2:1\" gutterSize=\"30px\">\n  <mat-grid-tile>\n    <app-big-button\n      class=\"button\"\n      label=\"Pagamento\"\n      icon=\"euro\"\n      (clickEmitter)=\"gotoPayment()\"\n    ></app-big-button>\n  </mat-grid-tile>\n  <mat-grid-tile></mat-grid-tile>\n  <mat-grid-tile>\n    <app-big-button\n      class=\"button\"\n      label=\"Info Conto\"\n      icon=\"info\"\n      (clickEmitter)=\"gotoPayment()\"\n    ></app-big-button\n  ></mat-grid-tile>\n\n  <mat-grid-tile>\n    <app-big-button\n      class=\"button\"\n      label=\"Ricarica\"\n      icon=\"publish\"\n      (clickEmitter)=\"gotoPayment()\"\n    ></app-big-button>\n  </mat-grid-tile>\n  <mat-grid-tile></mat-grid-tile>\n  <mat-grid-tile>\n    <app-big-button\n      class=\"button\"\n      label=\"Movimenti\"\n      icon=\"account_balance_wallet\"\n      (clickEmitter)=\"gotoMovements()\"\n    ></app-big-button\n  ></mat-grid-tile>\n\n  <mat-grid-tile colspan=\"3\" rowspan=\"1\">\n    <div class=\"widget-container shadow-border spam-widget\">\n      <app-banner></app-banner>\n    </div>\n  </mat-grid-tile>\n</mat-grid-list>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from 'src/app/shared';\n\nimport { HomeComponent } from './home.component';\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [CommonModule, SharedModule],\n  exports: [HomeComponent]\n})\nexport class HomeModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { RoutingService } from 'src/app/core/services/routing.service';\n\nenum FormTypes {\n  login = 'Login',\n  join = 'Join'\n}\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n  readonly FormTypes = FormTypes;\n\n\n  public formType: FormTypes = FormTypes.login;\n\n  public breakpoint: number;\n  public  maxCol = 6;\n  public  minCol = 2;\n\n  private deviceSize = 850;\n\n  constructor(private routingService: RoutingService ) { }\n\n  ngOnInit(): void {\n    this.breakpoint = (window.innerWidth <= this.deviceSize) ? this.minCol : this.maxCol;\n    this.routingService.updateHeader('Login');\n  }\n\n  clickInfo() {\n    console.warn('not yet implement');\n  }\n\n  onResize(event) {\n    this.breakpoint = (event.target.innerWidth <= this.deviceSize) ? this.minCol : this.maxCol;\n  }\n\n  switchForm(formType: FormTypes) {\n    this.formType = formType;\n  }\n\n}\n","<mat-grid-list [cols]=\"breakpoint\" rowHeight=\"1:1\" gutterSize=\"20px\" (window:resize)=\"onResize($event)\">\n  <mat-grid-tile colspan=\"2\" rowspan=\"2\" >\n    <div class=\"widget-container login-widget shadow-border\">\n      <app-login *ngIf=\"formType === FormTypes.login\" (joinRequest)=\"switchForm(FormTypes.join)\"></app-login>\n      <app-join *ngIf=\"formType === FormTypes.join\" (loginRequest)=\"switchForm(FormTypes.login)\"></app-join>\n    </div>\n  </mat-grid-tile>\n  <mat-grid-tile *ngIf=\"breakpoint ===  maxCol\" class=\"empty\" colspan=\"3\" rowspan=\"2\" ></mat-grid-tile>\n  <mat-grid-tile [colspan]=\"breakpoint ===  maxCol ? 1 : 2\" rowspan=\"1\" >\n    <app-big-button\n      class=\"info_conto\"\n      label=\"Info Conto\"\n      icon=\"info\"\n      (clickEmitter)=\"clickInfo()\"\n    ></app-big-button>\n  </mat-grid-tile>\n  <mat-grid-tile *ngIf=\"breakpoint ===  maxCol\" class=\"empty\" colspan=\"1\" rowspan=\"1\" ></mat-grid-tile>\n  <mat-grid-tile *ngIf=\"breakpoint ===  maxCol\" colspan=\"6\" rowspan=\"1\" >\n    <div class=\"widget-container shadow-border spam-widget\">\n      <app-banner></app-banner>\n    </div>\n  </mat-grid-tile>\n</mat-grid-list>\n\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../../shared';\nimport { LoginPageComponent } from './login-page.component';\nimport { LoginService } from './services/login.service';\nimport { AuthStore } from './store/auth.store';\n\n@NgModule({\n  declarations: [LoginPageComponent],\n  imports: [CommonModule, SharedModule],\n  exports: [LoginPageComponent],\n  providers: [LoginService, AuthStore]\n})\nexport class LoginPageModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { ApiRoute } from '../../../core';\nimport { map, catchError } from 'rxjs/operators';\nimport { AuthStore } from '../store/auth.store';\nimport { of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  constructor(private http: HttpClient, private authStore: AuthStore) {}\n\n  getToken(username: string, password: string) {\n    const params = { username, password };\n    return this.http.post<{ token: string }>(ApiRoute.login, params).pipe(\n      map((response) => {\n        if (response && response.token) {\n          this.authStore.token = response.token;\n          return response.token;\n        }\n        return '';\n      })\n    );\n  }\n\n  /** */\n  logout() {\n    return this.http.post(ApiRoute.logout, {}).pipe(\n      map((response) => {\n        if (response) {\n          this.authStore.token = undefined;\n        }\n        return true;\n      }),\n      catchError(error => {\n        console.error(error);\n        this.authStore.token = undefined;\n        return of(false);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { LocalStorageService } from 'src/app/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthStore {\n\n  private pToken: string;\n\n\n  public get token() {\n    if (!this.pToken) {\n      this.pToken = this.localStorageService.getItem('token');\n    }\n    return this.pToken;\n  }\n\n  public set token(token) {\n    this.pToken = token;\n    this.localStorageService.setItem('token', token);\n  }\n\n  constructor(private localStorageService: LocalStorageService) { }\n\n}\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { RoutingService } from 'src/app/core/services/routing.service';\n\n\n@Component({\n  selector: 'app-payments',\n  templateUrl: './payments.component.html',\n  styleUrls: ['./payments.component.scss']\n})\nexport class PaymentsComponent implements OnInit, AfterViewInit {\n\n\n\n  public breakpoint: number;\n  public  maxCol = 2;\n  public  minCol = 1;\n\n  private deviceSize = 1180;\n\n\n  constructor(private routingService: RoutingService) { }\n\n  ngOnInit(): void {\n    this.breakpoint = (window.innerWidth <= this.deviceSize) ? this.minCol : this.maxCol;\n  }\n\n  ngAfterViewInit() {\n    this.routingService.updateHeader('Pagamento');\n  }\n\n  onResize(event) {\n    this.breakpoint = (event.target.innerWidth <= this.deviceSize) ? this.minCol : this.maxCol;\n  }\n}\n","<mat-grid-list [cols]=\"breakpoint\" rowHeight=\"2:1\" gutterSize=\"20px\" (window:resize)=\"onResize($event)\">\n  <mat-grid-tile colspan=\"1\" rowspan=\"1\">\n    <app-recognition class=\"relative widget-container shadow-border recognition \"></app-recognition>\n  </mat-grid-tile>\n  <mat-grid-tile colspan=\"1\" rowspan=\"1\">\n    <app-info-widget class=\"relative widget-container shadow-border info-table\" title=\"Personale\" numConto=\"xxxxxxxxxx\" name=\"Franco Rossi\" regSocial=\"Gelateria Buongusto\" address=\" via colombo, 45, Torino\"  ></app-info-widget>\n  </mat-grid-tile>\n  <mat-grid-tile [colspan]=\"[2, breakpoint] | min\" rowspan=\"1\">\n    <div class=\"widget-container shadow-border spam-widget\">\n      <app-banner></app-banner>\n    </div>\n  </mat-grid-tile>\n</mat-grid-list>\n\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../../shared';\nimport { PaymentsComponent } from './payments.component';\n\n\n\n@NgModule({\n  declarations: [PaymentsComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n  ],\n  exports: [PaymentsComponent]\n})\nexport class PaymentsModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { AuthStore } from '../login-page/store/auth.store';\nimport { LoginService } from '../login-page/services/login.service';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-template',\n  templateUrl: './template.component.html',\n  styleUrls: ['./template.component.scss']\n})\nexport class TemplateComponent implements OnInit, OnDestroy {\n\n  public menuItems: { label: string, icon: string, clickEvent: () => void, isVisible: () => boolean }[] = [\n    {\n      label: 'Home',\n      icon: 'more_vert',\n      clickEvent: () => this.routingService.gotoHome(),\n      isVisible: () => this.isLogin(),\n    },\n    {\n      label: 'Ricarica',\n      icon: 'publish',\n      clickEvent: () => this.routingService.gotoReload(),\n      isVisible: () => this.isLogin(),\n    },\n    {\n      label: 'Pagamento',\n      icon: 'euro',\n      clickEvent: () => this.routingService.gotoPayment(),\n      isVisible: () => this.isLogin(),\n    },\n    {\n      label: 'Movimenti',\n      icon: 'account_balance_wallet',\n      clickEvent: () => this.routingService.gotoMovement(),\n      isVisible: () => this.isLogin(),\n    },\n    {\n      label: 'Logout',\n      icon: 'lock',\n      clickEvent: () => this.logout(),\n      isVisible: () => this.isLogin(),\n    },\n  ];\n\n  actSection = this.routingService.activeSection;\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(public routingService: RoutingService, private authStore: AuthStore, private loginService: LoginService) {}\n\n  ngOnInit(): void {\n    this.subscriptions.push(\n      this.routingService.activeSection$.subscribe(activeSection =>\n        setTimeout(() => (this.actSection = activeSection), 0)\n      )\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n\n  isLogin(): boolean {\n    return !!this.authStore.token;\n  }\n\n  logout() {\n    this.loginService.logout().subscribe(() => {\n      this.routingService.gotoLogin();\n    });\n  }\n\n  menuDisabled(): boolean {\n    return !this.menuItems.some((item) => item.isVisible());\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"\" [disabled]=\"menuDisabled()\">\n      <mat-icon>more_vert</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n      <ng-container  *ngFor=\"let item of menuItems\">\n        <button\n          mat-menu-item\n          *ngIf=\"item.isVisible()\"\n          (click)=\"item.clickEvent()\"\n        >\n          <mat-icon>{{ item.icon }}</mat-icon>\n          <span>{{ item.label }}</span>\n        </button>\n      </ng-container>\n    </mat-menu>\n\n    <span class=\"title-big\">EasyPay</span>\n    <span class=\"title-separe\"> --> </span>\n    <span class=\"title-activePage\"> {{ actSection }} </span>\n  </mat-toolbar-row>\n</mat-toolbar>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TemplateComponent } from './template.component';\nimport { HomeModule } from '../home/home.module';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [TemplateComponent],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule,\n    HomeModule,\n    RouterModule,\n  ],\n  exports: [TemplateComponent],\n})\nexport class TemplateModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.scss']\n})\nexport class BannerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed rutrum diam\n  posuere, tincidunt sapien sit amet, faucibus erat. Sed semper eu quam at\n  facilisis. Suspendisse accumsan pulvinar velit eu sollicitudin. Nulla massa\n  neque, pretium a cursus at, sodales id enim. Pellentesque volutpat, ante eu\n  varius luctus, lacus magna sollicitudin risus, ut tristique odio enim\n  vulputate odio. Sed eu justo augue. Fusce sem enim, gravida ac sollicitudin\n  sit amet, sagittis ac est. Aenean aliquam vulputate sem vitae porta. Morbi\n  eget magna sapien. In in interdum ante. Ut nisi enim, fermentum sed enim\n  vitae, accumsan mattis mauris. Praesent vel nisl lorem. Vestibulum eu urna\n  feugiat, dapibus massa sit amet, laoreet lorem.\n</p>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n/**\n * Nota: <app-big-button> richiede width e height impostati a 100%\n */\n@Component({\n  selector: 'app-big-button',\n  templateUrl: './big-button.component.html',\n  styleUrls: ['./big-button.component.scss']\n})\nexport class BigButtonComponent implements OnInit {\n\n  @Input() label: string;\n  @Input() icon: string;\n\n  @Output() clickEmitter: EventEmitter<void> = new  EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  clickEvent(): void {\n    this.clickEmitter.next();\n  }\n}\n","<div class=\"button-container widget-container shadow-border\" (click)=\"clickEvent()\">\n  <div class=\"icon-content\">\n    <mat-icon class=\"icon fix-top\" aria-hidden=\"false\" [inline]=\"true\">{{icon}}</mat-icon>\n  </div>\n  <div class=\"label-body\">\n    <span class=\"label centralize\" >{{label}}</span>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { CustomError, LoaderService, LoadingStatus } from 'src/app/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { debounceTime, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.scss']\n})\nexport class ErrorPageComponent implements OnInit {\n\n  /** titolo della pagina di errore */\n  titleLabel$: BehaviorSubject<string>;\n\n  /** contenuto html del messaggio di errore */\n  content$: BehaviorSubject<string>;\n\n  /** oggetto errore da stampare se presente */\n  error$: BehaviorSubject<CustomError>;\n\n  constructor(private route: ActivatedRoute, private loaderService: LoaderService) {\n    this.titleLabel$ = new BehaviorSubject('Impossibile procedere con il pagamento. Se il problema persiste contattare il venditore');\n    this.content$ = new BehaviorSubject('SUGGERIMENTO PER IL VENDITORE: assicurarsi che il idConto e prezzo siano validi');\n    this.error$ = new BehaviorSubject(undefined);\n    this.loaderService.status$.next(LoadingStatus.FAILED);\n  }\n\n  ngOnInit() {\n    this.route.queryParams\n    .pipe(\n      // debounceTime evita l'emit iniziale prima che i param siano effettivamente inizializzati\n      debounceTime(200),\n      switchMap(params => {\n        if ( params.titleLabel) {\n          this.titleLabel$.next(params.titleLabel);\n        }\n        if ( params.content ) {\n          this.content$.next(params.content);\n        }\n        if ( params.error ) {\n          this.error$.next(JSON.parse(params.error));\n        }\n        return [];\n      })\n    )\n    .subscribe();\n  }\n}\n","<app-error [titleLabel]=\"titleLabel$ | async\" [content]=\"content$ | async\" [error]=\"error$ | async\"></app-error>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { CustomError } from 'src/app/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n  /** titolo della pagina di errore */\n  @Input() titleLabel: string;\n\n  /** contenuto html del messaggio di errore */\n  @Input() content: string;\n\n  /** oggetto errore da stampare se presente */\n  @Input() error: CustomError;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<ng-container>\n  <h1 class=\"mb-0\">\n    <mat-icon svgIcon=\"alert-circle\" class=\"logo\"></mat-icon>\n  </h1>\n  <h2 class=\"logo-title mt-0\">{{titleLabel}}</h2>\n  <div [innerHTML]=\"content\"></div>\n\n  <p>{{ error | json }}</p>\n</ng-container>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-info-widget',\n  templateUrl: './info-widget.component.html',\n  styleUrls: ['./info-widget.component.scss']\n})\nexport class InfoWidgetComponent implements OnInit {\n\n  /** titolo della sezione */\n  @Input() title;\n  /** numero del conto */\n  @Input() numConto: string;\n  /** nome del proprietario conto */\n  @Input() name: string;\n  /** regione sociale */\n  @Input() regSocial: string;\n  /** indirizzo del proprietario del conto */\n  @Input() address: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"title\">{{title}}</h1>\n<div class=\"info\">\n  <div class=\"labels\">\n    <div class=\"info--conto label\">Num. Conto:</div>\n    <div class=\"info--name label\">Nome:</div>\n    <div class=\"info--reg label\">Regione Sociale:</div>\n    <div class=\"info--addr label\">Indirizzo:</div>\n  </div>\n  <div class=\"values\">\n    <div class=\"info--conto value\">{{numConto}}</div>\n    <div class=\"info--name value\">{{name}}</div>\n    <div class=\"info--reg value\">{{regSocial}}</div>\n    <div class=\"info--addr value\">{{address}}</div>\n  </div>\n</div>\n\n\n<!-- <div class=\"info\">\n  <div class=\"info--conto\"><span class=\"label\">Num. Conto:</span><span class=\"value\">{{numConto}}</span></div>\n  <div class=\"info--name\"><span class=\"label\">Nome:</span><span class=\"value\">{{name}}</span></div>\n  <div class=\"info--reg\"><span class=\"label\">Regione Sociale:</span><span class=\"value\">{{regSocial}}</span></div>\n  <div class=\"info--addr\"><span class=\"label\">Indirizzo:</span><span class=\"value\">{{address}}</span></div>\n</div> -->\n","import {\n  AfterViewInit,\n  Component,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { AbstractJoinPartComponent } from './parts/abstract-join-part/abstract-join-part.component';\nimport { JoinPart0Component } from './parts/join-part0/join-part0.component';\nimport { JoinPart1Component } from './parts/join-part1/join-part1.component';\nimport { JoinPart2Component } from './parts/join-part2/join-part2.component';\nimport { JoinPart3Component } from './parts/join-part3/join-part3.component';\n\n@Component({\n  selector: 'app-join',\n  templateUrl: './join.component.html',\n  styleUrls: ['./join.component.scss'],\n})\nexport class JoinComponent implements OnInit, OnDestroy, AfterViewInit {\n  readonly  maxPage = 3;\n\n  favoriteUserType: string;\n  page: number;\n  componentRef: ComponentRef<AbstractJoinPartComponent>;\n  data = {};\n\n  @ViewChild('adHost', { read: ViewContainerRef }) container;\n\n  @Output() loginRequest = new EventEmitter<void>();\n\n  constructor(private resolver: ComponentFactoryResolver) {\n  }\n\n  ngOnInit(): void {\n    this.page = 0;\n  }\n\n  ngOnDestroy() {\n    if (this.container) {\n      this.container.clear();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.loadComponent();\n    }, 0);\n  }\n\n  loadComponent() {\n\n    this.container.clear();\n    let factory: ComponentFactory<AbstractJoinPartComponent|JoinPart3Component>;\n    switch (this.page) {\n      case 3:\n        factory = this.resolver.resolveComponentFactory(JoinPart3Component);\n        break;\n      case 2:\n        factory = this.resolver.resolveComponentFactory(JoinPart2Component);\n        break;\n      case 1:\n        factory = this.resolver.resolveComponentFactory(JoinPart1Component);\n        break;\n      case 0:\n      default:\n        factory = this.resolver.resolveComponentFactory(JoinPart0Component);\n        break;\n    }\n    this.componentRef = this.container.createComponent(factory);\n    if (this.page === this.maxPage) {\n      (this.componentRef as unknown as ComponentRef<JoinPart3Component>).instance.data = this.data;\n    }\n\n  }\n\n  login() {\n    this.loginRequest.next();\n  }\n\n\n\n\n  updateForm(pg: number) {\n    if (!this.componentRef.instance.validate()) {\n      return;\n    }\n    // salva le informazioni recuperate dal form\n    this.data = {...this.data, ...this.componentRef.instance.getValue()};\n\n    this.setPage(pg);\n    this.loadComponent();\n  }\n\n  setPage(pg: number) {\n    if (pg < 0) {\n      this.page = 0;\n    } else if (pg > this.maxPage ) {\n      this.page = this.maxPage;\n    } else {\n      this.page = pg;\n    }\n  }\n}\n","<div>\n  <div>\n    <mat-slider class=\"slider\" min=\"0\" max=\"3\" step=\"1\" [value]=\"page\"\n    ></mat-slider>\n  </div>\n  <mat-divider></mat-divider>\n  <div>\n    <template #adHost></template>\n  </div>\n  <app-join-dashboard *ngIf=\"page < maxPage\" [page]=\"page\" [maxPage]=\"maxPage\" (changePage)=\"updateForm($event)\"></app-join-dashboard>\n  <div class=\"login\">\n    <button mat-button color=\"primary\" (click)=\"login()\">\n      Annulla creazione account\n    </button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-abstract-join-part',\n  templateUrl: './abstract-join-part.component.html',\n  styleUrls: ['./abstract-join-part.component.scss']\n})\nexport abstract class AbstractJoinPartComponent implements OnInit {\n\n  /** controller del form */\n  formCrl: FormGroup;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  validate() {\n    if (this.formCrl.valid) {\n      return true;\n    } else {\n      this.validateAllFormFields(this.formCrl);\n      return false;\n    }\n  }\n\n  abstract getValue(): object;\n\n  private validateAllFormFields(formGroup: FormGroup) {\n    Object.keys(formGroup.controls).forEach((field) => {\n      const control = formGroup.get(field);\n      if (control instanceof FormControl) {\n        control.markAsTouched({ onlySelf: true });\n      } else if (control instanceof FormGroup) {\n        this.validateAllFormFields(control);\n      }\n    });\n  }\n\n}\n","<p>abstract-join-part works!</p>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-join-dashboard',\n  templateUrl: './join-dashboard.component.html',\n  styleUrls: ['./join-dashboard.component.scss']\n})\nexport class JoinDashboardComponent implements OnInit {\n\n\n  @Input() page: number;\n  @Input() maxPage: number;\n\n  @Output() changePage = new EventEmitter<number>();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  backPage() {\n    this.changePage.emit(this.page - 1);\n  }\n\n  nextPage() {\n    this.changePage.emit(this.page + 1);\n  }\n\n  // private setPage(pg: number) {\n  //   if (pg < 0) {\n  //     this.page = 0;\n  //   } else if (pg > this.maxPage ) {\n  //     this.page = this.maxPage;\n  //   } else {\n  //     this.page = pg;\n  //   }\n  //   this.changePage.emit(this.page);\n  // }\n\n}\n","<div class=\"move\">\n  <button mat-raised-button color=\"primary\" [disabled]=\"page <= 0\" (click)=\"backPage()\">Back</button>\n  <button mat-raised-button color=\"primary\" [disabled]=\"page >= maxPage\" (click)=\"nextPage()\">Next</button>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\nimport { AbstractJoinPartComponent } from '../abstract-join-part/abstract-join-part.component';\n\n@Component({\n  selector: 'app-join-part0',\n  templateUrl: './join-part0.component.html',\n  styleUrls: ['./join-part0.component.scss'],\n})\nexport class JoinPart0Component extends AbstractJoinPartComponent\n  implements OnInit {\n  @Output() valuesOutput = new EventEmitter<{\n    username: string;\n    password: string;\n  }>();\n\n  constructor(private fb: FormBuilder) {\n    super();\n    this.formCrl = this.fb.group({\n      username: this.fb.control('', [Validators.required]),\n      password: this.fb.control('', [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(16),\n      ]),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  getValue() {\n    return {\n      username: this.formCrl.controls.username.value,\n      password: this.formCrl.controls.password.value,\n    };\n  }\n}\n","<form class=\"form\" [formGroup]=\"formCrl\">\n<div>\n  <mat-form-field class=\"full-width\">\n    <input\n      matInput\n      placeholder=\"username*\"\n      formControlName=\"username\"\n    />\n    <mat-error\n      *ngIf=\"formCrl.controls['username'].hasError('required')\"\n    >\n      Username <strong>obbligatorio</strong>\n    </mat-error>\n  </mat-form-field>\n</div>\n<div>\n  <mat-form-field class=\"full-width\">\n    <input\n      matInput\n      type=\"password\"\n      placeholder=\"Password*\"\n      formControlName=\"password\"\n    />\n    <mat-error\n      *ngIf=\"\n        formCrl.controls['password'].hasError('minLength') ||\n        formCrl.controls['password'].hasError('maxLength') ||\n        formCrl.controls['password'].hasError('numeric')\n      \"\n    >\n      il pin è composto da 4-16 cifre <strong>numeriche</strong>\n    </mat-error>\n    <mat-error\n      *ngIf=\"formCrl.controls['password'].hasError('required')\"\n    >\n      pin obbligatorio per il login\n    </mat-error>\n  </mat-form-field>\n</div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\nimport { AbstractJoinPartComponent } from '../abstract-join-part/abstract-join-part.component';\n\n@Component({\n  selector: 'app-join-part1',\n  templateUrl: './join-part1.component.html',\n  styleUrls: ['./join-part1.component.scss'],\n})\nexport class JoinPart1Component extends AbstractJoinPartComponent\n  implements OnInit {\n  constructor(private fb: FormBuilder) {\n    super();\n    this.formCrl = this.fb.group({\n      nome: this.fb.control('', [Validators.required]),\n      cognome: this.fb.control('', [Validators.required]),\n      cf: this.fb.control('', [Validators.required]),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  getValue() {\n    return {\n      nome: this.formCrl.controls.nome.value,\n      cognome: this.formCrl.controls.cognome.value,\n      cf: this.formCrl.controls.cf.value,\n    };\n  }\n}\n","<form class=\"form\" [formGroup]=\"formCrl\">\n  <div>\n    <mat-form-field class=\"full-width\">\n      <input matInput placeholder=\"nome*\" formControlName=\"nome\" />\n      <mat-error *ngIf=\"formCrl.controls['nome'].hasError('required')\">\n        nome <strong>obbligatorio</strong>\n      </mat-error>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field class=\"full-width\">\n      <input matInput placeholder=\"cognome*\" formControlName=\"cognome\" />\n      <mat-error *ngIf=\"formCrl.controls['cognome'].hasError('required')\">\n        cognome <strong>obbligatorio</strong>\n      </mat-error>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field class=\"full-width\">\n      <input matInput placeholder=\"codice fiscale*\" formControlName=\"cf\" />\n      <mat-error *ngIf=\"formCrl.controls['cf'].hasError('required')\">\n        codice fiscale <strong>obbligatorio</strong>\n      </mat-error>\n    </mat-form-field>\n  </div>\n</form>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\nimport { AbstractJoinPartComponent } from '../abstract-join-part/abstract-join-part.component';\nimport { UserType } from 'src/app/core/constants/user-type.enum';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-join-part2',\n  templateUrl: './join-part2.component.html',\n  styleUrls: ['./join-part2.component.scss']\n})\nexport class JoinPart2Component extends AbstractJoinPartComponent implements OnInit, OnDestroy {\n  readonly UserType = UserType;\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(private fb: FormBuilder) {\n    super();\n    this.formCrl = this.fb.group({\n      userType: this.fb.control(UserType.customer, []),\n      piva: this.fb.control({ value: '', disabled: true }, [Validators.required]),\n      ragSoc: this.fb.control({ value: '', disabled: true }, [Validators.required]),\n    });\n  }\n\n  ngOnInit() {\n    this.subscriptions.push(this.formCrl.get('userType').valueChanges.subscribe(userType => {\n        if ( userType === UserType.customer  ) {\n          this.formCrl.get('piva').disable();\n          this.formCrl.get('ragSoc').disable();\n        } else {\n          this.formCrl.get('piva').enable();\n          this.formCrl.get('ragSoc').enable();\n        }\n    }));\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  getValue() {\n    return {\n      userType: this.formCrl.controls.userType.value,\n      piva: this.formCrl.controls.piva.value,\n      ragSoc: this.formCrl.controls.ragSoc.value,\n    };\n  }\n}\n","<form class=\"form\" [formGroup]=\"formCrl\">\n  <mat-radio-group formControlName=\"userType\">\n    <mat-radio-button [value]=\"UserType.customer\" >Sono solo un cliente</mat-radio-button>\n    <mat-radio-button [value]=\"UserType.merchant\" >Dati del commerciante</mat-radio-button>\n  </mat-radio-group>\n  <div #merchantInfo>\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput  class=\"mInfos\" placeholder=\"partita iva*\" formControlName=\"piva\" />\n        <mat-error *ngIf=\"formCrl.controls['piva'].hasError('required')\">\n          piva <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput class=\"mInfos\" placeholder=\"ragione sociale*\" formControlName=\"ragSoc\" />\n        <mat-error *ngIf=\"formCrl.controls['ragSoc'].hasError('required')\">\n          ragSoc <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiRoute } from 'src/app/core';\nimport { map, catchError } from 'rxjs/operators';\n\nenum StatusEnum {\n  waiting = 'waiting',\n  success = 'success',\n  failed = 'failed',\n}\n\n@Component({\n  selector: 'app-join-part3',\n  templateUrl: './join-part3.component.html',\n  styleUrls: ['./join-part3.component.scss']\n})\nexport class JoinPart3Component implements OnInit {\n  readonly StatusEnum = StatusEnum;\n\n  @Input() data: object;\n\n  status = StatusEnum.waiting;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.http.post(ApiRoute.clienti, this.data).pipe(\n      map(response => this.status = StatusEnum.success),\n      catchError(error => this.status = StatusEnum.failed))\n    .subscribe();\n  }\n\n}\n","<p *ngIf=\"status === StatusEnum.waiting\">in attesa della risposta del server...</p>\n<p *ngIf=\"status === StatusEnum.success\">registrazione completata con successo!</p>\n<p *ngIf=\"status === StatusEnum.failed\">registrazione fallita!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<img src=\"assets/loader.gif\" alt=\"loader\">\n<mat-icon svgIcon=\"bank\" class=\"logo\"></mat-icon>\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { RoutersPath } from 'src/app/core';\nimport { LoginService } from 'src/app/features/login-page/services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  /** controller del form */\n  formCrl: FormGroup;\n\n  @Output() joinRequest = new EventEmitter<void>();\n\n  constructor(\n    private fb: FormBuilder,\n    private loginService: LoginService,\n    private router: Router\n  ) {\n    this.formCrl = this.fb.group({\n      username: this.fb.control('', [Validators.required]),\n      password: this.fb.control('', [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(16)\n      ])\n    });\n  }\n\n  ngOnInit() {}\n\n  login() {\n    this.loginService\n      .getToken(this.formCrl.value.username, this.formCrl.value.password)\n      .subscribe(token => this.router.navigate([RoutersPath.home], { }));\n  }\n\n  join() {\n    this.joinRequest.next();\n  }\n}\n","<div>\n  <form class=\"form\" [formGroup]=\"formCrl\">\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput placeholder=\"username*\" formControlName=\"username\" />\n        <mat-error *ngIf=\"formCrl.controls['username'].hasError('required')\"> Username <strong>obbligatorio</strong> </mat-error>\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput type=\"password\" placeholder=\"Password*\" formControlName=\"password\"/>\n        <mat-error *ngIf=\"formCrl.controls['password'].hasError('minLength') || formCrl.controls['password'].hasError('maxLength') || formCrl.controls['password'].hasError('numeric')\">\n          il pin è composto da 4-16 cifre <strong>numeriche</strong>\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['password'].hasError('required')\"> pin obbligatorio per il login </mat-error>\n      </mat-form-field>\n    </div>\n    <div class=\"login\">\n        <button mat-button color=\"primary\" [disabled]=\"formCrl.status === 'INVALID'\" (click)=\"login()\">Login</button>\n    </div>\n    <div class=\"join\">\n      <button mat-button color=\"primary\" (click)=\"join()\">Crea un nuovo account</button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nfc',\n  templateUrl: './nfc.component.html',\n  styleUrls: ['./nfc.component.scss']\n})\nexport class NfcComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-icon svgIcon=\"nfc-variant\" class=\"nfc-icon\"></mat-icon>\n<div class=\"nfc-message\">passare il cellulare con nfc abilitato sul dispositivo per collegarsi</div>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-pin',\n  templateUrl: './pin.component.html',\n  styleUrls: ['./pin.component.scss']\n})\nexport class PinComponent implements OnInit {\n  /** controller del form */\n  formCrl: FormGroup;\n\n  @Output() loginEvent = new EventEmitter<{username: string, password: string}>();\n\n  constructor(\n    private fb: FormBuilder\n  ) {\n    this.formCrl = this.fb.group({\n      userId: this.fb.control('', [Validators.required]),\n      password: this.fb.control('', [Validators.required, Validators.minLength(4), Validators.maxLength(16)])\n    });\n  }\n\n  ngOnInit() {}\n\n  login() {\n    this.loginEvent.emit({username: this.formCrl.value.userId, password: this.formCrl.value.password});\n  }\n}\n","<div>\n  <form class=\"form\" [formGroup]=\"formCrl\">\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput placeholder=\"ID*\" formControlName=\"userId\" />\n        <mat-error *ngIf=\"formCrl.controls['userId'].hasError('required')\"> L'id utente è <strong>richiesto</strong> </mat-error>\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput type=\"password\" placeholder=\"Password*\" formControlName=\"password\"/>\n        <mat-hint>4 cifre numeriche</mat-hint>\n        <mat-error *ngIf=\"formCrl.controls['password'].hasError('minLength') || formCrl.controls['password'].hasError('maxLength') || formCrl.controls['password'].hasError('numeric')\">\n          il pin è composto da 4-16 cifre <strong>numeriche</strong>\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['password'].hasError('required')\"> pin obbligatorio per il login </mat-error>\n      </mat-form-field>\n    </div>\n    <div class=\"login\">\n        <button mat-raised-button color=\"primary\" [disabled]=\"formCrl.status === 'INVALID'\" (click)=\"login()\">Login</button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { BarcodeFormat } from '@zxing/library';\nimport { ZXingScannerComponent } from '@zxing/ngx-scanner';\nimport { BehaviorSubject } from 'rxjs';\nimport { ClienteService, CUSTOM_ERROR, PrezzoService } from 'src/app/core';\n\n@Component({\n  selector: 'app-qr-code',\n  templateUrl: './qr-code.component.html',\n  styleUrls: ['./qr-code.component.scss']\n})\nexport class QrCodeComponent implements OnInit {\n\n  /** standard accettati dal lettore */\n  readonly allowedFormats = [ BarcodeFormat.QR_CODE, BarcodeFormat.EAN_13];\n\n  /**\n   * scanner.\n   * documentazione: https://github.com/zxing-js/ngx-scanner/wiki/Advanced-Usage\n   */\n  @ViewChild(ZXingScannerComponent)\n  scanner: ZXingScannerComponent;\n\n  /** determina se è riuscito ad aprire o meno lo scanner */\n  statusScanner$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(private clienteService: ClienteService, private pagamentoService: PrezzoService) { }\n\n  ngOnInit() { }\n\n  /** alla lettura dello stato prova ad effettuare il login */\n  scanSuccessHandler(token: string) {\n    this.scanner.enable = false;\n    this.clienteService.getClienteByToken(token).subscribe(result => {\n      if (result.type !== CUSTOM_ERROR) {\n        this.pagamentoService.handlePagamento();\n      } else {\n        this.scanner.enable = true;\n      }\n\n    });\n  }\n\n  /** modifica lo stato del reader, che indica se è in funzione o ha dei problemi in esecuzione */\n  readerStatus(status: boolean) {\n    this.statusScanner$.next(status);\n  }\n}\n","<!-- scanner -->\n<div [hidden]=\"!(statusScanner$ | async)\">\n  <zxing-scanner\n    class=\"qr-reader\"\n    [formats]=\"allowedFormats\"\n    (scanSuccess)=\"scanSuccessHandler($event)\"\n    (permissionResponse)=\"readerStatus($event)\"\n  ></zxing-scanner>\n</div>\n\n<!-- gestione in caso di scanner disabilitato o non funzionante -->\n<div [hidden]=\"statusScanner$ | async\">\n  <mat-icon svgIcon=\"qrcode\" class=\"qr-icon\"></mat-icon>\n  <div class=\"qr-message\">abilitare il lettore qrcode.</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { LoginType } from '../../constants/login-type.enum';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { LoginService } from 'src/app/features/login-page/services/login.service';\n\n@Component({\n  selector: 'app-recognition',\n  templateUrl: './recognition.component.html',\n  styleUrls: ['./recognition.component.scss']\n})\nexport class RecognitionComponent implements OnInit {\n\n  readonly LoginType = LoginType;\n  public loginType = LoginType.pin;\n\n  constructor(private routingService: RoutingService, private loginService: LoginService) { }\n\n  ngOnInit(): void {\n    this.routingService.updateHeader('Login');\n  }\n\n  changeLogin(choosenLoginType: LoginType) {\n    this.loginType = choosenLoginType;\n  }\n}\n","<div class=\"buttons-container\">\n  <button mat-icon-button (click)=\"changeLogin(LoginType.pin)\" [ngClass]=\"{active: loginType === LoginType.pin}\">\n    <mat-icon svgIcon=\"textbox-password\"></mat-icon>\n  </button>\n  <button mat-icon-button (click)=\"changeLogin(LoginType.qr)\" class=\"mr-2 ml-2\" [ngClass]=\"{active: loginType === LoginType.qr}\">\n    <mat-icon svgIcon=\"qrcode\"></mat-icon>\n  </button>\n  <button mat-icon-button (click)=\"changeLogin(LoginType.nfc)\" [ngClass]=\"{active: loginType === LoginType.nfc}\">\n    <mat-icon svgIcon=\"nfc-variant\"></mat-icon>\n  </button>\n</div>\n<div class=\"content\">\n  <div class=\"login-body\">\n    <div *ngIf=\"loginType === LoginType.pin\"><app-pin></app-pin></div>\n    <div *ngIf=\"loginType === LoginType.qr\"><app-qr-code></app-qr-code></div>\n    <div *ngIf=\"loginType === LoginType.nfc\"><app-nfc></app-nfc></div>\n  </div>\n</div>\n","export enum LoginType {\n  pin= 'PIN',\n  qr= 'QR',\n  nfc= 'NFC',\n}\n","import { Directive } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator, ValidatorFn } from '@angular/forms';\n\n/** Validatore di caratteri numerici. ritorna */\nexport function numericValidator(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const isNumeric = new RegExp('^[0-9]*$').test(control.value);\n    return !isNumeric ? { 'numeric': { value: control.value } } : null;\n  };\n}\n\n/** Direttiva usata per validare se in un HTMLInput ha solo valori numerici */\n@Directive({\n  selector: '[appNumeric]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: NumericDirective, multi: true }]\n})\nexport class NumericDirective implements Validator {\n\n  validate(control: AbstractControl): { [key: string]: any } | null {\n    return  numericValidator()(control);\n  }\n}\n","export { SharedModule } from './shared.module';\n\nexport { LoginType } from './constants/login-type.enum';\n\nexport { QrCodeComponent } from './components/qr-code/qr-code.component';\nexport { NfcComponent } from './components/nfc/nfc.component';\nexport { PinComponent } from './components/pin/pin.component';\nexport { LoginComponent } from './components/login/login.component';\nexport { BigButtonComponent } from './components/big-button/big-button.component';\nexport { InfoWidgetComponent } from './components/info-widget/info-widget.component';\n\nexport { MinPipe } from './pipes/min.pipe';\nexport { SwitchNumberPipe } from './pipes/switch-number.pipe';\n\nexport { numericValidator, NumericDirective } from './directives/numeric.directive';\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isNumber } from 'util';\n\n/**\n * restituisce il minimo tra i due valori passati\n */\n@Pipe({\n  name: 'min'\n})\nexport class MinPipe implements PipeTransform {\n\n  transform(values: number[], ...args: unknown[]): number {\n    if (!Array.isArray(values)) {\n      console.error('MinPipe richiede la presenza di un array di numeri per funzionare');\n      console.error(values);\n      return -1;\n    }\n    if (values.some(n => !(typeof n === 'number'))) {\n      console.error('MinPipe richiede che l\\'array contenga valori numerici');\n      console.error(values);\n      return -1;\n    }\n    return Math.min(...values);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * [number, number] | switchNumber:switchFn\n */\n@Pipe({\n  name: 'switchNumber'\n})\nexport class SwitchNumberPipe implements PipeTransform {\n\n  /**\n   * @param switchFn  - determina se prendere il valore 1 o il valore 2\n   */\n  transform(values: [number, number], switchFn: boolean, ...args: unknown[]): unknown {\n    if (!Array.isArray(values)) {\n      console.error('SwitchNumberPipe richiede la presenza di un array di numeri per funzionare');\n      console.error(values);\n      return -1;\n    }\n    if (values.length !== 2 || values.some(n => !(typeof n === 'number'))) {\n      console.error('SwitchNumberPipe richiede che l\\'array contenga 2 valori numerici');\n      console.error(values);\n      return -1;\n    }\n    const equal = switchFn || true;\n    return equal ? values[0] : values[1];\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\n\nimport { CoreModule } from '../core/core.module';\nimport { BannerComponent } from './components/banner/banner.component';\nimport { BigButtonComponent } from './components/big-button/big-button.component';\nimport { ErrorPageComponent } from './components/error-page/error-page.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { InfoWidgetComponent } from './components/info-widget/info-widget.component';\nimport { JoinComponent } from './components/join/join.component';\nimport { JoinDashboardComponent } from './components/join/parts/join-dashboard/join-dashboard.component';\nimport { JoinPart0Component } from './components/join/parts/join-part0/join-part0.component';\nimport { JoinPart1Component } from './components/join/parts/join-part1/join-part1.component';\nimport { JoinPart2Component } from './components/join/parts/join-part2/join-part2.component';\nimport { JoinPart3Component } from './components/join/parts/join-part3/join-part3.component';\nimport { LoaderComponent } from './components/loader/loader.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { NfcComponent } from './components/nfc/nfc.component';\nimport { PinComponent } from './components/pin/pin.component';\nimport { QrCodeComponent } from './components/qr-code/qr-code.component';\nimport { RecognitionComponent } from './components/recognition/recognition.component';\nimport { NumericDirective } from './directives/numeric.directive';\nimport { MinPipe } from './pipes/min.pipe';\nimport { SwitchNumberPipe } from './pipes/switch-number.pipe';\n\n@NgModule({\n  declarations: [\n    QrCodeComponent,\n    NfcComponent,\n    PinComponent,\n    NumericDirective,\n    LoaderComponent,\n    ErrorPageComponent,\n    ErrorComponent,\n    LoginComponent,\n    BigButtonComponent,\n    BannerComponent,\n    RecognitionComponent,\n    MinPipe,\n    SwitchNumberPipe,\n    InfoWidgetComponent,\n    JoinComponent,\n    JoinPart0Component,\n    JoinPart1Component,\n    JoinPart2Component,\n    JoinDashboardComponent,\n    JoinPart3Component,\n  ],\n  imports: [\n    CommonModule,\n    CoreModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    ReactiveFormsModule,\n    ZXingScannerModule,\n    MatGridListModule,\n    MatSliderModule,\n    MatRadioModule,\n    MatDividerModule,\n  ],\n  exports: [\n    LoaderComponent,\n    ErrorComponent,\n    LoginComponent,\n    BigButtonComponent,\n    MatGridListModule,\n    BannerComponent,\n    RecognitionComponent,\n    MinPipe,\n    SwitchNumberPipe,\n    InfoWidgetComponent,\n    JoinComponent,\n  ],\n  entryComponents: [JoinPart0Component, JoinPart1Component, JoinPart2Component, JoinPart3Component],\n})\nexport class SharedModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:8082/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}