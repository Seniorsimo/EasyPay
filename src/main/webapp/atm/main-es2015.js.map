{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/constants/routing.constants.ts","./src/app/core/core.module.ts","./src/app/core/index.ts","./src/app/core/models/cliente.model.ts","./src/app/core/models/commerciante.model.ts","./src/app/core/models/error.model.ts","./src/app/core/services/cliente.service.ts","./src/app/core/services/commerciante.service.ts","./src/app/core/services/loader.service.ts","./src/app/core/services/pagamento.service.ts","./src/app/core/services/routing.service.ts","./src/app/features/home/home.component.ts","./src/app/features/home/home.component.html","./src/app/features/home/home.module.ts","./src/app/features/login-page/login-page.component.ts","./src/app/features/login-page/login-page.component.html","./src/app/features/login-page/login-page.module.ts","./src/app/features/login-page/services/login.service.ts","./src/app/features/login-page/store/login.store.ts","./src/app/features/template/template.component.ts","./src/app/features/template/template.component.html","./src/app/features/template/template.module.ts","./src/app/shared/components/banner/banner.component.ts","./src/app/shared/components/banner/banner.component.html","./src/app/shared/components/big-button/big-button.component.ts","./src/app/shared/components/big-button/big-button.component.html","./src/app/shared/components/error-page/error-page.component.ts","./src/app/shared/components/error-page/error-page.component.html","./src/app/shared/components/error/error.component.ts","./src/app/shared/components/error/error.component.html","./src/app/shared/components/loader/loader.component.ts","./src/app/shared/components/loader/loader.component.html","./src/app/shared/components/login/login.component.ts","./src/app/shared/components/login/login.component.html","./src/app/shared/components/nfc/nfc.component.ts","./src/app/shared/components/nfc/nfc.component.html","./src/app/shared/components/pin/pin.component.ts","./src/app/shared/components/pin/pin.component.html","./src/app/shared/components/qr-code/qr-code.component.ts","./src/app/shared/components/qr-code/qr-code.component.html","./src/app/shared/constants/login-type.enum.ts","./src/app/shared/directives/numeric.directive.ts","./src/app/shared/index.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './features/home/home.component';\nimport { LoginPageComponent } from './features/login-page/login-page.component';\nimport { TemplateComponent } from './features/template/template.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TemplateComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: '/login',\n        pathMatch: 'full'\n      },\n      {\n        path: 'home',\n        component: HomeComponent\n      },\n      {\n        path: 'login',\n        component: LoginPageComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { LoadingStatus, LoaderService } from './core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  statusLoader$: BehaviorSubject<LoadingStatus>;\n\n  constructor(\n    public loaderService: LoaderService,\n  ) {\n    this.statusLoader$ = this.loaderService.status$;\n  }\n}\n","<div class=\"container\">\n  <!-- loader in attesa di recuperare il conto -->\n  <!-- <ng-container *ngIf=\"!(statusLoader$ | async)\">\n    <app-loader></app-loader>\n  </ng-container> -->\n  <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { HomeModule } from './features/home/home.module';\nimport { LoginPageModule } from './features/login-page/login-page.module';\nimport { TemplateModule } from './features/template/template.module';\nimport { SharedModule } from './shared';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule.forRoot(),\n    AppRoutingModule,\n    SharedModule,\n    TemplateModule,\n    LoginPageModule,\n    HomeModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export const RoutersPath = {\n  base: '/',\n  home: '/home',\n  login: '/login',\n  payment: '/payments',\n  movement: '/movements',\n  reload: '/reload'\n};\n\nexport const baseUrl = '';\n\nexport const ApiRoute = {\n  login: baseUrl + '/api/login'\n};\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { MatIconModule, MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { ClienteService } from './services/cliente.service';\nimport { CommercianteService } from './services/commerciante.service';\nimport { PrezzoService } from './services/pagamento.service';\nimport { RoutingService } from './services/routing.service';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, HttpClientModule, MatIconModule],\n  exports: [MatIconModule],\n  providers: [/* No providers */],\n})\nexport class CoreModule {\n  constructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer) {\n    // aggiunge le nuova svg a material\n    matIconRegistry.addSvgIconSet(domSanitizer.bypassSecurityTrustResourceUrl('assets/svgs/mdi.svg'));\n    // matIconRegistry.addSvgIconSet(domSanitizer.bypassSecurityTrustResourceUrl('../../assets/fonts/materialdesignicons-webfont.woff'));\n  }\n\n  static forRoot(): ModuleWithProviders<CoreModule> {\n    return {\n      ngModule: CoreModule,\n      providers: [\n        CommercianteService,\n        ClienteService,\n        PrezzoService,\n        RoutingService,\n      ],\n    };\n  }\n}\n","export * from './constants/routing.constants';\n\nexport { PrezzoService } from './services/pagamento.service';\nexport { CommercianteService } from './services/commerciante.service';\nexport { ClienteService } from './services/cliente.service';\nexport { LoaderService } from './services/loader.service';\nexport { LoadingStatus } from './services/loader.service';\n\nexport * from './models/error.model';\nexport * from './models/commerciante.model';\nexport * from './models/cliente.model';\n\nexport * from './models/api.response';\nexport * from './models/api.request';\n\n","export interface Cliente {\n  type: string;\n\n  id: string;\n  pin: string;\n  token: string;\n  nome: string;\n  budget: number;\n}\n\n\nexport const CLIENTE_TYPE = 'CLIENTE_TYPE';\n","/** Struttura contenente i dati del commerciante  */\nexport interface Commerciante {\n\n  type: string;\n\n  idConto: string;\n  nome: string;\n  /** nome identificativo della società */\n  nomenclatura: string;\n}\n\nexport const COMMERCIANTE_TYPE = 'COMMERCIANTE_TYPE';\n","export interface CustomError extends Error {\n  type: string;\n}\n\nexport class WrongParamError implements CustomError {\n  readonly type = CUSTOM_ERROR;\n\n  name = '';\n  message = '';\n\n  constructor(param) {\n    this.name = 'Errore nei parametri';\n    this.message = JSON.stringify(param);\n  }\n}\n\nexport const CUSTOM_ERROR = 'CUSTOM_ERROR';\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ApiResponse } from '../models/api.response';\nimport { CUSTOM_ERROR, CustomError, WrongParamError } from '../models/error.model';\nimport { Cliente, CLIENTE_TYPE } from '../models/cliente.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClienteService {\n  cliente$: BehaviorSubject<Cliente>;\n\n  constructor(private httpClient: HttpClient) {\n    this.cliente$ = new BehaviorSubject({\n      type: CLIENTE_TYPE,\n      id: '',\n      pin: '',\n      token: '',\n      nome: '',\n      budget: 0,\n    });\n  }\n\n  getClienteByPin(id: string, pin: string): Observable<Cliente | CustomError>  {\n    // se già presente nello store non riscarica i dati del cliente:\n    if (this.cliente$.value.id) {\n      return this.cliente$;\n    }\n\n    if (!id || !pin) {\n      return throwError(new WrongParamError({id, pin}));\n    }\n\n    const params: {id: string, pin: string} =  { id, pin } ;\n    return this._getClient(params);\n  }\n\n  getClienteByToken(token: string): Observable<Cliente | CustomError> {\n    // se già presente nello store non riscarica i dati del cliente:\n    if (this.cliente$.value.id) {\n      return this.cliente$;\n    }\n\n    if (!token) {\n      return throwError(new WrongParamError(token));\n    }\n\n    const params: {token: string} = { token };\n    return this._getClient(params);\n  }\n\n  /** effettua la richiesta HTTP per verificare se il login del cliente va a buon fine */\n  private _getClient(params: {id?: string, pin?: string; token?: string}): Observable<Cliente | CustomError> {\n    const formData = new FormData();\n    formData.append('id', params.id);\n    formData.append('pin', params.pin);\n    formData.append('token', params.token);\n    return this.httpClient\n      .post<ApiResponse<Cliente>>('/api/clienti', formData)\n      .pipe(\n        map(result => {\n          if (result && result.success) {\n            const cliente = { type: CLIENTE_TYPE, ...result.body };\n            this.cliente$.next(cliente);\n            return cliente;\n          } else {\n            throw { type: CUSTOM_ERROR, name: 'account not found', message: `non è stato possibile trovare l'account` };\n          }\n        })\n      );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ApiResponse } from '../models/api.response';\nimport { Commerciante, COMMERCIANTE_TYPE } from '../models/commerciante.model';\nimport { CustomError, WrongParamError, CUSTOM_ERROR } from '../models/error.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommercianteService {\n  contoCommerciante$: BehaviorSubject<Commerciante>;\n\n  constructor(private httpClient: HttpClient) {\n    this.contoCommerciante$ = new BehaviorSubject({\n      type: COMMERCIANTE_TYPE,\n      idConto: '',\n      nome: '',\n      nomenclatura: ''\n    });\n  }\n\n  getConto(idConto: string): Observable<Commerciante | CustomError> {\n    // se già presente nello store non riscarica i dati del cliente:\n    if (this.contoCommerciante$.value.idConto) {\n      return this.contoCommerciante$;\n    }\n\n    if (!idConto) {\n      return of(new WrongParamError(idConto));\n    }\n\n    return this.httpClient\n      .get<ApiResponse<Commerciante>>(`/api/commercianti/${idConto}`)\n      .pipe(\n        map(result => {\n          if (result && result.success) {\n            const commerciante = { type: COMMERCIANTE_TYPE, ...result.body };\n            this.contoCommerciante$.next(commerciante);\n            return commerciante;\n          } else {\n            throw { type: CUSTOM_ERROR, name: 'account not found', message: `non è stato possibile trovare l'account` };\n          }\n        })\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport enum LoadingStatus {\n  LOADING = '',\n  FAILED = 'FAILED',\n  SUCCESS = 'SUCCESS'\n}\n\n/** service sche gestisce il loader */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  /** Alla fine del caricamento chiude il loader e apre la modale */\n  status$: BehaviorSubject<LoadingStatus>;\n\n  constructor() {\n    this.status$ = new BehaviorSubject(LoadingStatus.LOADING);\n  }\n\n  changeStatus(status: LoadingStatus) {\n    this.status$.next(status);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { ApiRequest } from 'src/app/core/models/api.request';\nimport { ApiResponse } from 'src/app/core/models/api.response';\nimport { ClienteService } from 'src/app/core/services/cliente.service';\nimport { CommercianteService } from 'src/app/core/services/commerciante.service';\n\nimport { CUSTOM_ERROR, CustomError } from '../models/error.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrezzoService {\n  prezzo$: BehaviorSubject<number> = new BehaviorSubject(0);\n\n  constructor(\n    private http: HttpClient,\n    private commercianteService: CommercianteService,\n    private clienteService: ClienteService,\n    private router: Router\n  ) {}\n  /** Salva il valore del trasferimento da effettuare */\n  setPrezzo(value: string) {\n    const convPrezzo = Number.parseFloat(value);\n    if (!isNaN(convPrezzo)) {\n      this.prezzo$.next(Number.parseFloat(value));\n    } else {\n      throw { type: CUSTOM_ERROR, name: 'errore sul prezzo', message: 'deve essere un valore numerico' };\n    }\n  }\n\n  /** gestisce un pagamento una volta che gli store sono stati tutti inizializzati correttamente */\n  handlePagamento() {\n    this.pagamento(\n      this.commercianteService.contoCommerciante$.value.idConto,\n      this.clienteService.cliente$.value.id,\n      this.prezzo$.value\n    ).subscribe(result => {\n      const response = { timestamp: new Date().getTime() };\n      if (result.success) {\n        if (window.opener) {\n          window.opener.postMessage(JSON.stringify({ success: true, ...response }), '*');\n          setInterval(() => window.close(), 1000);\n        } else {\n          console.error('Impossibile chiudere pagina');\n        }\n      } else {\n        const titleLabel = 'Impossibile procedere con il pagamento';\n        const message = 'Ricaricare il conto';\n        const error: CustomError = { type: CUSTOM_ERROR, name: result.error.id, message: result.error.message };\n        window.opener.postMessage(\n          JSON.stringify({ success: false, erroCode: result.error.id, errorMessage: result.error.message, ...response }),\n          '*'\n        );\n        setInterval(() => window.close(), 1000);\n        this.router.navigateByUrl(`/error?titleLabel=${titleLabel}&content=${message}&error=${JSON.stringify(error)}`);\n      }\n    });\n  }\n\n  /** effettua il pagamento e da un esito dell' operazione  */\n  pagamento(idCommerciante: string, idCliente: string, prezzo: number) {\n    const params = {\n      idCommerciante,\n      idCliente,\n      prezzo, // : prezzo + ''\n    };\n    return this.http.post<ApiResponse<{ success: boolean; error?: { id: string; message: string } }>>('/api/pagamenti', params);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { RoutersPath } from '../constants/routing.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoutingService {\n\n  activeSection = '';\n  activeSection$ = new Subject<string>();\n\n\n  constructor(private router: Router) { }\n\n\n  /** gestisce l'header nel TemplateComponent */\n  updateHeader(text: string) {\n    this.activeSection = text;\n    this.activeSection$.next(text);\n  }\n\n  gotoHome() {\n    this.router.navigate([RoutersPath.home]);\n  }\n\n  gotoLogin() {\n    this.router.navigate([RoutersPath.login]);\n  }\n\n  gotoReload() {\n    this.router.navigate([RoutersPath.reload]);\n  }\n\n  gotoPayment() {\n    this.router.navigate([RoutersPath.payment]);\n  }\n\n  gotoMovement() {\n    this.router.navigate([RoutersPath.movement]);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RoutingService } from 'src/app/core/services/routing.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  readonly buttonWidth = '400px';\n  readonly buttonHeight = '250px';\n\n  constructor(private routingService: RoutingService) { }\n\n  ngOnInit(): void {\n    this.routingService.updateHeader('Home');\n  }\n\n  gotoPayment() {\n\n  }\n\n  gotoMovements() {\n\n  }\n\n}\n","<mat-grid-list cols=\"3\" rowHeight=\"2:1\" gutterSize=\"30px\">\n  <mat-grid-tile>\n    <app-big-button\n      class=\"button\"\n      label=\"Pagamento\"\n      icon=\"euro\"\n      (clickEmitter)=\"gotoPayment()\"\n    ></app-big-button>\n  </mat-grid-tile>\n  <mat-grid-tile></mat-grid-tile>\n  <mat-grid-tile>\n    <app-big-button\n      class=\"button\"\n      label=\"Info Conto\"\n      icon=\"info\"\n      (clickEmitter)=\"gotoPayment()\"\n    ></app-big-button\n  ></mat-grid-tile>\n\n  <mat-grid-tile>\n    <app-big-button\n      class=\"button\"\n      label=\"Ricarica\"\n      icon=\"publish\"\n      (clickEmitter)=\"gotoPayment()\"\n    ></app-big-button>\n  </mat-grid-tile>\n  <mat-grid-tile></mat-grid-tile>\n  <mat-grid-tile>\n    <app-big-button\n      class=\"button\"\n      label=\"Movimenti\"\n      icon=\"account_balance_wallet\"\n      (clickEmitter)=\"gotoMovements()\"\n    ></app-big-button\n  ></mat-grid-tile>\n\n  <mat-grid-tile colspan=\"3\" rowspan=\"1\">\n    <div class=\"widget-container shadow-border spam-widget\">\n      <app-banner></app-banner>\n    </div>\n  </mat-grid-tile>\n</mat-grid-list>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { SharedModule } from 'src/app/shared';\n\nimport { HomeComponent } from './home.component';\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [CommonModule, MatGridListModule, SharedModule],\n  exports: [HomeComponent]\n})\nexport class HomeModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n\n  public breakpoint: number;\n  public  maxCol = 6;\n  public  minCol = 2;\n\n  private deviceSize = 850;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.breakpoint = (window.innerWidth <= this.deviceSize) ? this.minCol : this.maxCol;\n  }\n\n  clickInfo() {\n    console.warn('not yet implement');\n  }\n\n  randomColor(): string {\n    // return 'white';\n    return '#' + Math.floor(Math.random() * 16777215).toString(16);\n  }\n\n\nonResize(event) {\n  this.breakpoint = (event.target.innerWidth <= this.deviceSize) ? this.minCol : this.maxCol;\n}\n\n}\n","<mat-grid-list [cols]=\"breakpoint\" rowHeight=\"1:1\" gutterSize=\"20px\" (window:resize)=\"onResize($event)\">\n  <mat-grid-tile colspan=\"2\" rowspan=\"2\" >\n    <div class=\"widget-container login-widget shadow-border\">\n      <app-login></app-login>\n    </div>\n  </mat-grid-tile>\n  <mat-grid-tile *ngIf=\"breakpoint ===  maxCol\" class=\"empty\" colspan=\"3\" rowspan=\"2\" ></mat-grid-tile>\n  <mat-grid-tile [colspan]=\"breakpoint ===  maxCol ? 1 : 2\" rowspan=\"1\" >\n    <app-big-button\n      class=\"info_conto\"\n      label=\"Info Conto\"\n      icon=\"info\"\n      (clickEmitter)=\"clickInfo()\"\n    ></app-big-button>\n  </mat-grid-tile>\n  <mat-grid-tile *ngIf=\"breakpoint ===  maxCol\" class=\"empty\" colspan=\"1\" rowspan=\"1\" ></mat-grid-tile>\n  <mat-grid-tile *ngIf=\"breakpoint ===  maxCol\" colspan=\"6\" rowspan=\"1\" >\n    <div class=\"widget-container shadow-border spam-widget\">\n      <app-banner></app-banner>\n    </div>\n  </mat-grid-tile>\n</mat-grid-list>\n\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../../shared';\nimport { LoginPageComponent } from './login-page.component';\nimport { LoginService } from './services/login.service';\nimport { LoginStore } from './store/login.store';\n\n@NgModule({\n  declarations: [LoginPageComponent],\n  imports: [CommonModule, SharedModule],\n  exports: [LoginPageComponent],\n  providers: [LoginService, LoginStore]\n})\nexport class LoginPageModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { ApiRoute } from '../../../core';\nimport { map } from 'rxjs/operators';\nimport { LoginStore } from '../store/login.store';\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  private pToken: string;\n\n  constructor(private http: HttpClient, private loginStore: LoginStore) { }\n\n  getToken(username: string, password: string) {\n    const params = {username, password};\n    return this.http.post<{token: string}>(ApiRoute.login, params).pipe(map(response => {\n      if (response && response.token) {\n        this.loginStore.token = response.token;\n        return response.token;\n      }\n      return '';\n    }));\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginStore {\n\n  private pToken: string;\n\n\n  public get token() {\n\n    return this.pToken || localStorage.getItem('token');\n  }\n\n  public set token(token) {\n    this.pToken = token;\n    localStorage.setItem('token', token);\n  }\n\n  constructor() { }\n\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { RoutingService } from 'src/app/core/services/routing.service';\n\n@Component({\n  selector: 'app-template',\n  templateUrl: './template.component.html',\n  styleUrls: ['./template.component.scss']\n})\nexport class TemplateComponent implements OnInit, OnDestroy {\n\n  actSection = this.routingService.activeSection;\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(public routingService: RoutingService) {}\n\n  ngOnInit(): void {\n    this.subscriptions.push(\n      this.routingService.activeSection$.subscribe(activeSection =>\n        setTimeout(() => (this.actSection = activeSection), 0)\n      )\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"\">\n      <mat-icon>more_vert</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n      <button mat-menu-item (click)=\"routingService.gotoHome()\">\n        <mat-icon>more_vert</mat-icon>\n        <span>Home</span>\n      </button>\n      <button mat-menu-item (click)=\"routingService.gotoReload()\">\n        <mat-icon>publish</mat-icon>\n        <span>Ricarica</span>\n      </button>\n      <button mat-menu-item (click)=\"routingService.gotoPayment()\">\n        <mat-icon>euro</mat-icon>\n        <span>Pagamento</span>\n      </button>\n      <button mat-menu-item (click)=\"routingService.gotoMovement()\">\n        <mat-icon>account_balance_wallet</mat-icon>\n        <span>Movimenti</span>\n      </button>\n    </mat-menu>\n\n    <span class=\"title-big\">EasyPay</span>\n    <span class=\"title-separe\"> --> </span>\n    <span class=\"title-activePage\"> {{actSection}} </span>\n  </mat-toolbar-row>\n</mat-toolbar>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TemplateComponent } from './template.component';\nimport { HomeModule } from '../home/home.module';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [TemplateComponent],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule,\n    HomeModule,\n    RouterModule,\n  ],\n  exports: [TemplateComponent],\n})\nexport class TemplateModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.scss']\n})\nexport class BannerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed rutrum diam\n  posuere, tincidunt sapien sit amet, faucibus erat. Sed semper eu quam at\n  facilisis. Suspendisse accumsan pulvinar velit eu sollicitudin. Nulla massa\n  neque, pretium a cursus at, sodales id enim. Pellentesque volutpat, ante eu\n  varius luctus, lacus magna sollicitudin risus, ut tristique odio enim\n  vulputate odio. Sed eu justo augue. Fusce sem enim, gravida ac sollicitudin\n  sit amet, sagittis ac est. Aenean aliquam vulputate sem vitae porta. Morbi\n  eget magna sapien. In in interdum ante. Ut nisi enim, fermentum sed enim\n  vitae, accumsan mattis mauris. Praesent vel nisl lorem. Vestibulum eu urna\n  feugiat, dapibus massa sit amet, laoreet lorem.\n</p>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n/**\n * Nota: <app-big-button> richiede width e height impostati a 100%\n */\n@Component({\n  selector: 'app-big-button',\n  templateUrl: './big-button.component.html',\n  styleUrls: ['./big-button.component.scss']\n})\nexport class BigButtonComponent implements OnInit {\n\n  @Input() label: string;\n  @Input() icon: string;\n\n  @Output() clickEmitter: EventEmitter<void> = new  EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  clickEvent(): void {\n    this.clickEmitter.next();\n  }\n}\n","<div class=\"button-container widget-container shadow-border\" (click)=\"clickEvent()\">\n  <div class=\"icon-content\">\n    <mat-icon class=\"icon fix-top\" aria-hidden=\"false\" [inline]=\"true\">{{icon}}</mat-icon>\n  </div>\n  <div class=\"label-body\">\n    <span class=\"label centralize\" >{{label}}</span>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { CustomError, LoaderService, LoadingStatus } from 'src/app/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { debounceTime, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.scss']\n})\nexport class ErrorPageComponent implements OnInit {\n\n  /** titolo della pagina di errore */\n  titleLabel$: BehaviorSubject<string>;\n\n  /** contenuto html del messaggio di errore */\n  content$: BehaviorSubject<string>;\n\n  /** oggetto errore da stampare se presente */\n  error$: BehaviorSubject<CustomError>;\n\n  constructor(private route: ActivatedRoute, private loaderService: LoaderService) {\n    this.titleLabel$ = new BehaviorSubject('Impossibile procedere con il pagamento. Se il problema persiste contattare il venditore');\n    this.content$ = new BehaviorSubject('SUGGERIMENTO PER IL VENDITORE: assicurarsi che il idConto e prezzo siano validi');\n    this.error$ = new BehaviorSubject(undefined);\n    this.loaderService.status$.next(LoadingStatus.FAILED);\n  }\n\n  ngOnInit() {\n    this.route.queryParams\n    .pipe(\n      // debounceTime evita l'emit iniziale prima che i param siano effettivamente inizializzati\n      debounceTime(200),\n      switchMap(params => {\n        if ( params.titleLabel) {\n          this.titleLabel$.next(params.titleLabel);\n        }\n        if ( params.content ) {\n          this.content$.next(params.content);\n        }\n        if ( params.error ) {\n          this.error$.next(JSON.parse(params.error));\n        }\n        return [];\n      })\n    )\n    .subscribe();\n  }\n}\n","<app-error [titleLabel]=\"titleLabel$ | async\" [content]=\"content$ | async\" [error]=\"error$ | async\"></app-error>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { CustomError } from 'src/app/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n  /** titolo della pagina di errore */\n  @Input() titleLabel: string;\n\n  /** contenuto html del messaggio di errore */\n  @Input() content: string;\n\n  /** oggetto errore da stampare se presente */\n  @Input() error: CustomError;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<ng-container>\n  <h1 class=\"mb-0\">\n    <mat-icon svgIcon=\"alert-circle\" class=\"logo\"></mat-icon>\n  </h1>\n  <h2 class=\"logo-title mt-0\">{{titleLabel}}</h2>\n  <div [innerHTML]=\"content\"></div>\n\n  <p>{{ error | json }}</p>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<img src=\"assets/loader.gif\" alt=\"loader\">\n<mat-icon svgIcon=\"bank\" class=\"logo\"></mat-icon>\n","import { Component, OnInit } from '@angular/core';\nimport { LoginType } from '../../constants/login-type.enum';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { LoginService } from 'src/app/features/login-page/services/login.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  readonly LoginType = LoginType;\n  public loginType = LoginType.pin;\n\n  constructor(private routingService: RoutingService, private loginService: LoginService) { }\n\n  ngOnInit(): void {\n    this.routingService.updateHeader('Login');\n  }\n\n  changeLogin(choosenLoginType: LoginType) {\n    this.loginType = choosenLoginType;\n  }\n\n  login({username, password}: { username: string, password: string}) {\n    this.loginService.getToken(username, password);\n  }\n\n}\n","<div class=\"content\">\n  <div class=\"login-body\">\n    <div *ngIf=\"loginType === LoginType.pin\" (loginEvent)=\"login($event)\"><app-pin></app-pin></div>\n    <div *ngIf=\"loginType === LoginType.qr\"><app-qr-code></app-qr-code></div>\n    <div *ngIf=\"loginType === LoginType.nfc\"><app-nfc></app-nfc></div>\n  </div>\n</div>\n<button mat-icon-button (click)=\"changeLogin(LoginType.pin)\">\n  <mat-icon svgIcon=\"textbox-password\"></mat-icon>\n</button>\n<button mat-icon-button (click)=\"changeLogin(LoginType.qr)\" class=\"mr-2 ml-2\">\n  <mat-icon svgIcon=\"qrcode\"></mat-icon>\n</button>\n<button mat-icon-button (click)=\"changeLogin(LoginType.nfc)\">\n  <mat-icon svgIcon=\"nfc-variant\"></mat-icon>\n</button>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nfc',\n  templateUrl: './nfc.component.html',\n  styleUrls: ['./nfc.component.scss']\n})\nexport class NfcComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-icon svgIcon=\"nfc-variant\" class=\"nfc-icon\"></mat-icon>\n<div class=\"nfc-message\">passare il cellulare con nfc abilitato sul dispositivo per collegarsi</div>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\n\nimport { numericValidator } from '../../directives/numeric.directive';\n\n@Component({\n  selector: 'app-pin',\n  templateUrl: './pin.component.html',\n  styleUrls: ['./pin.component.scss']\n})\nexport class PinComponent implements OnInit {\n  /** controller del form */\n  formCrl: FormGroup;\n\n  @Output() loginEvent = new EventEmitter<{username: string, password: string}>();\n\n  constructor(\n    private fb: FormBuilder\n  ) {\n    this.formCrl = this.fb.group({\n      userId: this.fb.control('', [Validators.required]),\n      pinCode: this.fb.control('', [Validators.required, numericValidator(), Validators.minLength(4), Validators.maxLength(4)])\n    });\n  }\n\n  ngOnInit() {}\n\n  login() {\n    this.loginEvent.emit({username: this.formCrl.value.userId, password: this.formCrl.value.pinCode});\n  }\n}\n","<div>\n  <form class=\"form\" [formGroup]=\"formCrl\">\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput placeholder=\"ID*\" formControlName=\"userId\" />\n        <mat-error *ngIf=\"formCrl.controls['userId'].hasError('required')\"> L'id utente è <strong>richiesto</strong> </mat-error>\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput type=\"password\" placeholder=\"Pin*\" formControlName=\"pinCode\"/>\n        <mat-hint>4 cifre numeriche</mat-hint>\n        <mat-error *ngIf=\"formCrl.controls['pinCode'].hasError('minLength') || formCrl.controls['pinCode'].hasError('maxLength') || formCrl.controls['pinCode'].hasError('numeric')\">\n          il pin è composto da 4 cifre <strong>numeriche</strong>\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['pinCode'].hasError('required')\"> pin obbligatorio per il login </mat-error>\n      </mat-form-field>\n    </div>\n    <div class=\"login\">\n        <button mat-button color=\"primary\" [disabled]=\"formCrl.status === 'INVALID'\" (click)=\"login()\">Login</button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { BarcodeFormat } from '@zxing/library';\nimport { ZXingScannerComponent } from '@zxing/ngx-scanner';\nimport { BehaviorSubject } from 'rxjs';\nimport { ClienteService, CUSTOM_ERROR, PrezzoService } from 'src/app/core';\n\n@Component({\n  selector: 'app-qr-code',\n  templateUrl: './qr-code.component.html',\n  styleUrls: ['./qr-code.component.scss']\n})\nexport class QrCodeComponent implements OnInit {\n\n  /** standard accettati dal lettore */\n  readonly allowedFormats = [ BarcodeFormat.QR_CODE, BarcodeFormat.EAN_13];\n\n  /**\n   * scanner.\n   * documentazione: https://github.com/zxing-js/ngx-scanner/wiki/Advanced-Usage\n   */\n  @ViewChild(ZXingScannerComponent)\n  scanner: ZXingScannerComponent;\n\n  /** determina se è riuscito ad aprire o meno lo scanner */\n  statusScanner$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(private clienteService: ClienteService, private pagamentoService: PrezzoService) { }\n\n  ngOnInit() { }\n\n  /** alla lettura dello stato prova ad effettuare il login */\n  scanSuccessHandler(token: string) {\n    this.scanner.enable = false;\n    this.clienteService.getClienteByToken(token).subscribe(result => {\n      if (result.type !== CUSTOM_ERROR) {\n        this.pagamentoService.handlePagamento();\n      } else {\n        this.scanner.enable = true;\n      }\n\n    });\n  }\n\n  /** modifica lo stato del reader, che indica se è in funzione o ha dei problemi in esecuzione */\n  readerStatus(status: boolean) {\n    this.statusScanner$.next(status);\n  }\n}\n","<!-- scanner -->\n<div [hidden]=\"!(statusScanner$ | async)\">\n  <zxing-scanner\n    class=\"qr-reader\"\n    [formats]=\"allowedFormats\"\n    (scanSuccess)=\"scanSuccessHandler($event)\"\n    (permissionResponse)=\"readerStatus($event)\"\n  ></zxing-scanner>\n</div>\n\n<!-- gestione in caso di scanner disabilitato o non funzionante -->\n<div [hidden]=\"statusScanner$ | async\">\n  <mat-icon svgIcon=\"qrcode\" class=\"qr-icon\"></mat-icon>\n  <div class=\"qr-message\">abilitare il lettore qrcode.</div>\n</div>\n","export enum LoginType {\n  pin= 'PIN',\n  qr= 'QR',\n  nfc= 'NFC',\n}\n","import { Directive } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator, ValidatorFn } from '@angular/forms';\n\n/** Validatore di caratteri numerici. ritorna */\nexport function numericValidator(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const isNumeric = new RegExp('^[0-9]*$').test(control.value);\n    return !isNumeric ? { 'numeric': { value: control.value } } : null;\n  };\n}\n\n@Directive({\n  selector: '[appNumeric]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: NumericDirective, multi: true }]\n})\nexport class NumericDirective implements Validator {\n\n  validate(control: AbstractControl): { [key: string]: any } | null {\n    return  numericValidator()(control);\n  }\n}\n","export { SharedModule } from './shared.module';\n\nexport { LoginType } from './constants/login-type.enum';\n\nexport { QrCodeComponent } from './components/qr-code/qr-code.component';\nexport { NfcComponent } from './components/nfc/nfc.component';\nexport { PinComponent } from './components/pin/pin.component';\nexport { LoginComponent } from './components/login/login.component';\nexport { BigButtonComponent } from './components/big-button/big-button.component';\n\n\nexport { numericValidator, NumericDirective } from './directives/numeric.directive';\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatInputModule } from '@angular/material/input';\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\n\nimport { CoreModule } from '../core/core.module';\nimport { BigButtonComponent } from './components/big-button/big-button.component';\nimport { ErrorPageComponent } from './components/error-page/error-page.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { LoaderComponent } from './components/loader/loader.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { NfcComponent } from './components/nfc/nfc.component';\nimport { PinComponent } from './components/pin/pin.component';\nimport { QrCodeComponent } from './components/qr-code/qr-code.component';\nimport { NumericDirective } from './directives/numeric.directive';\nimport { BannerComponent } from './components/banner/banner.component';\n\n@NgModule({\n  declarations: [\n    QrCodeComponent,\n    NfcComponent,\n    PinComponent,\n    NumericDirective,\n    LoaderComponent,\n    ErrorPageComponent,\n    ErrorComponent,\n    LoginComponent,\n    BigButtonComponent,\n    BannerComponent\n  ],\n  imports: [\n    CommonModule,\n    CoreModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    ReactiveFormsModule,\n    ZXingScannerModule,\n    MatGridListModule,\n  ],\n  exports: [LoaderComponent, ErrorComponent, LoginComponent, BigButtonComponent, MatGridListModule, BannerComponent]\n})\nexport class SharedModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}