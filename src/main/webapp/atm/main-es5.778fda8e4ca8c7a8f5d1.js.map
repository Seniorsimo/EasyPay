{"version":3,"sources":["webpack:///src/app/features/recharge/recharge.module.ts","webpack:///src/app/shared/components/price-widget/price-widget.component.ts","webpack:///src/app/shared/components/price-widget/price-widget.component.html","webpack:///src/app/features/home/home.component.ts","webpack:///src/app/features/home/home.component.html","webpack:///src/app/http-interceptors/index.ts","webpack:///src/app/shared/constants/login-type.enum.ts","webpack:///src/app/core/services/local-storage.service.ts","webpack:///src/app/shared/pipes/min.pipe.ts","webpack:///src/app/shared/components/join/parts/abstract-join-part/abstract-join-part.component.ts","webpack:///src/app/shared/components/join/parts/abstract-join-part/abstract-join-part.component.html","webpack:///src/app/shared/components/loader/loader.component.ts","webpack:///src/app/shared/components/loader/loader.component.html","webpack:///src/app/features/login-page/services/login.service.ts","webpack:///src/app/core/services/routing.service.ts","webpack:///src/app/core/constants/routing.constants.ts","webpack:///src/app/features/recharge/components/dialog-recharge/dialog-recharge.component.ts","webpack:///src/app/features/recharge/components/dialog-recharge/dialog-recharge.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/shared/components/login/login.component.ts","webpack:///src/app/shared/components/login/login.component.html","webpack:///src/app/shared/components/join/parts/join-part3/join-part3.component.ts","webpack:///src/app/shared/components/join/parts/join-part3/join-part3.component.html","webpack:///src/app/features/login-page/store/auth.store.ts","webpack:///src/app/shared/index.ts","webpack:///src/app/features/template/template.component.ts","webpack:///src/app/features/template/template.component.html","webpack:///src/app/core/constants/user-type.enum.ts","webpack:///src/app/shared/components/nfc/nfc.component.ts","webpack:///src/app/shared/components/nfc/nfc.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/core/services/cliente.service.ts","webpack:///src/app/features/payments/payments.component.ts","webpack:///src/app/features/payments/payments.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/shared/components/error/error.component.ts","webpack:///src/app/shared/components/error/error.component.html","webpack:///src/app/core/services/movimento.service.ts","webpack:///src/app/shared/directives/numeric.directive.ts","webpack:///src/app/app.module.ts","webpack:///src/app/features/template/template.module.ts","webpack:///src/app/shared/components/banner/banner.component.ts","webpack:///src/app/shared/components/banner/banner.component.html","webpack:///src/app/http-interceptors/auth.interceptor.ts","webpack:///src/app/features/payments/payments.module.ts","webpack:///src/app/core/index.ts","webpack:///src/app/features/home/home.module.ts","webpack:///src/app/shared/components/join/parts/join-part1/join-part1.component.ts","webpack:///src/app/shared/components/join/parts/join-part1/join-part1.component.html","webpack:///src/app/features/login-page/login-page.module.ts","webpack:///src/app/core/utils/custom-validator.ts","webpack:///src/app/features/recharge/recharge.component.ts","webpack:///src/app/features/recharge/recharge.component.html","webpack:///src/app/shared/components/pin/pin.component.ts","webpack:///src/app/shared/components/pin/pin.component.html","webpack:///src/app/shared/components/join/join.component.ts","webpack:///src/app/shared/components/join/join.component.html","webpack:///src/app/shared/components/join/parts/join-part0/join-part0.component.ts","webpack:///src/app/shared/components/join/parts/join-part0/join-part0.component.html","webpack:///src/app/core/guards/auth-guard.service.ts","webpack:///src/app/core/guards/no-login-guard.service.ts","webpack:///src/app/shared/components/recognition/recognition.component.ts","webpack:///src/app/shared/components/recognition/recognition.component.html","webpack:///src/app/core/services/loader.service.ts","webpack:///src/app/shared/components/join/parts/join-dashboard/join-dashboard.component.ts","webpack:///src/app/shared/components/join/parts/join-dashboard/join-dashboard.component.html","webpack:///src/app/shared/pipes/switch-number.pipe.ts","webpack:///src/app/shared/components/big-button/big-button.component.ts","webpack:///src/app/shared/components/big-button/big-button.component.html","webpack:///src/app/core/core.module.ts","webpack:///src/app/shared/components/info-widget/info-widget.component.ts","webpack:///src/app/shared/components/info-widget/info-widget.component.html","webpack:///src/app/shared/components/join/parts/join-part2/join-part2.component.ts","webpack:///src/app/shared/components/join/parts/join-part2/join-part2.component.html","webpack:///src/app/core/store/self.store.ts","webpack:///src/app/shared/components/error-page/error-page.component.ts","webpack:///src/app/shared/components/error-page/error-page.component.html","webpack:///src/app/features/payments/components/dialog-payment/dialog-payment.component.ts","webpack:///src/app/features/payments/components/dialog-payment/dialog-payment.component.html","webpack:///src/app/features/login-page/login-page.component.ts","webpack:///src/app/features/login-page/login-page.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/shared/components/qr-code/qr-code.component.ts","webpack:///src/app/shared/components/qr-code/qr-code.component.html"],"names":["RechargeModule","declarations","imports","PriceWidgetComponent","fb","payStatus","formCrl","group","price","control","required","date","value","getDateNow","disabled","invoice","Date","toISOString","substr","submit","invalid","emit","disable","makeAction","selector","templateUrl","styleUrls","title","operationLabel","canInvoice","HomeComponent","routingService","selfStore","clienteService","snackBar","buttonWidth","buttonHeight","toastConfig","horizontalPosition","verticalPosition","panelClass","updateHeader","email","budget","getSelfClient","getSelfConto","pipe","element","isSelfCliente","updateCliente","isSelfConto","updateConto","subscribe","handleCustomerPermission","gotoPayment","gotoRecharge","type","merchant","isMercant","open","cliente","conto","gotoMovements","httpInterceptorProviders","provide","useClass","multi","LoginType","LocalStorageService","name","item","localStorage","getItem","JSON","parse","undefined","removeItem","setItem","stringify","providedIn","MinPipe","values","Array","isArray","console","error","some","n","Math","min","AbstractJoinPartComponent","valid","validateAllFormFields","formGroup","Object","keys","controls","forEach","field","get","markAsTouched","onlySelf","LoaderComponent","LoginService","http","authStore","password","params","post","login","response","token","logout","RoutingService","router","activeSection","activeSection$","text","next","navigate","home","payment","recharge","movement","RoutersPath","base","baseUrl","apiUrl","ApiRoute","clienti","movimenti","conti","DialogRechargeComponent","dialogRef","data","movimentoService","priceInfo","idConto","openSnackBar","close","gotoHome","window","location","reload","message","cssClass","completeRecharge","undo","environment","production","enviromentName","LoginComponent","loginService","joinRequest","errorToastRef","minLength","maxLength","getToken","dismiss","status","join","StatusEnum","JoinPart3Component","waiting","success","failed","AuthStore","localStorageService","pToken","TemplateComponent","menuItems","label","icon","clickEvent","isVisible","isLogin","isEnable","gotoMovement","actSection","subscriptions","push","setTimeout","sub","unsubscribe","reset","gotoLogin","UserType","NfcComponent","SharedModule","exports","entryComponents","ClienteService","httpClient","id","pin","_getClient","otp","result","customer","PaymentsComponent","dialog","a","b","completePayment","complete","disableClose","authClientStatus","AppComponent","loaderService","statusLoader$","status$","ErrorComponent","titleLabel","content","MovimentoService","idCliente","idCommerciante","prezzo","numericValidator","isNumeric","RegExp","test","NumericDirective","useExisting","providers","AppModule","forRoot","bootstrap","TemplateModule","BannerComponent","AuthInterceptor","req","authReq","clone","headers","set","handle","PaymentsModule","HomeModule","JoinPart1Component","nome","cognome","cf","bornDate","phone","address","LoginPageModule","isOver18","errorCode","age","getBirthday","isBorn","now","getTime","ageDifMs","ageDate","abs","getUTCFullYear","RechargeComponent","PinComponent","clientAuthEvent","userId","getClienteByPin","JoinComponent","resolver","maxPage","loginRequest","page","container","clear","loadComponent","factory","resolveComponentFactory","componentRef","createComponent","instance","pg","validate","getValue","setPage","read","JoinPart0Component","valuesOutput","AuthGuard","loginStore","NoLoginGuard","RecognitionComponent","loginType","choosenLoginType","changeLogin","LoadingStatus","LoaderService","LOADING","JoinDashboardComponent","changePage","backPage","nextPage","SwitchNumberPipe","switchFn","length","equal","BigButtonComponent","clickEmitter","CoreModule","matIconRegistry","domSanitizer","addSvgIconSet","bypassSecurityTrustResourceUrl","ngModule","InfoWidgetComponent","numConto","regSocial","JoinPart2Component","piva","ragSoc","valueChanges","userType","enable","SelfStore","localStoreVariable","createdAt","updatedAt","birthDate","regSociale","pIva","saldo","avariableBadget","birth_date","ragSociale","pId","pEmail","pCognome","pNome","pCf","pCreatedAt","pUpdatedAt","pIdConto","pType","pAddress","pPhone","pBirthDate","pRagSociale","pPIva","pBudget","pSaldo","pAvariableBadget","ErrorPageComponent","route","titleLabel$","content$","error$","FAILED","queryParams","DialogPaymentComponent","pay","duration","FormTypes","LoginPageComponent","formType","warn","clickInfo","routes","path","component","children","redirectTo","pathMatch","canActivate","AppRoutingModule","bootstrapModule","err","webpackEmptyAsyncContext","Promise","resolve","then","e","Error","code","module","QrCodeComponent","allowedFormats","QR_CODE","EAN_13","currentDevice","statusScanner$","scanner","getClienteByTokenOtp","devices","availableDevices","onCamerasFound","scanSuccessHandler","readerStatus"],"mappings":"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","file":"main-es5.778fda8e4ca8c7a8f5d1.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RechargeComponent } from './recharge.component';\nimport { SharedModule } from 'src/app/shared';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { DialogRechargeComponent } from './components/dialog-recharge/dialog-recharge.component';\n\n\n\n@NgModule({\n  declarations: [RechargeComponent, DialogRechargeComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatSnackBarModule,\n  ]\n})\nexport class RechargeModule { }\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\n\n@Component({\n  selector: 'app-price-widget',\n  templateUrl: './price-widget.component.html',\n  styleUrls: ['./price-widget.component.scss']\n})\nexport class PriceWidgetComponent implements OnInit {\n\n  @Input() title: string;\n  /** nome del bottone da cliccare */\n  @Input() operationLabel: string;\n  /** flag che fa apparire il tasto per la fattura elettronica */\n  @Input() canInvoice: boolean;\n\n  @Output() payStatus = new EventEmitter<{price: string, date: string, invoice: string}>();\n\n  formCrl: FormGroup;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.formCrl = this.fb.group({\n      price: this.fb.control('', [Validators.required]),\n      date: this.fb.control({value: this.getDateNow(), disabled: true}, [Validators.required]),\n      invoice: this.fb.control(false, []),\n    });\n  }\n\n  private getDateNow() {\n    return new Date().toISOString().substr(0, 10);\n  }\n\n  /** effettua l'azione di submit del bottone */\n  makeAction(submit: MatButton) {\n    if (!this.formCrl.invalid) {\n      // NOTA: date non è incluso in formCtr perchè è disabilitato\n      this.payStatus.emit({...this.formCrl.value, date: this.getDateNow()});\n      this.formCrl.disable();\n      submit.disabled = true;\n    }\n  }\n\n}\n","<h1 class=\"title\" style=\"margin-top: 20px;\">{{ title }}</h1>\n\n<form class=\"form\" [formGroup]=\"formCrl\">\n  <div class=\"flex-container\">\n    <div class=\"inputs-pay\">\n      <div>\n        <mat-form-field class=\"middle-width\">\n          <mat-label>Prezzo</mat-label>\n          <input matInput type=\"number\" formControlName=\"price\" />\n        </mat-form-field>\n      </div>\n      <div>\n        <mat-form-field class=\"middle-width\">\n          <mat-label>Data</mat-label>\n          <input matInput type=\"date\" formControlName=\"date\" />\n        </mat-form-field>\n      </div>\n    </div>\n    <div class=\"inputs-button\">\n      <span *ngIf=\"canInvoice !== false\"  style=\"margin: 0 5px 5px 40px\">\n        <mat-checkbox formControlName=\"invoice\">Fattura elettronica</mat-checkbox>\n      </span>\n      <span>\n        <button #submit mat-raised-button color=\"primary\" (click)=\"makeAction(submit)\">{{operationLabel}}</button>\n      </span>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from '@angular/material/snack-bar';\nimport { asyncScheduler, scheduled } from 'rxjs';\nimport { mergeAll, map } from 'rxjs/operators';\nimport { Cliente, ClienteService } from 'src/app/core';\nimport { UserType } from 'src/app/core/constants/user-type.enum';\nimport { Conto } from 'src/app/core/models/conto.model';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { SelfStore } from 'src/app/core/store/self.store';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  readonly buttonWidth = '400px';\n  readonly buttonHeight = '250px';\n\n  private readonly toastConfig = {\n    horizontalPosition: 'center' as MatSnackBarHorizontalPosition,\n    verticalPosition: 'top' as MatSnackBarVerticalPosition,\n    panelClass: 'toast-warning',\n  };\n\n  constructor(\n    private routingService: RoutingService,\n    private selfStore: SelfStore,\n    private clienteService: ClienteService,\n\n    private snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.routingService.updateHeader('Home');\n    if (!this.selfStore.email || !this.selfStore.budget) {\n      scheduled([\n        this.clienteService.getSelfClient(),\n        this.clienteService.getSelfConto(),\n      ], asyncScheduler).pipe(\n        mergeAll(),\n        map((element) => {\n          if (this.isSelfCliente(element)) {\n            this.selfStore.updateCliente(element as Cliente);\n          } else if (this.isSelfConto(element)) {\n            this.selfStore.updateConto(element as Conto);\n          }\n        })\n      )\n      .subscribe(() => this.handleCustomerPermission());\n    } else {\n      this.handleCustomerPermission();\n    }\n  }\n\n  gotoPayment() {\n    this.routingService.gotoPayment();\n  }\n\n  gotoRecharge() {\n    this.routingService.gotoRecharge();\n  }\n\n  gotoMovements() {}\n\n  /** verifica che il cliente sia un mercante */\n  isMercant(): boolean {\n    return this.selfStore.type === UserType.merchant;\n  }\n\n  /**\n   * verifica che il login abbia restituito un commerciante, altrimenti blocca l'atm chiedendo un upgrade\n   */\n  private handleCustomerPermission() {\n    if (!this.isMercant()) {\n      // warning: che serve un accesso da commerciante\n      this.snackBar.open('Per usare l\\'ATM è necessario un account da commerciante. Aggiorna il tuo profilo', 'Undo', this.toastConfig);\n    }\n  }\n\n  /** verifica se l'oggetto passato è un cliente */\n  private isSelfCliente(cliente): boolean {\n    return cliente && cliente.email;\n  }\n\n    /** verifica se l'oggetto passato è un conto */\n    private isSelfConto(conto): boolean {\n      return conto && conto.budget;\n    }\n}\n","<div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-between start\">\n  <div fxFlex class=\"widget-container shadow-border\">\n    <app-big-button\n      class=\"button\"\n      label=\"Pagamento\"\n      icon=\"euro\"\n      [disabled]=\"!isMercant()\"\n      (clickEmitter)=\"gotoPayment()\"\n    >\n    </app-big-button>\n  </div>\n\n  <div fxFlex class=\"widget-container shadow-border\">\n    <app-big-button\n      class=\"button\"\n      label=\"Info Conto\"\n      icon=\"info\"\n      (clickEmitter)=\"gotoPayment()\"\n    ></app-big-button>\n  </div>\n</div>\n\n<div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-between start\">\n  <div fxFlex class=\"widget-container shadow-border\">\n    <app-big-button\n    class=\"button\"\n    label=\"Ricarica\"\n    icon=\"publish\"\n    [disabled]=\"!isMercant()\"\n    (clickEmitter)=\"gotoRecharge()\"\n    ></app-big-button>\n  </div>\n\n  <div fxFlex class=\"widget-container shadow-border\">\n    <app-big-button\n      class=\"button\"\n      label=\"Movimenti\"\n      icon=\"account_balance_wallet\"\n      [disabled]=\"!isMercant()\"\n      (clickEmitter)=\"gotoMovements()\"\n    ></app-big-button>\n  </div>\n</div>\n\n<div fxLayout class=\"footer\">\n  <div class=\"widget-container shadow-border spam-widget\">\n    <app-banner></app-banner>\n  </div>\n</div>\n","/* \"Barrel\" of Http Interceptors */\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AuthInterceptor } from './auth.interceptor';\n\n\n\n/** Http interceptor providers in outside-in order */\nexport const httpInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n];\n","export enum LoginType {\n  pin= 'PIN',\n  qr= 'QR',\n  nfc= 'NFC',\n  success= 'SUCCESS',\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n\n  constructor() { }\n\n  public getItem(name: string) {\n    const item = localStorage.getItem(name);\n    return JSON.parse(!item || item === 'undefined' ? null : item);\n  }\n\n  public setItem(name: string, value: any) {\n    if (value === undefined) {\n      localStorage.removeItem(name);\n    } else {\n      localStorage.setItem(name, JSON.stringify(value));\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isNumber } from 'util';\n\n/**\n * restituisce il minimo tra i due valori passati\n */\n@Pipe({\n  name: 'min'\n})\nexport class MinPipe implements PipeTransform {\n\n  transform(values: number[], ...args: unknown[]): number {\n    if (!Array.isArray(values)) {\n      console.error('MinPipe richiede la presenza di un array di numeri per funzionare');\n      console.error(values);\n      return -1;\n    }\n    if (values.some(n => !(typeof n === 'number'))) {\n      console.error('MinPipe richiede che l\\'array contenga valori numerici');\n      console.error(values);\n      return -1;\n    }\n    return Math.min(...values);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-abstract-join-part',\n  templateUrl: './abstract-join-part.component.html',\n  styleUrls: ['./abstract-join-part.component.scss']\n})\nexport abstract class AbstractJoinPartComponent implements OnInit {\n\n  /** controller del form */\n  formCrl: FormGroup;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  validate() {\n    if (this.formCrl.valid) {\n      return true;\n    } else {\n      this.validateAllFormFields(this.formCrl);\n      return false;\n    }\n  }\n\n  abstract getValue(): object;\n\n  private validateAllFormFields(formGroup: FormGroup) {\n    Object.keys(formGroup.controls).forEach((field) => {\n      const control = formGroup.get(field);\n      if (control instanceof FormControl) {\n        control.markAsTouched({ onlySelf: true });\n      } else if (control instanceof FormGroup) {\n        this.validateAllFormFields(control);\n      }\n    });\n  }\n\n}\n","<p>abstract-join-part works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<img src=\"assets/loader.gif\" alt=\"loader\">\n<mat-icon svgIcon=\"bank\" class=\"logo\"></mat-icon>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { ApiRoute } from '../../../core';\nimport { AuthStore } from '../store/auth.store';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n\n  constructor(private http: HttpClient, private authStore: AuthStore) {}\n\n\n  getToken(email: string, password: string) {\n    const params = { email, password };\n    return this.http.post<{ token: string }>(ApiRoute.login, params).pipe(\n      map((response) => {\n        if (response && response.token) {\n          this.authStore.token = response.token;\n          return response.token;\n        }\n        return '';\n      }),\n      catchError(error => {\n        throw(error);\n      })\n    );\n  }\n\n  /** */\n  logout() {\n    return this.http.post(ApiRoute.logout, {}).pipe(\n      map((response) => {\n        if (response) {\n          this.authStore.token = undefined;\n        }\n        return true;\n      }),\n      catchError(error => {\n        console.error(error);\n        this.authStore.token = undefined;\n        return of(false);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { RoutersPath } from '../constants/routing.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoutingService {\n\n  activeSection = '';\n  activeSection$ = new Subject<string>();\n\n\n  constructor(private router: Router) { }\n\n\n  /** gestisce l'header nel TemplateComponent */\n  updateHeader(text: string) {\n    this.activeSection = text;\n    this.activeSection$.next(text);\n  }\n\n  gotoHome() {\n    this.router.navigate([RoutersPath.home]);\n  }\n\n  gotoLogin() {\n    this.router.navigate([RoutersPath.login]);\n  }\n\n  // gotoReload() {\n  //   this.router.navigate([RoutersPath.reload]);\n  // }\n\n  gotoPayment() {\n    this.router.navigate([RoutersPath.payment]);\n  }\n\n  gotoRecharge() {\n    this.router.navigate([RoutersPath.recharge]);\n  }\n\n  gotoMovement() {\n    this.router.navigate([RoutersPath.movement]);\n  }\n}\n","import { environment } from 'src/environments/environment';\n\nexport const RoutersPath = {\n  base: '',\n  home: 'home',\n  login: 'login',\n  payment: 'payments',\n  recharge: 'recharges',\n  movement: 'movements',\n  // reload: 'reload'\n};\n\nexport const baseUrl = environment.apiUrl;\n\nexport const ApiRoute = {\n  login: baseUrl + 'api/login',\n  logout: baseUrl + 'api/logout',\n  clienti: baseUrl + 'api/clienti',\n  movimenti: baseUrl + 'api/movimenti',\n  conti: baseUrl + 'api/conti',\n\n};\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Cliente, MovimentoService } from 'src/app/core';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { SelfStore } from 'src/app/core/store/self.store';\nimport { DialogData } from 'src/app/features/payments/payments.component';\n\n@Component({\n  selector: 'app-dialog-recharge',\n  templateUrl: './dialog-recharge.component.html',\n  styleUrls: ['./dialog-recharge.component.scss']\n})\nexport class DialogRechargeComponent {\n\n\n  public cliente: Cliente;\n  public priceInfo: DialogData['priceInfo'];\n\n  constructor(\n    private dialogRef: MatDialogRef<DialogRechargeComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: DialogData,\n    private movimentoService: MovimentoService,\n    private selfStore: SelfStore,\n    private routingService: RoutingService,\n    private snackBar: MatSnackBar,\n  ) {\n    this.cliente = data.cliente;\n    this.priceInfo = data.priceInfo;\n  }\n\n  completeRecharge() {\n    this.movimentoService\n      .recharge(this.cliente.idConto, this.selfStore.idConto, this.priceInfo.price)\n      .subscribe(() => {\n        // ricarica avvenuto con successo\n        this.openSnackBar('ricarica effettuata con successo', 'success');\n      },\n      (error) => {\n        // errore nel ricarica\n        this.openSnackBar('ricarica fallita', 'failure');\n        console.error(error);\n      },\n      // complete\n      () => {\n        this.dialogRef.close();\n        this.routingService.gotoHome();\n      });\n  }\n\n  undo() {\n    this.dialogRef.close();\n    window.location.reload();\n  }\n\n  private openSnackBar(message: string, cssClass?: string) {\n    this.snackBar.open(message, 'chiudi', {\n      // verticalPosition: MatSnackBarVerticalPosition,\n      // horizontalPosition: MatSnackBarHorizontalPosition,\n      panelClass: ['rechargetost', cssClass],\n      //duration: 10000,\n    });\n  }\n}\n","<div>\n  <h2>Confermi l'operazione?</h2>\n  <div class=\"container\">\n    <button class=\"marg\" mat-raised-button color=\"primary\" (click)=\"completeRecharge()\">PROSEGUI</button>\n    <button class=\"marg\" mat-raised-button color=\"secondary\" (click)=\"undo()\">INDIETRO</button>\n  </div>\n\n</div>\n","/** enviroment della build per il testing */\nexport const environment = {\n  production: false,\n  enviromentName: 'Application',\n  apiUrl: '/',\n};\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarRef,\n  MatSnackBarVerticalPosition,\n  TextOnlySnackBar,\n} from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { RoutersPath } from 'src/app/core';\nimport { LoginService } from 'src/app/features/login-page/services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  /** controller del form */\n  formCrl: FormGroup;\n\n  @Output() joinRequest = new EventEmitter<void>();\n\n  private errorToastRef: MatSnackBarRef<TextOnlySnackBar> = null;\n\n  private readonly toastConfig = {\n    horizontalPosition: 'center' as MatSnackBarHorizontalPosition,\n    verticalPosition: 'top' as MatSnackBarVerticalPosition,\n    panelClass: 'toast-error',\n  };\n\n  constructor(\n    private fb: FormBuilder,\n    private loginService: LoginService,\n    private router: Router,\n    private snackBar: MatSnackBar\n  ) {\n    this.formCrl = this.fb.group({\n      email: this.fb.control('', [Validators.required, Validators.email]),\n      password: this.fb.control('', [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(16),\n      ]),\n    });\n  }\n\n  ngOnInit() {}\n\n  login() {\n    this.loginService\n      .getToken(this.formCrl.value.email, this.formCrl.value.password)\n      .subscribe(\n        (token) => {\n          if (this.errorToastRef) {\n            this.errorToastRef.dismiss();\n          }\n          return this.router.navigate([RoutersPath.home], {});\n        },\n        (error: HttpErrorResponse) => {\n          if (error && error.status) {\n            if (error.status === 401) {\n                this.errorToastRef = this.snackBar.open(\n                'Dati per il login errati!',\n                'Undo',\n                this.toastConfig\n              );\n            }\n          } else {\n            console.error(error);\n            this.snackBar.open(\n              'Errore generico durante il login!',\n              'Undo',\n              this.toastConfig\n            );\n          }\n        }\n      );\n  }\n\n  join() {\n    this.joinRequest.next();\n  }\n}\n","<div>\n  <form class=\"form\" [formGroup]=\"formCrl\">\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput placeholder=\"email*\" formControlName=\"email\" />\n        <mat-error *ngIf=\"formCrl.controls['email'].hasError('required')\"> Email <strong>obbligatoria</strong> </mat-error>\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput type=\"password\" placeholder=\"Password*\" formControlName=\"password\"/>\n        <mat-error *ngIf=\"formCrl.controls['password'].hasError('minLength') || formCrl.controls['password'].hasError('maxLength') || formCrl.controls['password'].hasError('numeric')\">\n          il pin è composto da 4-16 cifre <strong>numeriche</strong>\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['password'].hasError('required')\"> pin obbligatorio per il login </mat-error>\n      </mat-form-field>\n    </div>\n    <div class=\"login\">\n        <button mat-button color=\"primary\" [disabled]=\"formCrl.status === 'INVALID'\" (click)=\"login()\">Login</button>\n    </div>\n    <div class=\"join\">\n      <button mat-button color=\"primary\" (click)=\"join()\">Crea un nuovo account</button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiRoute } from 'src/app/core';\nimport { map, catchError } from 'rxjs/operators';\n\nenum StatusEnum {\n  waiting = 'waiting',\n  success = 'success',\n  failed = 'failed',\n}\n\n@Component({\n  selector: 'app-join-part3',\n  templateUrl: './join-part3.component.html',\n  styleUrls: ['./join-part3.component.scss']\n})\nexport class JoinPart3Component implements OnInit {\n  readonly StatusEnum = StatusEnum;\n\n  @Input() data: object;\n\n  status = StatusEnum.waiting;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.http.post(ApiRoute.clienti, this.data).pipe(\n      map(response => this.status = StatusEnum.success),\n      catchError(error => this.status = StatusEnum.failed))\n    .subscribe();\n  }\n\n}\n","<p *ngIf=\"status === StatusEnum.waiting\">in attesa della risposta del server...</p>\n<p *ngIf=\"status === StatusEnum.success\">registrazione completata con successo!</p>\n<p *ngIf=\"status === StatusEnum.failed\">registrazione fallita!</p>\n","import { Injectable } from '@angular/core';\nimport { LocalStorageService } from 'src/app/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthStore {\n\n  private pToken: string;\n\n\n  public get token() {\n    if (!this.pToken) {\n      this.pToken = this.localStorageService.getItem('token');\n    }\n    return this.pToken;\n  }\n\n  public set token(token) {\n    this.pToken = token;\n    this.localStorageService.setItem('token', token);\n  }\n\n  constructor(private localStorageService: LocalStorageService) { }\n\n}\n","export { SharedModule } from './shared.module';\n\nexport { LoginType } from './constants/login-type.enum';\n\nexport { QrCodeComponent } from './components/qr-code/qr-code.component';\nexport { NfcComponent } from './components/nfc/nfc.component';\nexport { PinComponent } from './components/pin/pin.component';\nexport { LoginComponent } from './components/login/login.component';\nexport { BigButtonComponent } from './components/big-button/big-button.component';\nexport { InfoWidgetComponent } from './components/info-widget/info-widget.component';\nexport { PriceWidgetComponent } from './components/price-widget/price-widget.component';\n\nexport { MinPipe } from './pipes/min.pipe';\nexport { SwitchNumberPipe } from './pipes/switch-number.pipe';\n\nexport { numericValidator, NumericDirective } from './directives/numeric.directive';\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { AuthStore } from '../login-page/store/auth.store';\nimport { LoginService } from '../login-page/services/login.service';\nimport { SelfStore } from 'src/app/core/store/self.store';\nimport { UserType } from 'src/app/core/constants/user-type.enum';\n\n@Component({\n  selector: 'app-template',\n  templateUrl: './template.component.html',\n  styleUrls: ['./template.component.scss']\n})\nexport class TemplateComponent implements OnInit, OnDestroy {\n\n  public menuItems: { label: string, icon: string, clickEvent: () => void, isVisible: () => boolean, isEnable: () => boolean }[] = [\n    {\n      label: 'Home',\n      icon: 'more_vert',\n      clickEvent: () => this.routingService.gotoHome(),\n      isVisible: () => this.isLogin(),\n      isEnable: () => true,\n    },\n    {\n      label: 'Ricarica',\n      icon: 'publish',\n      clickEvent: () => this.routingService.gotoRecharge(),\n      isVisible: () => this.isLogin(),\n      isEnable: () => this.isMercant(),\n    },\n    {\n      label: 'Pagamento',\n      icon: 'euro',\n      clickEvent: () => this.routingService.gotoPayment(),\n      isVisible: () => this.isLogin(),\n      isEnable: () => this.isMercant(),\n    },\n    {\n      label: 'Movimenti',\n      icon: 'account_balance_wallet',\n      clickEvent: () => this.routingService.gotoMovement(),\n      isVisible: () => this.isLogin(),\n      isEnable: () => this.isMercant(),\n    },\n    {\n      label: 'Logout',\n      icon: 'lock',\n      clickEvent: () => this.logout(),\n      isVisible: () => this.isLogin(),\n      isEnable: () => true,\n    },\n  ];\n\n  actSection = this.routingService.activeSection;\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(public routingService: RoutingService, private authStore: AuthStore, private loginService: LoginService, private selfStore: SelfStore) {}\n\n  ngOnInit(): void {\n    this.subscriptions.push(\n      this.routingService.activeSection$.subscribe(activeSection =>\n        setTimeout(() => (this.actSection = activeSection), 0)\n      )\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n\n  isLogin(): boolean {\n    return !!this.authStore.token;\n  }\n\n  logout() {\n    this.loginService.logout().subscribe(() => {\n      this.selfStore.reset();\n      this.routingService.gotoLogin();\n    });\n  }\n\n  menuDisabled(): boolean {\n    return !this.menuItems.some((item) => item.isVisible());\n  }\n\n  isMercant(): boolean {\n    return this.selfStore.type === UserType.merchant;\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"\" [disabled]=\"menuDisabled()\">\n      <mat-icon>more_vert</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n      <ng-container  *ngFor=\"let item of menuItems\">\n        <button\n          mat-menu-item\n          *ngIf=\"item.isVisible()\"\n          (click)=\"item.clickEvent()\"\n          [disabled]=\"!item.isEnable()\"\n        >\n          <mat-icon>{{ item.icon }}</mat-icon>\n          <span>{{ item.label }}</span>\n        </button>\n      </ng-container>\n    </mat-menu>\n\n    <span class=\"title-big\">EasyPay</span>\n    <span class=\"title-separe\"> --> </span>\n    <span class=\"title-activePage\"> {{ actSection }} </span>\n  </mat-toolbar-row>\n</mat-toolbar>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","/** Tipologia di utente che può essere */\nexport enum UserType {\n  customer = 'cliente',\n  merchant = 'commerciante',\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nfc',\n  templateUrl: './nfc.component.html',\n  styleUrls: ['./nfc.component.scss']\n})\nexport class NfcComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-icon svgIcon=\"nfc-variant\" class=\"nfc-icon\"></mat-icon>\n<div class=\"nfc-message\">passare il cellulare con nfc abilitato sul dispositivo per collegarsi</div>\n\n<div class=\"not-support\">(non supportato su questo dispositivo)</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\n\nimport { CoreModule } from '../core/core.module';\nimport { BannerComponent } from './components/banner/banner.component';\nimport { BigButtonComponent } from './components/big-button/big-button.component';\nimport { ErrorPageComponent } from './components/error-page/error-page.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { InfoWidgetComponent } from './components/info-widget/info-widget.component';\nimport { JoinComponent } from './components/join/join.component';\nimport { JoinDashboardComponent } from './components/join/parts/join-dashboard/join-dashboard.component';\nimport { JoinPart0Component } from './components/join/parts/join-part0/join-part0.component';\nimport { JoinPart1Component } from './components/join/parts/join-part1/join-part1.component';\nimport { JoinPart2Component } from './components/join/parts/join-part2/join-part2.component';\nimport { JoinPart3Component } from './components/join/parts/join-part3/join-part3.component';\nimport { LoaderComponent } from './components/loader/loader.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { NfcComponent } from './components/nfc/nfc.component';\nimport { PinComponent } from './components/pin/pin.component';\nimport { QrCodeComponent } from './components/qr-code/qr-code.component';\nimport { RecognitionComponent } from './components/recognition/recognition.component';\nimport { NumericDirective } from './directives/numeric.directive';\nimport { MinPipe } from './pipes/min.pipe';\nimport { SwitchNumberPipe } from './pipes/switch-number.pipe';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { PriceWidgetComponent } from './components/price-widget/price-widget.component';\n\n@NgModule({\n  declarations: [\n    QrCodeComponent,\n    NfcComponent,\n    PinComponent,\n    NumericDirective,\n    LoaderComponent,\n    ErrorPageComponent,\n    ErrorComponent,\n    LoginComponent,\n    BigButtonComponent,\n    BannerComponent,\n    RecognitionComponent,\n    MinPipe,\n    SwitchNumberPipe,\n    InfoWidgetComponent,\n    JoinComponent,\n    JoinPart0Component,\n    JoinPart1Component,\n    JoinPart2Component,\n    JoinDashboardComponent,\n    JoinPart3Component,\n    PriceWidgetComponent,\n  ],\n  imports: [\n    CommonModule,\n    CoreModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    ReactiveFormsModule,\n    ZXingScannerModule,\n    MatGridListModule,\n    MatSliderModule,\n    MatRadioModule,\n    MatDividerModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatCheckboxModule,\n  ],\n  exports: [\n    LoaderComponent,\n    ErrorComponent,\n    LoginComponent,\n    BigButtonComponent,\n    MatGridListModule,\n    BannerComponent,\n    RecognitionComponent,\n    MinPipe,\n    SwitchNumberPipe,\n    InfoWidgetComponent,\n    JoinComponent,\n    PriceWidgetComponent,\n  ],\n  entryComponents: [JoinPart0Component, JoinPart1Component, JoinPart2Component, JoinPart3Component],\n})\nexport class SharedModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { Cliente } from '../models/cliente.model';\nimport { UserType } from '../constants/user-type.enum';\nimport { SelfStore } from '../store/self.store';\nimport { ApiRoute } from '../constants/routing.constants';\nimport { Conto } from '../models/conto.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClienteService {\n\n  constructor(private httpClient: HttpClient, private selfStore: SelfStore) {\n  }\n\n  getClienteByPin(id: string, pin: string): Observable<Cliente>  {\n    const params: {pin: string} =  { pin } ;\n    return this._getClient(id, params);\n  }\n\n  getClienteByTokenOtp(otp: string): Observable<Cliente> {\n    const id = '0'; // TODO: ottenere l'id dall' OTP\n    const params: {otp: string} = { otp };\n    return this._getClient(id, params);\n  }\n\n  /** restituisce  */\n  getSelfClient(): Observable<Cliente> {\n    return this.httpClient.get<Cliente>(`${ApiRoute.clienti}/self`).pipe(\n      map(result => {\n        return (result) ? { type: UserType.customer, ...result } : null;\n      })\n    );\n  }\n\n  getSelfConto(): Observable<Conto> {\n    return this.httpClient.get<Conto>(`${ApiRoute.conti}/self`);\n  }\n\n\n  // getConto(idConto: string): Observable<Commerciante> {\n  //   // se già presente nello store non riscarica i dati del cliente:\n  //   if (this.contoCommerciante$.value.idConto) {\n  //     return this.contoCommerciante$;\n  //   }\n\n  //   // if (!idConto) {\n  //   //   return of(new WrongParamError(idConto));\n  //   // }\n\n  //   return this.httpClient\n  //     .get<Conto>(`/api/commercianti/${idConto}`)\n  //     .pipe(\n  //       map(result => {\n  //           const commerciante = { type: COMMERCIANTE_TYPE, ...result };\n  //           this.contoCommerciante$.next(commerciante);\n  //           return commerciante;\n  //       }),\n  //       catchError(error => {\n  //         throw error;\n  //       })\n  //     );\n  // }\n\n  /** effettua la richiesta HTTP per verificare se il login del cliente va a buon fine */\n  private _getClient(id: string, params: {pin?: string; otp?: string}): Observable<Cliente> {\n    return this.httpClient.get<Cliente>(`${ApiRoute.clienti}/${id}`, {params}).pipe(\n        map(result => ({ type: UserType.customer, ...result })),\n        catchError(error => { throw(error); })\n      );\n  }\n}\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { asyncScheduler, forkJoin, scheduled, Subject } from 'rxjs';\nimport { map, mergeAll } from 'rxjs/operators';\nimport { Cliente, ClienteService } from 'src/app/core';\nimport { UserType } from 'src/app/core/constants/user-type.enum';\nimport { Conto } from 'src/app/core/models/conto.model';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { SelfStore } from 'src/app/core/store/self.store';\n\nimport { DialogPaymentComponent } from './components/dialog-payment/dialog-payment.component';\n\n\nexport interface DialogData {\n  cliente: Cliente;\n  priceInfo: { price: string; date: string; invoice: string };\n}\n\n\n@Component({\n  selector: 'app-payments',\n  templateUrl: './payments.component.html',\n  styleUrls: ['./payments.component.scss'],\n})\nexport class PaymentsComponent implements OnInit, AfterViewInit {\n  public a = new Subject<Cliente>();\n  public b = new Subject<{ price: string; date: string; invoice: string }>();\n\n  constructor(\n    private routingService: RoutingService,\n    public selfStore: SelfStore,\n    private clienteService: ClienteService,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    if (!this.selfStore.email || !this.selfStore.budget) {\n      scheduled([\n        this.clienteService.getSelfClient(),\n        this.clienteService.getSelfConto(),\n      ], asyncScheduler).pipe(\n        mergeAll(),\n        map((element) => {\n          if (this.isSelfCliente(element)) {\n            this.selfStore.updateCliente(element as Cliente);\n          } else if (this.isSelfConto(element)) {\n            this.selfStore.updateConto(element as Conto);\n          }\n        })\n      )\n      .subscribe(() => this.handleCustomerPermission());\n    } else {\n      this.handleCustomerPermission();\n    }\n    this.completePayment();\n  }\n\n  ngAfterViewInit() {\n    this.routingService.updateHeader('Pagamento');\n  }\n\n  authClientStatus(cliente: Cliente) {\n    this.a.next(cliente);\n    this.a.complete();\n  }\n\n  payStatus(status: { price: string; date: string; invoice: string }) {\n    this.b.next(status);\n    this.b.complete();\n  }\n\n  completePayment() {\n    forkJoin({ cliente: this.a, priceInfo: this.b }).subscribe(\n      ({ cliente, priceInfo }) => {\n        this.dialog.open(DialogPaymentComponent, {\n          data: { cliente, priceInfo },\n          disableClose: true,\n        });\n      }\n    );\n  }\n\n  /** verifica che il cliente sia un mercante */\n  isMercant(): boolean {\n    return this.selfStore.type === UserType.merchant;\n  }\n\n\n  /**\n   * verifica che il login abbia restituito un commerciante, altrimenti blocca l'atm chiedendo un upgrade\n   */\n  private handleCustomerPermission() {\n    if (!this.isMercant()) {\n      this.routingService.gotoHome();\n    }\n  }\n\n  /** verifica se l'oggetto passato è un cliente */\n  private isSelfCliente(cliente): boolean {\n    return cliente && cliente.email;\n  }\n\n  /** verifica se l'oggetto passato è un conto */\n  private isSelfConto(conto): boolean {\n    return conto && conto.budget;\n  }\n}\n","<div class=\"flex-parent\">\n  <div class=\"flex widget-container shadow-border mb20 mr10\">\n    <app-recognition class=\"relative recognition\" (authClientStatus)=\"authClientStatus($event)\"></app-recognition>\n  </div>\n  <div class=\"flex widget-container shadow-border mb20 ml10\">\n    <app-info-widget\n      class=\" info-table\"\n      title=\"Personale\"\n      [numConto]=\"this.selfStore.idConto\"\n      [name]=\"this.selfStore.cognome +' '+ this.selfStore.nome\"\n      [regSocial]=\"this.selfStore.ragSociale\"\n      [address]=\"this.selfStore.address\"\n    ></app-info-widget>\n  </div>\n</div>\n\n<div class=\"flex-parent\">\n  <div class=\"widget-container shadow-border flex mb20\">\n    <app-price-widget title=\"Pagamento\" operationLabel=\"Paga\" [canInvoice]=\"true\" (payStatus)=\"payStatus($event)\"></app-price-widget>\n  </div>\n</div>\n\n<div class=\"flex-parent\">\n  <div class=\"widget-container shadow-border spam-widget\">\n    <app-banner></app-banner>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { LoadingStatus, LoaderService } from './core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  statusLoader$: BehaviorSubject<LoadingStatus>;\n\n  constructor(\n    public loaderService: LoaderService,\n  ) {\n    this.statusLoader$ = this.loaderService.status$;\n  }\n}\n","<div class=\"container\">\n  <!-- loader in attesa di recuperare il conto -->\n  <!-- <ng-container *ngIf=\"!(statusLoader$ | async)\">\n    <app-loader></app-loader>\n  </ng-container> -->\n  <router-outlet></router-outlet>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n  /** titolo della pagina di errore */\n  @Input() titleLabel: string;\n\n  /** contenuto html del messaggio di errore */\n  @Input() content: string;\n\n  /** oggetto errore da stampare se presente */\n  @Input() error;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<ng-container>\n  <h1 class=\"mb-0\">\n    <mat-icon svgIcon=\"alert-circle\" class=\"logo\"></mat-icon>\n  </h1>\n  <h2 class=\"logo-title mt-0\">{{titleLabel}}</h2>\n  <div [innerHTML]=\"content\"></div>\n\n  <p>{{ error | json }}</p>\n</ng-container>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { ApiRoute } from '../constants/routing.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovimentoService {\n\n  constructor(private http: HttpClient) { }\n\n\n  /** effettua un movimento di pagamento sul cliente */\n  pay(idCliente: string, idCommerciante: string, prezzo: string) {\n    const params = {\n      idCommerciante,\n      idCliente,\n      prezzo: -prezzo,\n    };\n    return this.http.post<{ success: boolean; error?: { id: string; message: string } }>(ApiRoute.movimenti, params).pipe(\n      map(result => {\n        console.error('TODO: gestire la risposta del pagamento');\n      })\n    );\n  }\n\n  /** effettua un movimento di caricamento sul cliente */\n  recharge(idCliente: string, idCommerciante: string, prezzo: string) {\n    const params = {\n      idCommerciante,\n      idCliente,\n      prezzo,\n    };\n    return this.http.post<{ success: boolean; error?: { id: string; message: string } }>(ApiRoute.movimenti, params).pipe(\n      map(result => {\n        console.error('TODO: gestire la risposta del pagamento');\n      })\n    );\n  }\n}\n","import { Directive } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator, ValidatorFn } from '@angular/forms';\n\n/** Validatore di caratteri numerici. ritorna */\nexport function numericValidator(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const isNumeric = new RegExp('^[0-9]*$').test(control.value);\n    return !isNumeric ? { 'numeric': { value: control.value } } : null;\n  };\n}\n\n/** Direttiva usata per validare se in un HTMLInput ha solo valori numerici */\n@Directive({\n  selector: '[appNumeric]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: NumericDirective, multi: true }]\n})\nexport class NumericDirective implements Validator {\n\n  validate(control: AbstractControl): { [key: string]: any } | null {\n    return  numericValidator()(control);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { HomeModule } from './features/home/home.module';\nimport { LoginPageModule } from './features/login-page/login-page.module';\nimport { PaymentsModule } from './features/payments/payments.module';\nimport { TemplateModule } from './features/template/template.module';\nimport { httpInterceptorProviders } from './http-interceptors';\nimport { SharedModule } from './shared';\nimport { RechargeModule } from './features/recharge/recharge.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule.forRoot(),\n    AppRoutingModule,\n    SharedModule,\n    TemplateModule,\n    LoginPageModule,\n    HomeModule,\n    PaymentsModule,\n    RechargeModule,\n  ],\n  providers: [\n    httpInterceptorProviders,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TemplateComponent } from './template.component';\nimport { HomeModule } from '../home/home.module';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [TemplateComponent],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule,\n    HomeModule,\n    RouterModule,\n  ],\n  exports: [TemplateComponent],\n})\nexport class TemplateModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.scss']\n})\nexport class BannerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed rutrum diam\n  posuere, tincidunt sapien sit amet, faucibus erat. Sed semper eu quam at\n  facilisis. Suspendisse accumsan pulvinar velit eu sollicitudin. Nulla massa\n  neque, pretium a cursus at, sodales id enim. Pellentesque volutpat, ante eu\n  varius luctus, lacus magna sollicitudin risus, ut tristique odio enim\n  vulputate odio. Sed eu justo augue. Fusce sem enim, gravida ac sollicitudin\n  sit amet, sagittis ac est. Aenean aliquam vulputate sem vitae porta. Morbi\n  eget magna sapien. In in interdum ante. Ut nisi enim, fermentum sed enim\n  vitae, accumsan mattis mauris. Praesent vel nisl lorem. Vestibulum eu urna\n  feugiat, dapibus massa sit amet, laoreet lorem.\n</p>\n","import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { AuthStore } from '../features/login-page/store/auth.store';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n/** Pass untouched request through to the next request handler. */\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n\n  constructor(private authStore: AuthStore, private router: Router) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const authReq = req.clone({\n      headers: req.headers.set('Authorization', this.authStore.token || '')\n    });\n    return next.handle(authReq)\n    .pipe(\n      // filter((response: HttpResponse<any>) => ),\n      map( (response: HttpResponse<any>) => {\n          if ( response && response.status === 403) {\n            console.error('Token di accesso scaduto, logout!');\n            this.authStore.token = undefined;\n            this.router.navigate([]);\n          }\n          return response;\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { SharedModule } from '../../shared';\nimport { DialogPaymentComponent } from './components/dialog-payment/dialog-payment.component';\nimport { PaymentsComponent } from './payments.component';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\n@NgModule({\n  declarations: [PaymentsComponent, DialogPaymentComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatSnackBarModule,\n  ],\n  exports: [PaymentsComponent]\n})\nexport class PaymentsModule { }\n","export * from './constants/routing.constants';\n\nexport { ClienteService } from './services/cliente.service';\nexport { LoaderService } from './services/loader.service';\nexport { LoadingStatus } from './services/loader.service';\nexport { LocalStorageService } from './services/local-storage.service';\nexport { MovimentoService } from './services/movimento.service';\n\nexport * from './models/cliente.model';\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from 'src/app/shared';\n\nimport { HomeComponent } from './home.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [CommonModule, SharedModule, FlexLayoutModule],\n  exports: [HomeComponent]\n})\nexport class HomeModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { isBorn, isOver18 } from 'src/app/core/utils/custom-validator';\n\nimport { AbstractJoinPartComponent } from '../abstract-join-part/abstract-join-part.component';\n\n@Component({\n  selector: 'app-join-part1',\n  templateUrl: './join-part1.component.html',\n  styleUrls: ['./join-part1.component.scss'],\n})\nexport class JoinPart1Component extends AbstractJoinPartComponent\n  implements OnInit {\n  constructor(private fb: FormBuilder) {\n    super();\n    this.formCrl = this.fb.group({\n      nome: this.fb.control('', [Validators.required]),\n      cognome: this.fb.control('', [Validators.required]),\n      cf: this.fb.control('', [Validators.required]),\n      bornDate: this.fb.control('', [Validators.required, isOver18, isBorn]),\n      phone: this.fb.control('', []),\n      address: this.fb.control('', []),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  getValue() {\n    return {\n      nome: this.formCrl.controls.nome.value,\n      cognome: this.formCrl.controls.cognome.value,\n      cf: this.formCrl.controls.cf.value,\n      bornDate: this.formCrl.controls.bornDate.value,\n      phone: this.formCrl.controls.phone.value,\n      address: this.formCrl.controls.address.value,\n    };\n  }\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n  <form class=\"form\" [formGroup]=\"formCrl\">\n    <div fxFlex>\n      <mat-form-field>\n        <input matInput placeholder=\"nome*\" formControlName=\"nome\" />\n        <mat-error *ngIf=\"formCrl.controls['nome'].hasError('required')\">\n          nome <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div fxFlex>\n      <mat-form-field>\n        <input matInput placeholder=\"cognome*\" formControlName=\"cognome\" />\n        <mat-error *ngIf=\"formCrl.controls['cognome'].hasError('required')\">\n          cognome <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div fxFlex>\n      <mat-form-field>\n        <input matInput placeholder=\"codice fiscale*\" formControlName=\"cf\" />\n        <mat-error *ngIf=\"formCrl.controls['cf'].hasError('required')\">\n          codice fiscale <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div fxFlex>\n      <mat-form-field>\n        <input\n          matInput\n          placeholder=\"data di nascita*\"\n          [matDatepicker]=\"bornDatePicker\"\n          formControlName=\"bornDate\"\n        />\n        <mat-datepicker-toggle\n          matSuffix\n          [for]=\"bornDatePicker\"\n        ></mat-datepicker-toggle>\n        <mat-datepicker #bornDatePicker></mat-datepicker>\n        <mat-error *ngIf=\"formCrl.controls['bornDate'].hasError('required') && !formCrl.controls['bornDate'].hasError('matDatepickerParse')\">\n          data di nascita <strong>obbligatoria</strong>.\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['bornDate'].hasError('matDatepickerParse')\">\n          formato della data errato.\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['bornDate'].hasError('isOver18')\">\n          l'utente deve essere maggiorenne\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['bornDate'].hasError('isBorn')\">\n          Sicuramente avremo offerte molto più belle per quando nascerai!\n        </mat-error>\n      </mat-form-field>\n    </div>\n    <div fxFlex>\n      <mat-form-field>\n        <input matInput placeholder=\"telefono\" formControlName=\"phone\" />\n        <mat-error *ngIf=\"formCrl.controls['phone'].hasError('required')\">\n          telefono <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div fxFlex>\n      <mat-form-field>\n        <input matInput placeholder=\"indirizzo\" formControlName=\"address\" />\n        <mat-error *ngIf=\"formCrl.controls['address'].hasError('required')\">\n          address <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n  </form>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nimport { SharedModule } from '../../shared';\nimport { LoginPageComponent } from './login-page.component';\nimport { LoginService } from './services/login.service';\nimport { AuthStore } from './store/auth.store';\n\n@NgModule({\n  declarations: [LoginPageComponent],\n  imports: [CommonModule, SharedModule, FlexLayoutModule, MatSnackBarModule],\n  exports: [LoginPageComponent],\n  providers: [LoginService, AuthStore]\n})\nexport class LoginPageModule {}\n","import { AbstractControl } from '@angular/forms';\n// NOTA: apparentemente la risposta { [errorName]: false } viene cmq bloccata dal validatore.\n// Trick Solution: in caso di validatore corretto passo null.\n\n/** form validator per verificare se l'età inserita (presumibilmente di nascita) sia maggiore di 18 */\nexport function isOver18(control: AbstractControl): { [key: string]: boolean } {\n  const errorCode = 'isOver18';\n\n  if (control && control.value) {\n    const age = getBirthday(control.value);\n    return  age >= 0 && age < 18 ? { [errorCode]: true } : null;\n  }\n  return null;\n}\n\n/** form validator per verificare se lutente è effettivamente nato (anni >= 0) */\nexport function isBorn(control: AbstractControl): { [key: string]: boolean } {\n  const errorCode = 'isBorn';\n\n  if (control && control.value) {\n    const bornDate = control.value;\n    return Date.now() - bornDate.getTime() < 0 ? { [errorCode]: true } : null;\n  }\n  return null;\n}\n\n/**\n * funzione che restituisce gli anni dell' utente\n * NOTA: funzione semplificata che non tiene conto di ora solare ed eventuali calcoli particolari sul calendario\n * ma sifficiente a scopo dimostrativo per questo progetto.\n */\nfunction getBirthday(bornDate: Date): number {\n  const ageDifMs = Date.now() - bornDate.getTime();\n  if(ageDifMs < 0) {\n    return -1;\n  }\n  const ageDate = new Date(ageDifMs); // miliseconds from epoch\n  return Math.abs(ageDate.getUTCFullYear() - 1970);\n}\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { asyncScheduler, forkJoin, scheduled, Subject } from 'rxjs';\nimport { map, mergeAll } from 'rxjs/operators';\nimport { Cliente, ClienteService } from 'src/app/core';\nimport { UserType } from 'src/app/core/constants/user-type.enum';\nimport { Conto } from 'src/app/core/models/conto.model';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { SelfStore } from 'src/app/core/store/self.store';\n\nimport { DialogRechargeComponent } from './components/dialog-recharge/dialog-recharge.component';\n\n@Component({\n  selector: 'app-recharge',\n  templateUrl: './recharge.component.html',\n  styleUrls: ['./recharge.component.scss']\n})\nexport class RechargeComponent implements OnInit, AfterViewInit {\n\n  public a = new Subject<Cliente>();\n  public b = new Subject<{ price: string; date: string; invoice: string }>();\n\n  constructor(\n    private routingService: RoutingService,\n    public selfStore: SelfStore,\n    private clienteService: ClienteService,\n    private dialog: MatDialog,\n  ) {}\n\n  ngOnInit(): void {\n    if (!this.selfStore.email || !this.selfStore.budget) {\n      scheduled([\n        this.clienteService.getSelfClient(),\n        this.clienteService.getSelfConto(),\n      ], asyncScheduler).pipe(\n        mergeAll(),\n        map((element) => {\n          if (this.isSelfCliente(element)) {\n            this.selfStore.updateCliente(element as Cliente);\n          } else if (this.isSelfConto(element)) {\n            this.selfStore.updateConto(element as Conto);\n          }\n        })\n      )\n      .subscribe(() => this.handleCustomerPermission());\n    } else {\n      this.handleCustomerPermission();\n    }\n    this.completeRecharge();\n  }\n\n  ngAfterViewInit() {\n    this.routingService.updateHeader('Ricarica');\n  }\n\n  authClientStatus(cliente: Cliente) {\n    this.a.next(cliente);\n    this.a.complete();\n  }\n\n  payStatus(status: { price: string; date: string; invoice: string }) {\n    this.b.next(status);\n    this.b.complete();\n  }\n\n  completeRecharge() {\n    forkJoin({ cliente: this.a, priceInfo: this.b }).subscribe(\n      ({ cliente, priceInfo }) => {\n        this.dialog.open(DialogRechargeComponent, {\n          data: { cliente, priceInfo },\n          disableClose: true,\n        });\n      }\n    );\n  }\n\n  /** verifica che il cliente sia un mercante */\n  isMercant(): boolean {\n    return this.selfStore.type === UserType.merchant;\n  }\n\n\n  /**\n   * verifica che il login abbia restituito un commerciante, altrimenti blocca l'atm chiedendo un upgrade\n   */\n  private handleCustomerPermission() {\n    if (!this.isMercant()) {\n      this.routingService.gotoHome();\n    }\n  }\n\n  /** verifica se l'oggetto passato è un cliente */\n  private isSelfCliente(cliente): boolean {\n    return cliente && cliente.email;\n  }\n\n  /** verifica se l'oggetto passato è un conto */\n  private isSelfConto(conto): boolean {\n    return conto && conto.budget;\n  }\n}\n","<div class=\"flex-parent\">\n  <div class=\"flex widget-container shadow-border mb20 mr10\">\n    <app-recognition class=\"relative recognition\" (authClientStatus)=\"authClientStatus($event)\"></app-recognition>\n  </div>\n  <div class=\"flex widget-container shadow-border mb20 ml10\">\n    <app-info-widget\n      class=\" info-table\"\n      title=\"Personale\"\n      [numConto]=\"this.selfStore.idConto\"\n      [name]=\"this.selfStore.cognome +' '+ this.selfStore.nome\"\n      [regSocial]=\"this.selfStore.ragSociale\"\n      [address]=\"this.selfStore.address\"\n    ></app-info-widget>\n  </div>\n</div>\n\n<div class=\"flex-parent\">\n  <div class=\"widget-container shadow-border flex mb20\">\n    <app-price-widget title=\"Ricarica\" operationLabel=\"Ricarica\" [canInvoice]=\"false\" (payStatus)=\"payStatus($event)\"></app-price-widget>\n  </div>\n</div>\n\n<div class=\"flex-parent\">\n  <div class=\"widget-container shadow-border spam-widget\">\n    <app-banner></app-banner>\n  </div>\n</div>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { Cliente, ClienteService } from 'src/app/core';\n\n@Component({\n  selector: 'app-pin',\n  templateUrl: './pin.component.html',\n  styleUrls: ['./pin.component.scss']\n})\nexport class PinComponent implements OnInit {\n  /** controller del form */\n  formCrl: FormGroup;\n\n  @Output() clientAuthEvent = new EventEmitter<Cliente>();\n\n  constructor(\n    private fb: FormBuilder,\n    private clienteService: ClienteService,\n  ) {\n    this.formCrl = this.fb.group({\n      userId: this.fb.control('', [Validators.required]),\n      pin: this.fb.control('', [Validators.required, Validators.minLength(4), Validators.maxLength(16)])\n    });\n  }\n\n  ngOnInit() {}\n\n  login() {\n    this.clienteService.getClienteByPin(this.formCrl.value.userId, this.formCrl.value.pin).subscribe(\n      cliente => this.clientAuthEvent.emit(cliente)\n    );\n  }\n}\n","<div>\n  <form class=\"form\" [formGroup]=\"formCrl\">\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput placeholder=\"ID*\" formControlName=\"userId\" />\n        <mat-error *ngIf=\"formCrl.controls['userId'].hasError('required')\"> L'id utente è <strong>richiesto</strong> </mat-error>\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput type=\"pin\" placeholder=\"pin*\" formControlName=\"pin\"/>\n        <mat-hint>4 cifre numeriche</mat-hint>\n        <mat-error *ngIf=\"formCrl.controls['pin'].hasError('minLength') || formCrl.controls['pin'].hasError('maxLength') || formCrl.controls['pin'].hasError('numeric')\">\n          il pin è composto da 4-16 cifre <strong>numeriche</strong>\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['pin'].hasError('required')\"> pin obbligatorio per il login </mat-error>\n      </mat-form-field>\n    </div>\n    <div class=\"login\">\n        <button mat-raised-button color=\"primary\" [disabled]=\"formCrl.status === 'INVALID'\" (click)=\"login()\">Login</button>\n    </div>\n  </form>\n</div>\n","import {\n  AfterViewInit,\n  Component,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { AbstractJoinPartComponent } from './parts/abstract-join-part/abstract-join-part.component';\nimport { JoinPart0Component } from './parts/join-part0/join-part0.component';\nimport { JoinPart1Component } from './parts/join-part1/join-part1.component';\nimport { JoinPart2Component } from './parts/join-part2/join-part2.component';\nimport { JoinPart3Component } from './parts/join-part3/join-part3.component';\n\n@Component({\n  selector: 'app-join',\n  templateUrl: './join.component.html',\n  styleUrls: ['./join.component.scss'],\n})\nexport class JoinComponent implements OnInit, OnDestroy, AfterViewInit {\n  readonly  maxPage = 3;\n\n  favoriteUserType: string;\n  page: number;\n  componentRef: ComponentRef<AbstractJoinPartComponent>;\n  data = {};\n\n  @ViewChild('adHost', { read: ViewContainerRef }) container;\n\n  @Output() loginRequest = new EventEmitter<void>();\n\n  constructor(private resolver: ComponentFactoryResolver) {\n  }\n\n  ngOnInit(): void {\n    this.page = 0;\n  }\n\n  ngOnDestroy() {\n    if (this.container) {\n      this.container.clear();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.loadComponent();\n    }, 0);\n  }\n\n  loadComponent() {\n\n    this.container.clear();\n    let factory: ComponentFactory<AbstractJoinPartComponent|JoinPart3Component>;\n    switch (this.page) {\n      case 3:\n        factory = this.resolver.resolveComponentFactory(JoinPart3Component);\n        break;\n      case 2:\n        factory = this.resolver.resolveComponentFactory(JoinPart2Component);\n        break;\n      case 1:\n        factory = this.resolver.resolveComponentFactory(JoinPart1Component);\n        break;\n      case 0:\n      default:\n        factory = this.resolver.resolveComponentFactory(JoinPart0Component);\n        break;\n    }\n    this.componentRef = this.container.createComponent(factory);\n    if (this.page === this.maxPage) {\n      (this.componentRef as unknown as ComponentRef<JoinPart3Component>).instance.data = this.data;\n    }\n\n  }\n\n  login() {\n    this.loginRequest.next();\n  }\n\n\n\n\n  updateForm(pg: number) {\n    if (!this.componentRef.instance.validate()) {\n      return;\n    }\n    // salva le informazioni recuperate dal form\n    this.data = {...this.data, ...this.componentRef.instance.getValue()};\n\n    this.setPage(pg);\n    this.loadComponent();\n  }\n\n  setPage(pg: number) {\n    if (pg < 0) {\n      this.page = 0;\n    } else if (pg > this.maxPage ) {\n      this.page = this.maxPage;\n    } else {\n      this.page = pg;\n    }\n  }\n}\n","<div>\n  <div>\n    <mat-slider class=\"slider\" min=\"0\" max=\"3\" step=\"1\" [value]=\"page\"\n    ></mat-slider>\n  </div>\n  <mat-divider></mat-divider>\n  <div>\n    <template #adHost></template>\n  </div>\n  <app-join-dashboard *ngIf=\"page < maxPage\" [page]=\"page\" [maxPage]=\"maxPage\" (changePage)=\"updateForm($event)\"></app-join-dashboard>\n  <div class=\"login\">\n    <button mat-button color=\"primary\" (click)=\"login()\">\n      Annulla creazione account\n    </button>\n  </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\nimport { AbstractJoinPartComponent } from '../abstract-join-part/abstract-join-part.component';\n\n@Component({\n  selector: 'app-join-part0',\n  templateUrl: './join-part0.component.html',\n  styleUrls: ['./join-part0.component.scss'],\n})\nexport class JoinPart0Component extends AbstractJoinPartComponent\n  implements OnInit {\n  @Output() valuesOutput = new EventEmitter<{\n    email: string;\n    password: string;\n  }>();\n\n  constructor(private fb: FormBuilder) {\n    super();\n    this.formCrl = this.fb.group({\n      email: this.fb.control('', [Validators.required, Validators.email]),\n      password: this.fb.control('', [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(16),\n      ]),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  getValue() {\n    return {\n      email: this.formCrl.controls.email.value,\n      password: this.formCrl.controls.password.value,\n    };\n  }\n}\n","<form class=\"form\" [formGroup]=\"formCrl\">\n<div>\n  <div fxFlex>\n    <mat-form-field>\n      <input matInput placeholder=\"email*\" formControlName=\"email\" />\n      <mat-error *ngIf=\"formCrl.controls['email'].hasError('required')\">\n        email <strong>obbligatoria</strong>\n      </mat-error>\n      <mat-error *ngIf=\"formCrl.controls['email'].hasError('email')\">\n        deve essere una email: esempio@dominio.com\n      </mat-error>\n    </mat-form-field>\n  </div>\n</div>\n<div>\n  <mat-form-field class=\"full-width\">\n    <input\n      matInput\n      type=\"password\"\n      placeholder=\"Password*\"\n      formControlName=\"password\"\n    />\n    <mat-error\n      *ngIf=\"\n        formCrl.controls['password'].hasError('minLength') ||\n        formCrl.controls['password'].hasError('maxLength') ||\n        formCrl.controls['password'].hasError('numeric')\n      \"\n    >\n      il pin è composto da 4-16 cifre <strong>numeriche</strong>\n    </mat-error>\n    <mat-error\n      *ngIf=\"formCrl.controls['password'].hasError('required')\"\n    >\n      pin obbligatorio per il login\n    </mat-error>\n  </mat-form-field>\n</div>\n</form>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthStore } from 'src/app/features/login-page/store/auth.store';\nimport { RoutersPath } from '../constants/routing.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router, private loginStore: AuthStore) { }\n\n  canActivate(): boolean {\n    if (!this.loginStore.token) {\n      this.router.navigate([RoutersPath.login]);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthStore } from 'src/app/features/login-page/store/auth.store';\nimport { RoutersPath } from '../constants/routing.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoLoginGuard {\n\n  constructor(private router: Router, private loginStore: AuthStore) { }\n\n  canActivate(): boolean {\n    if (this.loginStore.token) {\n      this.router.navigate([RoutersPath.home]);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { LoginType } from '../../constants/login-type.enum';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { Cliente } from 'src/app/core';\n\n@Component({\n  selector: 'app-recognition',\n  templateUrl: './recognition.component.html',\n  styleUrls: ['./recognition.component.scss']\n})\nexport class RecognitionComponent implements OnInit {\n\n  readonly LoginType = LoginType;\n  public loginType = LoginType.pin;\n\n  public cliente: Cliente = null;\n\n  @Output() authClientStatus = new EventEmitter<Cliente>();\n\n  constructor(private routingService: RoutingService) { }\n\n  ngOnInit(): void {\n    this.routingService.updateHeader('Login');\n  }\n\n  changeLogin(choosenLoginType: LoginType) {\n    this.loginType = choosenLoginType;\n  }\n\n  authSuccess(cliente: Cliente) {\n    this.loginType = LoginType.success;\n    this.cliente = cliente;\n    this.authClientStatus.emit(cliente);\n  }\n}\n","<div class=\"buttons-container\">\n  <button\n    mat-icon-button\n    (click)=\"changeLogin(LoginType.pin)\"\n    [ngClass]=\"{ active: loginType === LoginType.pin }\"\n  >\n    <mat-icon svgIcon=\"textbox-password\"></mat-icon>\n  </button>\n  <button\n    mat-icon-button\n    (click)=\"changeLogin(LoginType.qr)\"\n    class=\"mr-2 ml-2\"\n    [ngClass]=\"{ active: loginType === LoginType.qr }\"\n  >\n    <mat-icon svgIcon=\"qrcode\"></mat-icon>\n  </button>\n  <button\n    mat-icon-button\n    (click)=\"changeLogin(LoginType.nfc)\"\n    [ngClass]=\"{ active: loginType === LoginType.nfc }\"\n  >\n    <mat-icon svgIcon=\"nfc-variant\"></mat-icon>\n  </button>\n</div>\n<div class=\"content\">\n  <div class=\"login-body\">\n    <app-pin\n      *ngIf=\"loginType === LoginType.pin\"\n      class=\"block\"\n      (clientAuthEvent)=\"authSuccess($event)\"\n    ></app-pin>\n    <app-qr-code\n      *ngIf=\"loginType === LoginType.qr\"\n      class=\"block\"\n      (clientAuthEvent)=\"authSuccess($event)\"\n    ></app-qr-code>\n    <app-nfc *ngIf=\"loginType === LoginType.nfc\" class=\"block\"></app-nfc>\n    <app-info-widget\n      *ngIf=\"loginType === LoginType.success\"\n      class=\"block\"\n      title=\"CLIENTE\"\n      [numConto]=\"this.cliente.idConto\"\n      [name]=\"this.cliente.cognome + ' ' + this.cliente.nome\"\n    ></app-info-widget>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport enum LoadingStatus {\n  LOADING = '',\n  FAILED = 'FAILED',\n  SUCCESS = 'SUCCESS'\n}\n\n/** service sche gestisce il loader */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  /** Alla fine del caricamento chiude il loader e apre la modale */\n  status$: BehaviorSubject<LoadingStatus>;\n\n  constructor() {\n    this.status$ = new BehaviorSubject(LoadingStatus.LOADING);\n  }\n\n  changeStatus(status: LoadingStatus) {\n    this.status$.next(status);\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-join-dashboard',\n  templateUrl: './join-dashboard.component.html',\n  styleUrls: ['./join-dashboard.component.scss']\n})\nexport class JoinDashboardComponent implements OnInit {\n\n\n  @Input() page: number;\n  @Input() maxPage: number;\n\n  @Output() changePage = new EventEmitter<number>();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  backPage() {\n    this.changePage.emit(this.page - 1);\n  }\n\n  nextPage() {\n    this.changePage.emit(this.page + 1);\n  }\n\n  // private setPage(pg: number) {\n  //   if (pg < 0) {\n  //     this.page = 0;\n  //   } else if (pg > this.maxPage ) {\n  //     this.page = this.maxPage;\n  //   } else {\n  //     this.page = pg;\n  //   }\n  //   this.changePage.emit(this.page);\n  // }\n\n}\n","<div class=\"move\">\n  <button mat-raised-button class=\"back\" color=\"primary\" [disabled]=\"page <= 0\" (click)=\"backPage()\">Back</button>\n  <button mat-raised-button class=\"next\" color=\"primary\" [disabled]=\"page >= maxPage\" (click)=\"nextPage()\">Next</button>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * [number, number] | switchNumber:switchFn\n */\n@Pipe({\n  name: 'switchNumber'\n})\nexport class SwitchNumberPipe implements PipeTransform {\n\n  /**\n   * @param switchFn  - determina se prendere il valore 1 o il valore 2\n   */\n  transform(values: [number, number], switchFn: boolean, ...args: unknown[]): unknown {\n    if (!Array.isArray(values)) {\n      console.error('SwitchNumberPipe richiede la presenza di un array di numeri per funzionare');\n      console.error(values);\n      return -1;\n    }\n    if (values.length !== 2 || values.some(n => !(typeof n === 'number'))) {\n      console.error('SwitchNumberPipe richiede che l\\'array contenga 2 valori numerici');\n      console.error(values);\n      return -1;\n    }\n    const equal = switchFn || true;\n    return equal ? values[0] : values[1];\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n/**\n * Nota: <app-big-button> richiede width e height impostati a 100%\n */\n@Component({\n  selector: 'app-big-button',\n  templateUrl: './big-button.component.html',\n  styleUrls: ['./big-button.component.scss']\n})\nexport class BigButtonComponent implements OnInit {\n\n  @Input() label: string;\n  @Input() icon: string;\n  @Input() disabled: boolean;\n\n  @Output() clickEmitter: EventEmitter<void> = new  EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  clickEvent(): void {\n    this.clickEmitter.next();\n  }\n}\n","<div class=\"button-container widget-container shadow-border\" [ngClass]=\"{'disabled': disabled}\" (click)=\"clickEvent()\">\n  <div class=\"icon-content\">\n    <mat-icon class=\"icon fix-top\" aria-hidden=\"false\" [inline]=\"true\">{{icon}}</mat-icon>\n  </div>\n  <div class=\"label-body\">\n    <span class=\"label centralize\" >{{label}}</span>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { MatIconModule, MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { AuthGuard } from './guards/auth-guard.service';\nimport { NoLoginGuard } from './guards/no-login-guard.service';\nimport { ClienteService } from './services/cliente.service';\nimport { LoaderService } from './services/loader.service';\nimport { LocalStorageService } from './services/local-storage.service';\nimport { RoutingService } from './services/routing.service';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, HttpClientModule, MatIconModule],\n  exports: [MatIconModule],\n  providers: [\n    /* No providers */\n  ]\n})\nexport class CoreModule {\n  constructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer) {\n    // aggiunge le nuova svg a material\n    matIconRegistry.addSvgIconSet(\n      domSanitizer.bypassSecurityTrustResourceUrl('assets/svgs/mdi.svg')\n    );\n    // matIconRegistry.addSvgIconSet(domSanitizer.bypassSecurityTrustResourceUrl('../../assets/fonts/materialdesignicons-webfont.woff'));\n  }\n\n  static forRoot(): ModuleWithProviders<CoreModule> {\n    return {\n      ngModule: CoreModule,\n      providers: [\n        ClienteService,\n        RoutingService,\n        AuthGuard,\n        NoLoginGuard,\n        LoaderService,\n        LocalStorageService\n      ]\n    };\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-info-widget',\n  templateUrl: './info-widget.component.html',\n  styleUrls: ['./info-widget.component.scss']\n})\nexport class InfoWidgetComponent implements OnInit {\n\n  /** titolo della sezione */\n  @Input() title: string;\n  /** numero del conto */\n  @Input() numConto: string;\n  /** nome del proprietario conto */\n  @Input() name: string;\n  /** regione sociale */\n  @Input() regSocial: string;\n  /** indirizzo del proprietario del conto */\n  @Input() address: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"title\">{{title}}</h1>\n<div class=\"info\">\n  <div class=\"labels\">\n    <div class=\"info--conto label\">Num. Conto:</div>\n    <div class=\"info--name label\">Nome:</div>\n    <div class=\"info--reg label\">Regione Sociale:</div>\n    <div class=\"info--addr label\">Indirizzo:</div>\n  </div>\n  <div class=\"values\">\n    <div class=\"info--conto value\">{{numConto}}</div>\n    <div class=\"info--name value\">{{name}}</div>\n    <div class=\"info--reg value\">{{regSocial}}</div>\n    <div class=\"info--addr value\">{{address}}</div>\n  </div>\n</div>\n\n\n<!-- <div class=\"info\">\n  <div class=\"info--conto\"><span class=\"label\">Num. Conto:</span><span class=\"value\">{{numConto}}</span></div>\n  <div class=\"info--name\"><span class=\"label\">Nome:</span><span class=\"value\">{{name}}</span></div>\n  <div class=\"info--reg\"><span class=\"label\">Regione Sociale:</span><span class=\"value\">{{regSocial}}</span></div>\n  <div class=\"info--addr\"><span class=\"label\">Indirizzo:</span><span class=\"value\">{{address}}</span></div>\n</div> -->\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\nimport { AbstractJoinPartComponent } from '../abstract-join-part/abstract-join-part.component';\nimport { UserType } from 'src/app/core/constants/user-type.enum';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-join-part2',\n  templateUrl: './join-part2.component.html',\n  styleUrls: ['./join-part2.component.scss']\n})\nexport class JoinPart2Component extends AbstractJoinPartComponent implements OnInit, OnDestroy {\n  readonly UserType = UserType;\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(private fb: FormBuilder) {\n    super();\n    this.formCrl = this.fb.group({\n      type: this.fb.control(UserType.customer, []),\n      piva: this.fb.control({ value: '', disabled: true }, [Validators.required]),\n      ragSoc: this.fb.control({ value: '', disabled: true }, [Validators.required]),\n    });\n  }\n\n  ngOnInit() {\n    this.subscriptions.push(this.formCrl.get('type').valueChanges.subscribe(userType => {\n        if ( userType === UserType.customer  ) {\n          this.formCrl.get('piva').disable();\n          this.formCrl.get('ragSoc').disable();\n        } else {\n          this.formCrl.get('piva').enable();\n          this.formCrl.get('ragSoc').enable();\n        }\n    }));\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  getValue() {\n    return {\n      type: this.formCrl.controls.type.value,\n      piva: this.formCrl.controls.piva.value,\n      ragSoc: this.formCrl.controls.ragSoc.value,\n    };\n  }\n}\n","<form class=\"form\" [formGroup]=\"formCrl\">\n  <mat-radio-group formControlName=\"type\">\n    <mat-radio-button [value]=\"UserType.customer\" >Sono solo un cliente</mat-radio-button>\n    <mat-radio-button [value]=\"UserType.merchant\" >Dati del commerciante</mat-radio-button>\n  </mat-radio-group>\n  <div #merchantInfo>\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput  class=\"mInfos\" placeholder=\"partita iva*\" formControlName=\"piva\" />\n        <mat-error *ngIf=\"formCrl.controls['piva'].hasError('required')\">\n          piva <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput class=\"mInfos\" placeholder=\"ragione sociale*\" formControlName=\"ragSoc\" />\n        <mat-error *ngIf=\"formCrl.controls['ragSoc'].hasError('required')\">\n          ragSoc <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n  </div>\n</form>\n","import { Injectable } from '@angular/core';\nimport { LocalStorageService } from 'src/app/core/services/local-storage.service';\nimport { UserType } from '../constants/user-type.enum';\nimport { Cliente } from '../models/cliente.model';\nimport { Conto } from '../models/conto.model';\n\n/** Store che memorizza i dati dell' utente collegato (api/clienti/self) */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SelfStore {\n\n  readonly localStoreVariable = {\n    id: 'clienti.id',\n    email: 'clienti.email',\n    nome: 'clienti.nome',\n    cognome: 'clienti.cognome',\n    cf: 'clienti.cf',\n    createdAt: 'clienti.createdAt',\n    updatedAt: 'clienti.updatedAt',\n    idConto: 'clienti.idConto',\n    type: 'clienti.type',\n    address: 'clienti.address',\n    birthDate: 'clienti.birthDate',\n    phone: 'clienti.phone',\n    regSociale: 'commercianti.ragSociale',\n    pIva: 'commercianti.pIva',\n\n    budget: 'conto.budget',\n    saldo: 'conto.saldo',\n    // uscite: 'conto.uscite',\n    // entrate: 'conto.entrate',\n    // movimenti: 'conto.movimenti',\n    avariableBadget: 'conto.avBadget',\n\n  };\n\n  private pId: string;\n  private pEmail: string;\n  private pNome: string;\n  private pCognome: string;\n  private pCf: string;\n  private pCreatedAt: Date;\n  private pUpdatedAt: Date;\n  private pIdConto: string;\n  private pType: string;\n  private pAddress: string;\n  private pPhone: string;\n  private pBirthDate: string;\n  private pRagSociale: string;\n  private pPIva: string;\n\n  private pBudget: number;\n  private pSaldo: number;\n  // private pUscite: any[];\n  // private pEntrate: any[];\n  // private pMovimenti: any[];\n  private pAvariableBadget: number;\n\n\n  public get id() {\n    if (!this.pId) {\n      this.pId = this.localStorageService.getItem(this.localStoreVariable.id);\n    }\n    return this.pId;\n  }\n\n  public set id(value) {\n    this.pId = value;\n    this.localStorageService.setItem(this.localStoreVariable.id, value);\n  }\n\n\n  public get email() {\n    if (!this.pEmail) {\n      this.pEmail = this.localStorageService.getItem(this.localStoreVariable.email);\n    }\n    return this.pEmail;\n  }\n\n  public set email(value) {\n    this.pEmail = value;\n    this.localStorageService.setItem(this.localStoreVariable.email, value);\n  }\n\n\n  public get cognome() {\n    if (!this.pCognome) {\n      this.pCognome = this.localStorageService.getItem(this.localStoreVariable.cognome);\n    }\n    return this.pCognome;\n  }\n\n  public set cognome(value) {\n    this.pCognome = value;\n    this.localStorageService.setItem(this.localStoreVariable.cognome, value);\n  }\n\n  public get nome() {\n    if (!this.pNome) {\n      this.pNome = this.localStorageService.getItem(this.localStoreVariable.nome);\n    }\n    return this.pNome;\n  }\n\n  public set nome(value) {\n    this.pNome = value;\n    this.localStorageService.setItem(this.localStoreVariable.nome, value);\n  }\n\n  public get cf() {\n    if (!this.pCf) {\n      this.pCf = this.localStorageService.getItem(this.localStoreVariable.cf);\n    }\n    return this.pCf;\n  }\n\n  public set cf(value) {\n    this.pCf = value;\n    this.localStorageService.setItem(this.localStoreVariable.cf, value);\n  }\n\n  public get createdAt() {\n    if (!this.pCreatedAt) {\n      this.pCreatedAt = this.localStorageService.getItem(this.localStoreVariable.createdAt);\n    }\n    return this.pCreatedAt;\n  }\n\n  public set createdAt(value) {\n    this.pCreatedAt = value;\n    this.localStorageService.setItem(this.localStoreVariable.createdAt, value);\n  }\n\n  public get updatedAt() {\n    if (!this.pUpdatedAt) {\n      this.pUpdatedAt = this.localStorageService.getItem(this.localStoreVariable.updatedAt);\n    }\n    return this.pUpdatedAt;\n  }\n\n  public set updatedAt(value) {\n    this.pUpdatedAt = value;\n    this.localStorageService.setItem(this.localStoreVariable.updatedAt, value);\n  }\n\n  public get idConto() {\n    if (!this.pIdConto) {\n      this.pIdConto = this.localStorageService.getItem(this.localStoreVariable.idConto);\n    }\n    return this.pIdConto;\n  }\n\n  public set idConto(value) {\n    this.pIdConto = value;\n    this.localStorageService.setItem(this.localStoreVariable.idConto, value);\n  }\n\n\n  public get type() {\n    if (!this.pType) {\n      this.pType = this.localStorageService.getItem(this.localStoreVariable.type);\n    }\n    return this.pType;\n  }\n\n  public set type(value) {\n    this.pType = value;\n    this.localStorageService.setItem(this.localStoreVariable.type, value);\n  }\n\n  public get address() {\n    if (!this.pAddress) {\n      this.pAddress = this.localStorageService.getItem(this.localStoreVariable.address);\n    }\n    return this.pAddress;\n  }\n\n  public set address(value) {\n    this.pAddress = value;\n    this.localStorageService.setItem(this.localStoreVariable.address, value);\n  }\n\n  public get phone() {\n    if (!this.pPhone) {\n      this.pPhone = this.localStorageService.getItem(this.localStoreVariable.phone);\n    }\n    return this.pPhone;\n  }\n\n  public set phone(value) {\n    this.pPhone = value;\n    this.localStorageService.setItem(this.localStoreVariable.phone, value);\n  }\n\n  public get birthDate() {\n    if (!this.pBirthDate) {\n      this.pBirthDate = this.localStorageService.getItem(this.localStoreVariable.birthDate);\n    }\n    return this.pBirthDate;\n  }\n\n  public set birthDate(value) {\n    this.pBirthDate = value;\n    this.localStorageService.setItem(this.localStoreVariable.birthDate, value);\n  }\n\n\n\n  public get ragSociale() {\n    if (!this.pRagSociale) {\n      this.pRagSociale = this.localStorageService.getItem(this.localStoreVariable.regSociale);\n    }\n    return this.pRagSociale;\n  }\n\n  public set ragSociale(value) {\n    this.pRagSociale = value;\n    this.localStorageService.setItem(this.localStoreVariable.regSociale, value);\n  }\n\n  public get pIva() {\n    if (!this.pPIva) {\n      this.pPIva = this.localStorageService.getItem(this.localStoreVariable.pIva);\n    }\n    return this.pPIva;\n  }\n\n  public set pIva(value) {\n    this.pPIva = value;\n    this.localStorageService.setItem(this.localStoreVariable.pIva, value);\n  }\n\n  public get budget() {\n    if (!this.pBudget) {\n      this.pBudget = this.localStorageService.getItem(this.localStoreVariable.budget);\n    }\n    return this.pBudget;\n  }\n\n  public set budget(value) {\n    this.pBudget = value;\n    this.localStorageService.setItem(this.localStoreVariable.budget, value);\n  }\n\n  public get saldo() {\n    if (!this.pSaldo) {\n      this.pSaldo = this.localStorageService.getItem(this.localStoreVariable.saldo);\n    }\n    return this.pSaldo;\n  }\n\n  public set saldo(value) {\n    this.pSaldo = value;\n    this.localStorageService.setItem(this.localStoreVariable.saldo, value);\n  }\n\n  public get avariableBadget() {\n    if (!this.pAvariableBadget) {\n      this.pAvariableBadget = this.localStorageService.getItem(this.localStoreVariable.avariableBadget);\n    }\n    return this.pAvariableBadget;\n  }\n\n  public set avariableBadget(value) {\n    this.pAvariableBadget = value;\n    this.localStorageService.setItem(this.localStoreVariable.avariableBadget, value);\n  }\n\n\n  constructor(private localStorageService: LocalStorageService) { }\n\n  /** Aggiorna il selfStore salvando le informazioni ottenute  */\n  public updateCliente(cliente: Cliente) {\n    this.id = cliente.id;\n    this.type = cliente.type;\n    this.nome = cliente.nome;\n    this.cognome = cliente.cognome;\n    this.cf = cliente.cf;\n    this.createdAt = cliente.createdAt;\n    this.updatedAt = cliente.updatedAt;\n    this.address = cliente.address;\n    this.phone = cliente.phone;\n    this.birthDate = cliente.birth_date;\n    this.idConto = cliente.idConto;\n    if (cliente.type === UserType.merchant) {\n      this.ragSociale = cliente.ragSoc;\n      this.pIva = cliente.piva;\n    }\n  }\n\n  public updateConto(conto: Conto) {\n    this.idConto = conto.id;\n    this.saldo = conto.saldo;\n    this.budget = conto.budget;\n  }\n\n  /** resetta lo store (e il local store). Ideale dopo un logout */\n  public reset() {\n    this.id = undefined;\n    this.type = undefined;\n    this.nome = undefined;\n    this.cognome = undefined;\n    this.cf = undefined;\n    this.createdAt = undefined;\n    this.updatedAt = undefined;\n    this.address = undefined;\n    this.phone = undefined;\n    this.birthDate = undefined;\n    this.idConto = undefined;\n    this.ragSociale = undefined;\n    this.pIva = undefined;\n\n    // this.idConto = undefined;\n    this.saldo = undefined;\n    this.budget = undefined;\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport {LoaderService, LoadingStatus } from 'src/app/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { debounceTime, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.scss']\n})\nexport class ErrorPageComponent implements OnInit {\n\n  /** titolo della pagina di errore */\n  titleLabel$: BehaviorSubject<string>;\n\n  /** contenuto html del messaggio di errore */\n  content$: BehaviorSubject<string>;\n\n  /** oggetto errore da stampare se presente */\n  error$: BehaviorSubject<any>;\n\n  constructor(private route: ActivatedRoute, private loaderService: LoaderService) {\n    this.titleLabel$ = new BehaviorSubject('Impossibile procedere con il pagamento. Se il problema persiste contattare il venditore');\n    this.content$ = new BehaviorSubject('SUGGERIMENTO PER IL VENDITORE: assicurarsi che il idConto e prezzo siano validi');\n    this.error$ = new BehaviorSubject(undefined);\n    this.loaderService.status$.next(LoadingStatus.FAILED);\n  }\n\n  ngOnInit() {\n    this.route.queryParams\n    .pipe(\n      // debounceTime evita l'emit iniziale prima che i param siano effettivamente inizializzati\n      debounceTime(200),\n      switchMap(params => {\n        if ( params.titleLabel) {\n          this.titleLabel$.next(params.titleLabel);\n        }\n        if ( params.content ) {\n          this.content$.next(params.content);\n        }\n        if ( params.error ) {\n          this.error$.next(JSON.parse(params.error));\n        }\n        return [];\n      })\n    )\n    .subscribe();\n  }\n}\n","<app-error [titleLabel]=\"titleLabel$ | async\" [content]=\"content$ | async\" [error]=\"error$ | async\"></app-error>\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Cliente, MovimentoService } from 'src/app/core';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { SelfStore } from 'src/app/core/store/self.store';\n\nimport { DialogData } from '../../payments.component';\n\n@Component({\n  selector: 'app-dialog-payment',\n  templateUrl: './dialog-payment.component.html',\n  styleUrls: ['./dialog-payment.component.scss']\n})\nexport class DialogPaymentComponent {\n\n\n  public cliente: Cliente;\n  public priceInfo: DialogData['priceInfo'];\n\n  constructor(\n    private dialogRef: MatDialogRef<DialogPaymentComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: DialogData,\n    private movimentoService: MovimentoService,\n    private selfStore: SelfStore,\n    private routingService: RoutingService,\n    private snackBar: MatSnackBar,\n  ) {\n    this.cliente = data.cliente;\n    this.priceInfo = data.priceInfo;\n  }\n\n  completePayment() {\n    this.movimentoService\n      .pay(this.cliente.idConto, this.selfStore.idConto, this.priceInfo.price)\n      .subscribe(() => {\n        // pagamento avvenuto con successo\n        this.openSnackBar('pagamento effettuato con successo', 'success');\n      },\n      (error) => {\n        // errore nel pagamento\n        this.openSnackBar('pagamento fallito', 'failure');\n        console.error(error);\n      },\n      // complete\n      () => {\n        this.dialogRef.close();\n        this.routingService.gotoHome();\n      });\n  }\n\n  undo() {\n    this.dialogRef.close();\n    window.location.reload();\n  }\n\n  private openSnackBar(message: string, cssClass?: string) {\n    this.snackBar.open(message, 'chiudi', {\n      // verticalPosition: MatSnackBarVerticalPosition,\n      // horizontalPosition: MatSnackBarHorizontalPosition,\n      panelClass: ['paytost', cssClass],\n      duration: 10000,\n    });\n  }\n}\n","<div>\n  <h2>Confermi l'operazione?</h2>\n  <div class=\"container\">\n    <button class=\"marg\" mat-raised-button color=\"primary\" (click)=\"completePayment()\">PROSEGUI</button>\n    <button class=\"marg\" mat-raised-button color=\"secondary\" (click)=\"undo()\">INDIETRO</button>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { RoutingService } from 'src/app/core/services/routing.service';\n\nenum FormTypes {\n  login = 'Login',\n  join = 'Join'\n}\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n  readonly FormTypes = FormTypes;\n\n\n  public formType: FormTypes = FormTypes.login;\n\n  constructor(private routingService: RoutingService ) { }\n\n  ngOnInit(): void {\n    this.routingService.updateHeader('Login');\n  }\n\n  clickInfo() {\n    console.warn('not yet implement');\n  }\n\n  switchForm(formType: FormTypes) {\n    this.formType = formType;\n  }\n\n}\n","<div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-between start\">\n  <div fxFlex class=\"widget-container login-widget shadow-border\">\n    <app-login\n      *ngIf=\"formType === FormTypes.login\"\n      (joinRequest)=\"switchForm(FormTypes.join)\"\n    ></app-login>\n    <app-join\n      *ngIf=\"formType === FormTypes.join\"\n      (loginRequest)=\"switchForm(FormTypes.login)\"\n    ></app-join>\n  </div>\n  <div\n    fxFlex\n    ngClass.xs=\"info_conto_flex--xs\"\n    ngClass.gt-xs=\"info_conto_flex--gt-xs\"\n  >\n    <app-big-button\n      class=\"info_conto\"\n      label=\"Info Conto\"\n      icon=\"info\"\n      (clickEmitter)=\"clickInfo()\"\n    ></app-big-button>\n  </div>\n</div>\n<div fxLayout class=\"footer\">\n  <div class=\"widget-container shadow-border spam-widget\">\n    <app-banner></app-banner>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './features/home/home.component';\nimport { LoginPageComponent } from './features/login-page/login-page.component';\nimport { TemplateComponent } from './features/template/template.component';\nimport { AuthGuard } from './core/guards/auth-guard.service';\nimport { NoLoginGuard } from './core/guards/no-login-guard.service';\nimport { PaymentsComponent } from './features/payments/payments.component';\nimport { RoutersPath } from './core';\nimport { RechargeComponent } from './features/recharge/recharge.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TemplateComponent,\n    children: [\n      {\n        path: RoutersPath.base,\n        redirectTo: '/login',\n        pathMatch: 'full'\n      },\n      {\n        path: RoutersPath.home,\n        component: HomeComponent,\n        canActivate: [AuthGuard],\n      },\n      {\n        path: RoutersPath.login,\n        component: LoginPageComponent,\n        canActivate: [NoLoginGuard],\n      },\n      {\n        path: RoutersPath.payment,\n        component: PaymentsComponent,\n        canActivate: [AuthGuard],\n      },\n      {\n        path: RoutersPath.recharge,\n        component: RechargeComponent,\n        canActivate: [AuthGuard],\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { BarcodeFormat } from '@zxing/library';\nimport { ZXingScannerComponent } from '@zxing/ngx-scanner';\nimport { BehaviorSubject } from 'rxjs';\nimport { Cliente, ClienteService } from 'src/app/core';\n\n@Component({\n  selector: 'app-qr-code',\n  templateUrl: './qr-code.component.html',\n  styleUrls: ['./qr-code.component.scss']\n})\nexport class QrCodeComponent implements OnInit {\n\n  /** standard accettati dal lettore */\n  readonly allowedFormats = [ BarcodeFormat.QR_CODE, BarcodeFormat.EAN_13];\n  availableDevices: MediaDeviceInfo[];\n  currentDevice: MediaDeviceInfo = null;\n\n  /**\n   * scanner.\n   * documentazione: https://github.com/zxing-js/ngx-scanner/wiki/Advanced-Usage\n   */\n  @ViewChild(ZXingScannerComponent)\n  scanner: ZXingScannerComponent;\n\n  @Output() clientAuthEvent = new EventEmitter<Cliente>();\n\n  /** determina se è riuscito ad aprire o meno lo scanner */\n  statusScanner$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(private clienteService: ClienteService) { }\n\n  ngOnInit() { }\n\n  /** alla lettura dello stato prova ad effettuare il login */\n  scanSuccessHandler(token: string) {\n    this.scanner.enable = false;\n    this.clienteService.getClienteByTokenOtp(token).subscribe(\n      cliente => {\n        console.warn(cliente);\n        this.clientAuthEvent.emit(cliente)},\n      error => this.scanner.enable = true);\n  }\n\n  onCamerasFound(devices: MediaDeviceInfo[]): void {\n    this.availableDevices = devices;\n\n    if (this.availableDevices && this.availableDevices.length > 0) {\n      this.currentDevice = this.availableDevices[0];\n    }\n  }\n\n  /** modifica lo stato del reader, che indica se è in funzione o ha dei problemi in esecuzione */\n  readerStatus(status: boolean) {\n    this.statusScanner$.next(status);\n  }\n}\n","<!-- scanner -->\n<div [hidden]=\"!(statusScanner$ | async)\">\n  <zxing-scanner\n    class=\"qr-reader\"\n    [(device)]=\"currentDevice\"\n    [formats]=\"allowedFormats\"\n    (camerasFound)=\"onCamerasFound($event)\"\n    (scanSuccess)=\"scanSuccessHandler($event)\"\n    (permissionResponse)=\"readerStatus($event)\"\n    [tryHarder]=\"true\"\n  ></zxing-scanner>\n</div>\n\n<!-- gestione in caso di scanner disabilitato o non funzionante -->\n<div [hidden]=\"statusScanner$ | async\">\n  <mat-icon svgIcon=\"qrcode\" class=\"qr-icon\"></mat-icon>\n  <div class=\"qr-message\">abilitare il lettore qrcode.</div>\n</div>\n"]}