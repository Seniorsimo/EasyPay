{"version":3,"sources":["webpack:///src/app/features/home/home.component.ts","webpack:///src/app/features/home/home.component.html","webpack:///src/app/shared/constants/login-type.enum.ts","webpack:///src/app/core/models/error.model.ts","webpack:///src/app/core/services/local-storage.service.ts","webpack:///src/app/shared/pipes/min.pipe.ts","webpack:///src/app/core/models/cliente.model.ts","webpack:///src/app/shared/components/join/parts/abstract-join-part/abstract-join-part.component.ts","webpack:///src/app/shared/components/join/parts/abstract-join-part/abstract-join-part.component.html","webpack:///src/app/shared/components/loader/loader.component.ts","webpack:///src/app/shared/components/loader/loader.component.html","webpack:///src/app/features/login-page/services/login.service.ts","webpack:///src/app/core/services/routing.service.ts","webpack:///src/app/core/constants/routing.constants.ts","webpack:///src/environments/environment.ts","webpack:///src/app/shared/components/login/login.component.ts","webpack:///src/app/shared/components/login/login.component.html","webpack:///src/app/shared/components/join/parts/join-part3/join-part3.component.ts","webpack:///src/app/shared/components/join/parts/join-part3/join-part3.component.html","webpack:///src/app/features/login-page/store/auth.store.ts","webpack:///src/app/shared/index.ts","webpack:///src/app/features/template/template.component.ts","webpack:///src/app/features/template/template.component.html","webpack:///src/app/core/constants/user-type.enum.ts","webpack:///src/app/core/services/pagamento.service.ts","webpack:///src/app/shared/components/nfc/nfc.component.ts","webpack:///src/app/shared/components/nfc/nfc.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/core/services/cliente.service.ts","webpack:///src/app/features/payments/payments.component.ts","webpack:///src/app/features/payments/payments.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/shared/components/error/error.component.ts","webpack:///src/app/shared/components/error/error.component.html","webpack:///src/app/shared/directives/numeric.directive.ts","webpack:///src/app/app.module.ts","webpack:///src/app/features/template/template.module.ts","webpack:///src/app/shared/components/banner/banner.component.ts","webpack:///src/app/shared/components/banner/banner.component.html","webpack:///src/app/features/payments/payments.module.ts","webpack:///src/app/core/index.ts","webpack:///src/app/features/home/home.module.ts","webpack:///src/app/shared/components/join/parts/join-part1/join-part1.component.ts","webpack:///src/app/shared/components/join/parts/join-part1/join-part1.component.html","webpack:///src/app/features/login-page/login-page.module.ts","webpack:///src/app/core/utils/custom-validator.ts","webpack:///src/app/shared/components/pin/pin.component.ts","webpack:///src/app/shared/components/pin/pin.component.html","webpack:///src/app/shared/components/join/join.component.ts","webpack:///src/app/shared/components/join/join.component.html","webpack:///src/app/shared/components/join/parts/join-part0/join-part0.component.ts","webpack:///src/app/shared/components/join/parts/join-part0/join-part0.component.html","webpack:///src/app/core/services/commerciante.service.ts","webpack:///src/app/core/guards/auth-guard.service.ts","webpack:///src/app/core/guards/no-login-guard.service.ts","webpack:///src/app/shared/components/recognition/recognition.component.ts","webpack:///src/app/shared/components/recognition/recognition.component.html","webpack:///src/app/core/services/loader.service.ts","webpack:///src/app/shared/components/join/parts/join-dashboard/join-dashboard.component.ts","webpack:///src/app/shared/components/join/parts/join-dashboard/join-dashboard.component.html","webpack:///src/app/shared/pipes/switch-number.pipe.ts","webpack:///src/app/shared/components/big-button/big-button.component.ts","webpack:///src/app/shared/components/big-button/big-button.component.html","webpack:///src/app/core/models/api.request.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/shared/components/info-widget/info-widget.component.ts","webpack:///src/app/shared/components/info-widget/info-widget.component.html","webpack:///src/app/shared/components/join/parts/join-part2/join-part2.component.ts","webpack:///src/app/shared/components/join/parts/join-part2/join-part2.component.html","webpack:///src/app/shared/components/error-page/error-page.component.ts","webpack:///src/app/shared/components/error-page/error-page.component.html","webpack:///src/app/core/models/commerciante.model.ts","webpack:///src/app/features/login-page/login-page.component.ts","webpack:///src/app/features/login-page/login-page.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/shared/components/qr-code/qr-code.component.ts","webpack:///src/app/shared/components/qr-code/qr-code.component.html"],"names":["HomeComponent","routingService","buttonWidth","buttonHeight","updateHeader","gotoPayment","gotoMovements","selector","templateUrl","styleUrls","LoginType","WrongParamError","param","type","CUSTOM_ERROR","name","message","JSON","stringify","LocalStorageService","item","localStorage","getItem","parse","value","undefined","removeItem","setItem","providedIn","MinPipe","values","Array","isArray","console","error","some","n","Math","min","CLIENTE_TYPE","AbstractJoinPartComponent","formCrl","valid","validateAllFormFields","formGroup","Object","keys","controls","forEach","field","control","get","markAsTouched","onlySelf","LoaderComponent","LoginService","http","authStore","username","password","params","post","login","pipe","response","token","logout","RoutingService","router","activeSection","activeSection$","text","next","navigate","home","reload","payment","movement","RoutersPath","base","baseUrl","apiUrl","ApiRoute","clienti","environment","production","enviromentName","LoginComponent","fb","loginService","snackBar","joinRequest","toastConfig","horizontalPosition","verticalPosition","panelClass","group","required","minLength","maxLength","getToken","subscribe","status","open","join","StatusEnum","JoinPart3Component","waiting","data","success","failed","AuthStore","localStorageService","pToken","TemplateComponent","menuItems","label","icon","clickEvent","gotoHome","isVisible","isLogin","gotoReload","gotoMovement","actSection","subscriptions","push","setTimeout","sub","unsubscribe","gotoLogin","UserType","PrezzoService","commercianteService","clienteService","prezzo$","convPrezzo","Number","parseFloat","isNaN","pagamento","contoCommerciante$","idConto","cliente$","id","result","timestamp","Date","getTime","window","opener","postMessage","setInterval","close","titleLabel","erroCode","errorMessage","navigateByUrl","idCommerciante","idCliente","prezzo","NfcComponent","SharedModule","declarations","imports","exports","entryComponents","ClienteService","httpClient","pin","nome","budget","_getClient","formData","FormData","append","cliente","body","PaymentsComponent","maxCol","minCol","deviceSize","breakpoint","innerWidth","event","target","AppComponent","loaderService","statusLoader$","status$","ErrorComponent","content","numericValidator","isNumeric","RegExp","test","NumericDirective","provide","useExisting","multi","providers","AppModule","forRoot","bootstrap","TemplateModule","BannerComponent","PaymentsModule","HomeModule","JoinPart1Component","cognome","cf","bornDate","email","phone","address","LoginPageModule","isOver18","errorCode","age","getBirthday","isBorn","now","ageDifMs","ageDate","abs","getUTCFullYear","PinComponent","loginEvent","userId","emit","JoinComponent","resolver","maxPage","loginRequest","page","container","clear","loadComponent","factory","resolveComponentFactory","componentRef","createComponent","instance","pg","validate","getValue","setPage","read","JoinPart0Component","valuesOutput","CommercianteService","nomenclatura","commerciante","AuthGuard","loginStore","NoLoginGuard","RecognitionComponent","loginType","choosenLoginType","changeLogin","LoadingStatus","LoaderService","LOADING","JoinDashboardComponent","changePage","backPage","nextPage","SwitchNumberPipe","switchFn","length","equal","BigButtonComponent","clickEmitter","generateApiRequest","payload","CoreModule","matIconRegistry","domSanitizer","addSvgIconSet","bypassSecurityTrustResourceUrl","ngModule","InfoWidgetComponent","title","numConto","regSocial","JoinPart2Component","userType","customer","piva","disabled","ragSoc","valueChanges","disable","enable","ErrorPageComponent","route","titleLabel$","content$","error$","FAILED","queryParams","COMMERCIANTE_TYPE","FormTypes","LoginPageComponent","formType","warn","clickInfo","routes","path","component","children","redirectTo","pathMatch","canActivate","AppRoutingModule","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","module","QrCodeComponent","pagamentoService","allowedFormats","QR_CODE","EAN_13","currentDevice","statusScanner$","scanner","getClienteByToken","handlePagamento","devices","availableDevices","onCamerasFound","scanSuccessHandler","readerStatus"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaA,a;AAKX,+BAAoBC,cAApB,EAAoD;AAAA;;AAAhC,eAAAA,cAAA,GAAAA,cAAA;AAHX,eAAAC,WAAA,GAAc,OAAd;AACA,eAAAC,YAAA,GAAe,OAAf;AAE8C;;;;qCAE/C;AACN,iBAAKF,cAAL,CAAoBG,YAApB,CAAiC,MAAjC;AACD;;;wCAEa;AACZ,iBAAKH,cAAL,CAAoBI,WAApB;AACD;;;0CAEe,CAEf;;;;;;;yBAjBUL,a,EAAa,qJ;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA,iB;AAAA,e;AAAA,2iB;AAAA;AAAA;ACR1B;;AACE;;AACE;;AAIE;AAAA,qBAAgB,IAAAK,WAAA,EAAhB;AAA6B,aAA7B;;AAEF;;AACF;;AAEA;;AACE;;AAIE;AAAA,qBAAgB,IAAAA,WAAA,EAAhB;AAA6B,aAA7B;;AACD;;AACH;;AACF;;AAEA;;AACE;;AACE;;AAIA;AAAA,qBAAgB,IAAAA,WAAA,EAAhB;AAA6B,aAA7B;;AACC;;AACH;;AAEA;;AACE;;AAIE;AAAA,qBAAgB,IAAAC,aAAA,EAAhB;AAA+B,aAA/B;;AACD;;AACH;;AACF;;AAEA;;AACE;;AACE;;AACF;;AACF;;;;;;;;;wEDrCaN,a,EAAa;gBALzB,uDAKyB;iBALf;AACTO,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,uBAFJ;AAGTC,qBAAS,EAAE,CAAC,uBAAD;AAHF,W;AAKe,U;;;;;;;;;;;;;;;;;;;;;;AER1B;AAAA;;;AAAA;AAAA;AAAA;;AAAA,UAAYC,SAAZ;;AAAA,iBAAYA,SAAZ,EAAqB;AACnB;AACA;AACA;AACD,OAJD,EAAYA,SAAS,KAATA,SAAS,MAArB;;;;;;;;;;;;;;;;;ACIA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,e,GAMX,yBAAYC,KAAZ,EAAmB;AAAA;;AALV,aAAAC,IAAA,GAAOC,YAAP;AAET,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAC,OAAA,GAAU,EAAV;AAGE,aAAKD,IAAL,GAAY,sBAAZ;AACA,aAAKC,OAAL,GAAeC,IAAI,CAACC,SAAL,CAAeN,KAAf,CAAf;AACD,O;;AAGI,UAAME,YAAY,GAAG,cAArB;;;;;;;;;;;;;;;;AChBP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKaK,mB;AAEX,uCAAc;AAAA;AAAG;;;;kCAEFJ,I,EAAc;AAC3B,gBAAMK,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqBP,IAArB,CAAb;AACA,mBAAOE,IAAI,CAACM,KAAL,CAAW,CAACH,IAAD,IAASA,IAAI,KAAK,WAAlB,GAAgC,IAAhC,GAAuCA,IAAlD,CAAP;AACD;;;kCAEcL,I,EAAcS,K,EAAY;AACvC,gBAAIA,KAAK,KAAKC,SAAd,EAAyB;AACvBJ,0BAAY,CAACK,UAAb,CAAwBX,IAAxB;AACD,aAFD,MAEO;AACLM,0BAAY,CAACM,OAAb,CAAqBZ,IAArB,EAA2BE,IAAI,CAACC,SAAL,CAAeM,KAAf,CAA3B;AACD;AACF;;;;;;;yBAfUL,mB;AAAmB,O;;;eAAnBA,mB;AAAmB,iBAAnBA,mBAAmB,K;AAAA,oBAFlB;;;;;wEAEDA,mB,EAAmB;gBAH/B,wDAG+B;iBAHpB;AACVS,sBAAU,EAAE;AADF,W;AAGoB,U;;;;;;;;;;;;;;;;;;;;ACLhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;UAMaC,O;;;;;;;oCAEDC,M,EAAoC;AAC5C,gBAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAL,EAA4B;AAC1BG,qBAAO,CAACC,KAAR,CAAc,mEAAd;AACAD,qBAAO,CAACC,KAAR,CAAcJ,MAAd;AACA,qBAAO,CAAC,CAAR;AACD;;AACD,gBAAIA,MAAM,CAACK,IAAP,CAAY,UAAAC,CAAC;AAAA,qBAAI,EAAE,OAAOA,CAAP,KAAa,QAAf,CAAJ;AAAA,aAAb,CAAJ,EAAgD;AAC9CH,qBAAO,CAACC,KAAR,CAAc,wDAAd;AACAD,qBAAO,CAACC,KAAR,CAAcJ,MAAd;AACA,qBAAO,CAAC,CAAR;AACD;;AACD,mBAAOO,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQP,MAAR,EAAX;AACD;;;;;;;yBAdUD,O;AAAO,O;;;;cAAPA,O;AAAO;;;;;wEAAPA,O,EAAO;gBAHnB,kDAGmB;iBAHd;AACJd,gBAAI,EAAE;AADF,W;AAGc,U;;;;;;;;;;;;;;;;;;ACEpB;AAAA;;;AAAA;AAAA;AAAA;;AAAO,UAAMwB,YAAY,GAAG,cAArB;;;;;;;;;;;;;;;;ACXP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQsBC,yB;AAKpB,6CAAc;AAAA;AAAG;;;;qCAET,CACP;;;qCAEU;AACT,gBAAI,KAAKC,OAAL,CAAaC,KAAjB,EAAwB;AACtB,qBAAO,IAAP;AACD,aAFD,MAEO;AACL,mBAAKC,qBAAL,CAA2B,KAAKF,OAAhC;AACA,qBAAO,KAAP;AACD;AACF;;;gDAI6BG,S,EAAsB;AAAA;;AAClDC,kBAAM,CAACC,IAAP,CAAYF,SAAS,CAACG,QAAtB,EAAgCC,OAAhC,CAAwC,UAACC,KAAD,EAAW;AACjD,kBAAMC,OAAO,GAAGN,SAAS,CAACO,GAAV,CAAcF,KAAd,CAAhB;;AACA,kBAAIC,OAAO,YAAY,0DAAvB,EAAoC;AAClCA,uBAAO,CAACE,aAAR,CAAsB;AAAEC,0BAAQ,EAAE;AAAZ,iBAAtB;AACD,eAFD,MAEO,IAAIH,OAAO,YAAY,wDAAvB,EAAkC;AACvC,qBAAI,CAACP,qBAAL,CAA2BO,OAA3B;AACD;AACF,aAPD;AAQD;;;;;;;yBA9BmBV,yB;AAAyB,O;;;cAAzBA,yB;AAAyB,+C;AAAA,gB;AAAA,e;AAAA;AAAA;ACR/C;;AAAG;;AAAyB;;;;;;;;wEDQNA,yB,EAAyB;gBAL9C,uDAK8C;iBALpC;AACTjC,oBAAQ,EAAE,wBADD;AAETC,uBAAW,EAAE,qCAFJ;AAGTC,qBAAS,EAAE,CAAC,qCAAD;AAHF,W;AAKoC,U;;;;;;;;;;;;;;;;;;;;AER/C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOa6C,e;AAEX,mCAAc;AAAA;AAAG;;;;qCAEN,CACV;;;;;;;yBALUA,e;AAAe,O;;;cAAfA,e;AAAe,mC;AAAA,gB;AAAA,e;AAAA,+F;AAAA;AAAA;ACP5B;;AACA;;;;;;;;;wEDMaA,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACT/C,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEN5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUa8C,Y;AAEX,8BAAoBC,IAApB,EAA8CC,SAA9C,EAAoE;AAAA;;AAAhD,eAAAD,IAAA,GAAAA,IAAA;AAA0B,eAAAC,SAAA,GAAAA,SAAA;AAAwB;;;;mCAG7DC,Q,EAAkBC,Q,EAAkB;AAAA;;AAC3C,gBAAMC,MAAM,GAAG;AAAEF,sBAAQ,EAARA,QAAF;AAAYC,sBAAQ,EAARA;AAAZ,aAAf;AACA,mBAAO,KAAKH,IAAL,CAAUK,IAAV,CAAkC,+CAASC,KAA3C,EAAkDF,MAAlD,EAA0DG,IAA1D,CACL,2DAAI,UAACC,QAAD,EAAc;AAChB,kBAAIA,QAAQ,IAAIA,QAAQ,CAACC,KAAzB,EAAgC;AAC9B,sBAAI,CAACR,SAAL,CAAeQ,KAAf,GAAuBD,QAAQ,CAACC,KAAhC;AACA,uBAAOD,QAAQ,CAACC,KAAhB;AACD;;AACD,qBAAO,EAAP;AACD,aAND,CADK,EAQL,kEAAW,UAAA/B,KAAK,EAAI;AAClB,oBAAMA,KAAN;AACD,aAFD,CARK,CAAP;AAYD;AAED;;;;mCACS;AAAA;;AACP,mBAAO,KAAKsB,IAAL,CAAUK,IAAV,CAAe,+CAASK,MAAxB,EAAgC,EAAhC,EAAoCH,IAApC,CACL,2DAAI,UAACC,QAAD,EAAc;AAChB,kBAAIA,QAAJ,EAAc;AACZ,sBAAI,CAACP,SAAL,CAAeQ,KAAf,GAAuBxC,SAAvB;AACD;;AACD,qBAAO,IAAP;AACD,aALD,CADK,EAOL,kEAAW,UAAAS,KAAK,EAAI;AAClBD,qBAAO,CAACC,KAAR,CAAcA,KAAd;AACA,oBAAI,CAACuB,SAAL,CAAeQ,KAAf,GAAuBxC,SAAvB;AACA,qBAAO,gDAAG,KAAH,CAAP;AACD,aAJD,CAPK,CAAP;AAaD;;;;;;;yBApCU8B,Y,EAAY,uH,EAAA,mH;AAAA,O;;;eAAZA,Y;AAAY,iBAAZA,YAAY,K;AAAA,oBAFX;;;;;wEAEDA,Y,EAAY;gBAHxB,wDAGwB;iBAHb;AACV3B,sBAAU,EAAE;AADF,W;AAGa,U;;;;;;;;;;;;;;;;;;;;;;;;ACXzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQauC,c;AAMX,gCAAoBC,MAApB,EAAoC;AAAA;;AAAhB,eAAAA,MAAA,GAAAA,MAAA;AAJpB,eAAAC,aAAA,GAAgB,EAAhB;AACA,eAAAC,cAAA,GAAiB,IAAI,4CAAJ,EAAjB;AAGuC;AAGvC;;;;;uCACaC,I,EAAc;AACzB,iBAAKF,aAAL,GAAqBE,IAArB;AACA,iBAAKD,cAAL,CAAoBE,IAApB,CAAyBD,IAAzB;AACD;;;qCAEU;AACT,iBAAKH,MAAL,CAAYK,QAAZ,CAAqB,CAAC,yEAAYC,IAAb,CAArB;AACD;;;sCAEW;AACV,iBAAKN,MAAL,CAAYK,QAAZ,CAAqB,CAAC,yEAAYX,KAAb,CAArB;AACD;;;uCAEY;AACX,iBAAKM,MAAL,CAAYK,QAAZ,CAAqB,CAAC,yEAAYE,MAAb,CAArB;AACD;;;wCAEa;AACZ,iBAAKP,MAAL,CAAYK,QAAZ,CAAqB,CAAC,yEAAYG,OAAb,CAArB;AACD;;;yCAEc;AACb,iBAAKR,MAAL,CAAYK,QAAZ,CAAqB,CAAC,yEAAYI,QAAb,CAArB;AACD;;;;;;;yBAjCUV,c,EAAc,8G;AAAA,O;;;eAAdA,c;AAAc,iBAAdA,cAAc,K;AAAA,oBAFb;;;;;wEAEDA,c,EAAc;gBAH1B,wDAG0B;iBAHf;AACVvC,sBAAU,EAAE;AADF,W;AAGe,U;;;;;;;;;;;;;;;;;;;;;;ACR3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEO,UAAMkD,WAAW,GAAG;AACzBC,YAAI,EAAE,EADmB;AAEzBL,YAAI,EAAE,MAFmB;AAGzBZ,aAAK,EAAE,OAHkB;AAIzBc,eAAO,EAAE,UAJgB;AAKzBC,gBAAQ,EAAE,WALe;AAMzBF,cAAM,EAAE;AANiB,OAApB;AASA,UAAMK,OAAO,GAAG,yEAAYC,MAA5B;AAEA,UAAMC,QAAQ,GAAG;AACtBpB,aAAK,EAAEkB,OAAO,GAAG,WADK;AAEtBd,cAAM,EAAEc,OAAO,GAAG,YAFI;AAGtBG,eAAO,EAAEH,OAAO,GAAG;AAHG,OAAjB;;;;;;;;;;;;;;;;ACbP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACO,UAAMI,WAAW,GAAG;AACzBC,kBAAU,EAAE,KADa;AAEzBC,sBAAc,EAAE,aAFS;AAGzBL,cAAM,EAAE;AAHiB,OAApB;;;;;;;;;;;;;;;;ACAP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACIQ;;AAAsE;;AAAS;;AAAQ;;AAAY;;AAAU;;;;;;AAM7G;;AACE;;AAAgC;;AAAQ;;AAAS;;AACnD;;;;;;AACA;;AAAsE;;AAA8B;;;;UDD/FM,c;AAYX,gCACUC,EADV,EAEUC,YAFV,EAGUrB,MAHV,EAIUsB,QAJV,EAI+B;AAAA;;AAHrB,eAAAF,EAAA,GAAAA,EAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAArB,MAAA,GAAAA,MAAA;AACA,eAAAsB,QAAA,GAAAA,QAAA;AAZA,eAAAC,WAAA,GAAc,IAAI,0DAAJ,EAAd;AAEO,eAAAC,WAAA,GAAc;AAC7BC,8BAAkB,EAAE,QADS;AAE7BC,4BAAgB,EAAE,KAFW;AAG7BC,sBAAU,EAAE;AAHiB,WAAd;AAYf,eAAKtD,OAAL,GAAe,KAAK+C,EAAL,CAAQQ,KAAR,CAAc;AAC3BtC,oBAAQ,EAAE,KAAK8B,EAAL,CAAQtC,OAAR,CAAgB,EAAhB,EAAoB,CAAC,0DAAW+C,QAAZ,CAApB,CADiB;AAE3BtC,oBAAQ,EAAE,KAAK6B,EAAL,CAAQtC,OAAR,CAAgB,EAAhB,EAAoB,CAC5B,0DAAW+C,QADiB,EAE5B,0DAAWC,SAAX,CAAqB,CAArB,CAF4B,EAG5B,0DAAWC,SAAX,CAAqB,EAArB,CAH4B,CAApB;AAFiB,WAAd,CAAf;AAQD;;;;qCAEU,CAAE;;;kCAEL;AAAA;;AACN,iBAAKV,YAAL,CACGW,QADH,CACY,KAAK3D,OAAL,CAAajB,KAAb,CAAmBkC,QAD/B,EACyC,KAAKjB,OAAL,CAAajB,KAAb,CAAmBmC,QAD5D,EAEG0C,SAFH,CAGI,UAACpC,KAAD;AAAA,qBAAW,MAAI,CAACG,MAAL,CAAYK,QAAZ,CAAqB,CAAC,yDAAYC,IAAb,CAArB,EAAyC,EAAzC,CAAX;AAAA,aAHJ,EAII,UAACxC,KAAD,EAA8B;AAC5B,kBAAIA,KAAK,IAAIA,KAAK,CAACoE,MAAnB,EAA2B;AACzB,oBAAIpE,KAAK,CAACoE,MAAN,KAAiB,GAArB,EAA0B;AACxB,wBAAI,CAACZ,QAAL,CAAca,IAAd,CACE,2BADF,EAEE,MAFF,EAGE,MAAI,CAACX,WAHP;AAKD;AACF,eARD,MAQO;AACL3D,uBAAO,CAACC,KAAR,CAAcA,KAAd;;AACA,sBAAI,CAACwD,QAAL,CAAca,IAAd,CACE,mCADF,EAEE,MAFF,EAGE,MAAI,CAACX,WAHP;AAKD;AACF,aArBL;AAuBD;;;iCAEM;AACL,iBAAKD,WAAL,CAAiBnB,IAAjB;AACD;;;;;;;yBA1DUe,c,EAAc,2H,EAAA,gK,EAAA,uH,EAAA,wI;AAAA,O;;;cAAdA,c;AAAc,kC;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,0Y;AAAA;AAAA;ACb3B;;AACE;;AACE;;AACE;;AACE;;AACA;;AACF;;AACF;;AACA;;AACE;;AACE;;AACA;;AAGA;;AACF;;AACF;;AACA;;AACI;;AAA6E;AAAA,qBAAS,IAAAzB,KAAA,EAAT;AAAgB,aAAhB;;AAAkB;;AAAK;;AACxG;;AACA;;AACE;;AAAmC;AAAA,qBAAS,IAAA0C,IAAA,EAAT;AAAe,aAAf;;AAAiB;;AAAqB;;AAC3E;;AACF;;AACF;;;;AAvBqB;;AAAA;;AAIF;;AAAA;;AAMA;;AAAA;;AAGA;;AAAA;;AAIwB;;AAAA;;;;;;;;;wEDL9BjB,c,EAAc;gBAL1B,uDAK0B;iBALhB;AACThF,oBAAQ,EAAE,WADD;AAETC,uBAAW,EAAE,wBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKgB,U;;;;;;;;;;;AAIfkF,qBAAW;kBAApB;AAAoB;;;;;;;;;;;;;;;;;;;AEjBvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AAAyC;;AAAsC;;;;;;AAC/E;;AAAyC;;AAAsC;;;;;;AAC/E;;AAAwC;;AAAsB;;;;ADG9D,UAAKc,UAAL;;AAAA,iBAAKA,UAAL,EAAe;AACb;AACA;AACA;AACD,OAJD,EAAKA,UAAU,KAAVA,UAAU,MAAf;;UAWaC,kB;AAOX,oCAAoBlD,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AANX,eAAAiD,UAAA,GAAaA,UAAb;AAIT,eAAAH,MAAA,GAASG,UAAU,CAACE,OAApB;AAEyC;;;;qCAEjC;AAAA;;AACN,iBAAKnD,IAAL,CAAUK,IAAV,CAAe,sDAASsB,OAAxB,EAAiC,KAAKyB,IAAtC,EAA4C7C,IAA5C,CACE,2DAAI,UAAAC,QAAQ;AAAA,qBAAI,MAAI,CAACsC,MAAL,GAAcG,UAAU,CAACI,OAA7B;AAAA,aAAZ,CADF,EAEE,kEAAW,UAAA3E,KAAK;AAAA,qBAAI,MAAI,CAACoE,MAAL,GAAcG,UAAU,CAACK,MAA7B;AAAA,aAAhB,CAFF,EAGCT,SAHD;AAID;;;;;;;yBAdUK,kB,EAAkB,gI;AAAA,O;;;cAAlBA,kB;AAAkB,uC;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,6B;AAAA;AAAA;AChB/B;;AACA;;AACA;;;;AAFG;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;wEDcUA,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACTnG,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKoB,U;;;;;AAGpBmG,cAAI,EAAE,CAAF;kBAAZ;AAAY,WAAE;;;;;;;;;;;;;;;;;;;AEnBjB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMaG,S;AAiBX,2BAAoBC,mBAApB,EAA8D;AAAA;;AAA1C,eAAAA,mBAAA,GAAAA,mBAAA;AAA6C;;;;8BAZ9C;AACjB,gBAAI,CAAC,KAAKC,MAAV,EAAkB;AAChB,mBAAKA,MAAL,GAAc,KAAKD,mBAAL,CAAyB1F,OAAzB,CAAiC,OAAjC,CAAd;AACD;;AACD,mBAAO,KAAK2F,MAAZ;AACD,W;4BAEgBhD,K,EAAO;AACtB,iBAAKgD,MAAL,GAAchD,KAAd;AACA,iBAAK+C,mBAAL,CAAyBrF,OAAzB,CAAiC,OAAjC,EAA0CsC,KAA1C;AACD;;;;;;;yBAfU8C,S,EAAS,wH;AAAA,O;;;eAATA,S;AAAS,iBAATA,SAAS,K;AAAA,oBAFR;;;;;wEAEDA,S,EAAS;gBAHrB,wDAGqB;iBAHV;AACVnF,sBAAU,EAAE;AADF,W;AAGU,U;;;;;;;;;;;;;;;;;;;;;;ACNtmBAAS,oBAAT;AAA0B,WAA1B;;AAEA;;AAAU;;AAAe;;AACzB;;AAAM;;AAAgB;;AACxB;;;;;;AAFY;;AAAA;;AACJ;;AAAA;;;;;;AAPV;;AACE;;AAQF;;;;;;AANI;;AAAA;;;;UDGGsF,iB;AAuCX,mCAAmBjH,cAAnB,EAA2DwD,SAA3D,EAAyFgC,YAAzF,EAAqH;AAAA;;AAAA;;AAAlG,eAAAxF,cAAA,GAAAA,cAAA;AAAwC,eAAAwD,SAAA,GAAAA,SAAA;AAA8B,eAAAgC,YAAA,GAAAA,YAAA;AArClF,eAAA0B,SAAA,GAAiG,CACtG;AACEC,iBAAK,EAAE,MADT;AAEEC,gBAAI,EAAE,WAFR;AAGEC,sBAAU,EAAE;AAAA,qBAAM,MAAI,CAACrH,cAAL,CAAoBsH,QAApB,EAAN;AAAA,aAHd;AAIEC,qBAAS,EAAE;AAAA,qBAAM,MAAI,CAACC,OAAL,EAAN;AAAA;AAJb,WADsG,EAOtG;AACEL,iBAAK,EAAE,UADT;AAEEC,gBAAI,EAAE,SAFR;AAGEC,sBAAU,EAAE;AAAA,qBAAM,MAAI,CAACrH,cAAL,CAAoByH,UAApB,EAAN;AAAA,aAHd;AAIEF,qBAAS,EAAE;AAAA,qBAAM,MAAI,CAACC,OAAL,EAAN;AAAA;AAJb,WAPsG,EAatG;AACEL,iBAAK,EAAE,WADT;AAEEC,gBAAI,EAAE,MAFR;AAGEC,sBAAU,EAAE;AAAA,qBAAM,MAAI,CAACrH,cAAL,CAAoBI,WAApB,EAAN;AAAA,aAHd;AAIEmH,qBAAS,EAAE;AAAA,qBAAM,MAAI,CAACC,OAAL,EAAN;AAAA;AAJb,WAbsG,EAmBtG;AACEL,iBAAK,EAAE,WADT;AAEEC,gBAAI,EAAE,wBAFR;AAGEC,sBAAU,EAAE;AAAA,qBAAM,MAAI,CAACrH,cAAL,CAAoB0H,YAApB,EAAN;AAAA,aAHd;AAIEH,qBAAS,EAAE;AAAA,qBAAM,MAAI,CAACC,OAAL,EAAN;AAAA;AAJb,WAnBsG,EAyBtG;AACEL,iBAAK,EAAE,QADT;AAEEC,gBAAI,EAAE,MAFR;AAGEC,sBAAU,EAAE;AAAA,qBAAM,MAAI,CAACpD,MAAL,EAAN;AAAA,aAHd;AAIEsD,qBAAS,EAAE;AAAA,qBAAM,MAAI,CAACC,OAAL,EAAN;AAAA;AAJb,WAzBsG,CAAjG;AAiCP,eAAAG,UAAA,GAAa,KAAK3H,cAAL,CAAoBoE,aAAjC;AAEQ,eAAAwD,aAAA,GAAgC,EAAhC;AAE+G;;;;qCAE/G;AAAA;;AACN,iBAAKA,aAAL,CAAmBC,IAAnB,CACE,KAAK7H,cAAL,CAAoBqE,cAApB,CAAmC+B,SAAnC,CAA6C,UAAAhC,aAAa;AAAA,qBACxD0D,UAAU,CAAC;AAAA,uBAAO,MAAI,CAACH,UAAL,GAAkBvD,aAAzB;AAAA,eAAD,EAA0C,CAA1C,CAD8C;AAAA,aAA1D,CADF;AAKD;;;wCAEU;AACT,iBAAKwD,aAAL,CAAmB7E,OAAnB,CAA2B,UAAAgF,GAAG;AAAA,qBAAIA,GAAG,CAACC,WAAJ,EAAJ;AAAA,aAA9B;AACD;;;oCAGM;AACL,mBAAO,CAAC,CAAC,KAAKxE,SAAL,CAAeQ,KAAxB;AACD;;;mCAEQ;AAAA;;AACP,iBAAKwB,YAAL,CAAkBvB,MAAlB,GAA2BmC,SAA3B,CAAqC,YAAM;AACzC,oBAAI,CAACpG,cAAL,CAAoBiI,SAApB;AACD,aAFD;AAGD;;;yCAEW;AACV,mBAAO,CAAC,KAAKf,SAAL,CAAehF,IAAf,CAAoB,UAACf,IAAD;AAAA,qBAAUA,IAAI,CAACoG,SAAL,EAAV;AAAA,aAApB,CAAR;AACD;;;;;;;yBAlEUN,iB,EAAiB,qJ,EAAA,uI,EAAA,gJ;AAAA,O;;;cAAjBA,iB;AAAiB,qC;AAAA,iB;AAAA,e;AAAA,sU;AAAA;AAAA;ACZ9B;;AACE;;AACE;;AACE;;AAAU;;AAAS;;AACrB;;AACA;;AACE;;AAUF;;AAEA;;AAAwB;;AAAO;;AAC/B;;AAA4B;;AAAI;;AAChC;;AAAgC;;AAAiB;;AACnD;;AACF;;AACA;;AACE;;AACF;;;;;;AAvB4B;;AAAA,+FAA0B,UAA1B,EAA0B,kBAA1B;;AAIP;;AAAA;;AAce;;AAAA;;;;;;;;;wEDRvBA,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACT3G,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACA,UAAY0H,QAAZ;;AAAA,iBAAYA,QAAZ,EAAoB;AAClB;AACA;AACD,OAHD,EAAYA,QAAQ,KAARA,QAAQ,MAApB;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYaC,a;AAGX,+BACU5E,IADV,EAEU6E,mBAFV,EAGUC,cAHV,EAIUlE,MAJV,EAIwB;AAAA;;AAHd,eAAAZ,IAAA,GAAAA,IAAA;AACA,eAAA6E,mBAAA,GAAAA,mBAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAlE,MAAA,GAAAA,MAAA;AANV,eAAAmE,OAAA,GAAmC,IAAI,oDAAJ,CAAoB,CAApB,CAAnC;AAOI;AACJ;;;;;oCACU/G,K,EAAe;AACvB,gBAAMgH,UAAU,GAAGC,MAAM,CAACC,UAAP,CAAkBlH,KAAlB,CAAnB;;AACA,gBAAI,CAACmH,KAAK,CAACH,UAAD,CAAV,EAAwB;AACtB,mBAAKD,OAAL,CAAa/D,IAAb,CAAkBiE,MAAM,CAACC,UAAP,CAAkBlH,KAAlB,CAAlB;AACD,aAFD,MAEO;AACL,oBAAM;AAAEX,oBAAI,EAAE,gEAAR;AAAsBE,oBAAI,EAAE,mBAA5B;AAAiDC,uBAAO,EAAE;AAA1D,eAAN;AACD;AACF;AAED;;;;4CACkB;AAAA;;AAChB,iBAAK4H,SAAL,CACE,KAAKP,mBAAL,CAAyBQ,kBAAzB,CAA4CrH,KAA5C,CAAkDsH,OADpD,EAEE,KAAKR,cAAL,CAAoBS,QAApB,CAA6BvH,KAA7B,CAAmCwH,EAFrC,EAGE,KAAKT,OAAL,CAAa/G,KAHf,EAIE6E,SAJF,CAIY,UAAA4C,MAAM,EAAI;AACpB,kBAAMjF,QAAQ,GAAG;AAAEkF,yBAAS,EAAE,IAAIC,IAAJ,GAAWC,OAAX;AAAb,eAAjB;;AACA,kBAAIH,MAAM,CAACpC,OAAX,EAAoB;AAClB,oBAAIwC,MAAM,CAACC,MAAX,EAAmB;AACjBD,wBAAM,CAACC,MAAP,CAAcC,WAAd,CAA0BtI,IAAI,CAACC,SAAL,CAAe,MAAD,OAAC,CAAD;AAAG2F,2BAAO,EAAE;AAAZ,mBAAC,EAAoB7C,QAApB,CAAf,CAA1B,EAA0E,GAA1E;AACAwF,6BAAW,CAAC;AAAA,2BAAMH,MAAM,CAACI,KAAP,EAAN;AAAA,mBAAD,EAAuB,IAAvB,CAAX;AACD,iBAHD,MAGO;AACLxH,yBAAO,CAACC,KAAR,CAAc,6BAAd;AACD;AACF,eAPD,MAOO;AACL,oBAAMwH,UAAU,GAAG,wCAAnB;AACA,oBAAM1I,OAAO,GAAG,qBAAhB;AACA,oBAAMkB,KAAK,GAAgB;AAAErB,sBAAI,EAAE,gEAAR;AAAsBE,sBAAI,EAAEkI,MAAM,CAAC/G,KAAP,CAAa8G,EAAzC;AAA6ChI,yBAAO,EAAEiI,MAAM,CAAC/G,KAAP,CAAalB;AAAnE,iBAA3B;AACAqI,sBAAM,CAACC,MAAP,CAAcC,WAAd,CACEtI,IAAI,CAACC,SAAL,CAAe,MAAD,OAAC,CAAD;AAAG2F,yBAAO,EAAE,KAAZ;AAAmB8C,0BAAQ,EAAEV,MAAM,CAAC/G,KAAP,CAAa8G,EAA1C;AAA8CY,8BAAY,EAAEX,MAAM,CAAC/G,KAAP,CAAalB;AAAzE,iBAAC,EAAoFgD,QAApF,CAAf,CADF,EAEE,GAFF;AAIAwF,2BAAW,CAAC;AAAA,yBAAMH,MAAM,CAACI,KAAP,EAAN;AAAA,iBAAD,EAAuB,IAAvB,CAAX;;AACA,sBAAI,CAACrF,MAAL,CAAYyF,aAAZ,6BAA+CH,UAA/C,sBAAqE1I,OAArE,oBAAsFC,IAAI,CAACC,SAAL,CAAegB,KAAf,CAAtF;AACD;AACF,aAxBD;AAyBD;AAED;;;;oCACU4H,c,EAAwBC,S,EAAmBC,M,EAAgB;AACnE,gBAAMpG,MAAM,GAAG;AACbkG,4BAAc,EAAdA,cADa;AAEbC,uBAAS,EAATA,SAFa;AAGbC,oBAAM,EAANA;AAHa,aAAf;AAKA,mBAAO,KAAKxG,IAAL,CAAUK,IAAV,CAA2F,gBAA3F,EAA6GD,MAA7G,CAAP;AACD;;;;;;;yBAxDUwE,a,EAAa,uH,EAAA,sJ,EAAA,4I,EAAA,8G;AAAA,O;;;eAAbA,a;AAAa,iBAAbA,aAAa,K;AAAA,oBAFZ;;;;;wEAEDA,a,EAAa;gBAHzB,wDAGyB;iBAHd;AACVxG,sBAAU,EAAE;AADF,W;AAGc,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACb1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaqI,Y;AAEX,gCAAc;AAAA;AAAG;;;;qCAEN,CACV;;;;;;;yBALUA,Y;AAAY,O;;;cAAZA,Y;AAAY,gC;AAAA,gB;AAAA,e;AAAA,+E;AAAA;AAAA;ACPzB;;AACA;;AAAyB;;AAAqE;;;;;;;;;wEDMjFA,Y,EAAY;gBALxB,uDAKwB;iBALd;AACT1J,oBAAQ,EAAE,SADD;AAETC,uBAAW,EAAE,sBAFJ;AAGTC,qBAAS,EAAE,CAAC,sBAAD;AAHF,W;AAKc,U;;;;;;;;;;;;;;;;;;;;AEPzyFayJ,Y;;;;;cAAAA;;;;2BAAAA,Y;AAAY,S;AAAA,kBA9Bd,CACP,4DADO,EAEP,6DAFO,EAGP,sEAHO,EAIP,wEAJO,EAKP,oEALO,EAMP,kEANO,EAOP,sEAPO,EAQP,6EARO,EASP,yEATO,EAUP,sEAVO,EAWP,0EAXO,EAYP,2EAZO,EAaP,gFAbO,CA8Bc,EAVrB,6EAUqB;;;;4HAAZA,Y,EAAY;AAAA,yBAnDrB,sFAmDqB,EAlDrB,2EAkDqB,EAjDrB,2EAiDqB,EAhDrB,+EAgDqB,EA/CrB,oFA+CqB,EA9CrB,+FA8CqB,EA7CrB,iFA6CqB,EA5CrB,iFA4CqB,EA3CrB,+FA2CqB,EA1CrB,oFA0CqB,EAzCrB,mGAyCqB,EAxCrB,wDAwCqB,EAvCrB,2EAuCqB,EAtCrB,kGAsCqB,EArCrB,8EAqCqB,EApCrB,0GAoCqB,EAnCrB,0GAmCqB,EAlCrB,0GAkCqB,EAjCrB,sHAiCqB,EAhCrB,0GAgCqB;AAhCH,oBAGlB,4DAHkB,EAIlB,6DAJkB,EAKlB,sEALkB,EAMlB,wEANkB,EAOlB,oEAPkB,EAQlB,kEARkB,EASlB,sEATkB,EAUlB,6EAVkB,EAWlB,yEAXkB,EAYlB,sEAZkB,EAalB,0EAbkB,EAclB,2EAdkB,EAelB,gFAfkB,CAgCG;AAjBF,oBAGnB,oFAHmB,EAInB,iFAJmB,EAKnB,iFALmB,EAMnB,+FANmB,EAOnB,6EAPmB,EAQnB,oFARmB,EASnB,mGATmB,EAUnB,wDAVmB,EAWnB,2EAXmB,EAYnB,kGAZmB,EAanB,8EAbmB;AAiBE,S;AAJR,O;;;;;wEAIJA,Y,EAAY;gBArDxB,sDAqDwB;iBArDf;AACRC,wBAAY,EAAE,CACZ,sFADY,EAEZ,2EAFY,EAGZ,2EAHY,EAIZ,+EAJY,EAKZ,oFALY,EAMZ,+FANY,EAOZ,iFAPY,EAQZ,iFARY,EASZ,+FATY,EAUZ,oFAVY,EAWZ,mGAXY,EAYZ,wDAZY,EAaZ,2EAbY,EAcZ,kGAdY,EAeZ,8EAfY,EAgBZ,0GAhBY,EAiBZ,0GAjBY,EAkBZ,0GAlBY,EAmBZ,sHAnBY,EAoBZ,0GApBY,CADN;AAuBRC,mBAAO,EAAE,CACP,4DADO,EAEP,6DAFO,EAGP,sEAHO,EAIP,wEAJO,EAKP,oEALO,EAMP,kEANO,EAOP,sEAPO,EAQP,6EARO,EASP,yEATO,EAUP,sEAVO,EAWP,0EAXO,EAYP,2EAZO,EAaP,gFAbO,CAvBD;AAsCRC,mBAAO,EAAE,CACP,oFADO,EAEP,iFAFO,EAGP,iFAHO,EAIP,+FAJO,EAKP,6EALO,EAMP,oFANO,EAOP,mGAPO,EAQP,wDARO,EASP,2EATO,EAUP,kGAVO,EAWP,8EAXO,CAtCD;AAmDRC,2BAAe,EAAE,CAAC,0GAAD,EAAqB,0GAArB,EAAyC,0GAAzC,EAA6D,0GAA7D;AAnDT,W;AAqDe,U;;;;;;;;;;;;;;;;;;ACxFzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWaC,c;AAGX,gCAAoBC,UAApB,EAA4C;AAAA;;AAAxB,eAAAA,UAAA,GAAAA,UAAA;AAClB,eAAKzB,QAAL,GAAgB,IAAI,oDAAJ,CAAoB;AAClClI,gBAAI,EAAE,kEAD4B;AAElCmI,cAAE,EAAE,EAF8B;AAGlCyB,eAAG,EAAE,EAH6B;AAIlCxG,iBAAK,EAAE,EAJ2B;AAKlCyG,gBAAI,EAAE,EAL4B;AAMlCC,kBAAM,EAAE;AAN0B,WAApB,CAAhB;AAQD;;;;0CAEe3B,E,EAAYyB,G,EAAW;AACrC;AACA,gBAAI,KAAK1B,QAAL,CAAcvH,KAAd,CAAoBwH,EAAxB,EAA4B;AAC1B,qBAAO,KAAKD,QAAZ;AACD;;AAED,gBAAI,CAACC,EAAD,IAAO,CAACyB,GAAZ,EAAiB;AACf,qBAAO,wDAAW,IAAI,mEAAJ,CAAoB;AAACzB,kBAAE,EAAFA,EAAD;AAAKyB,mBAAG,EAAHA;AAAL,eAApB,CAAX,CAAP;AACD;;AAED,gBAAM7G,MAAM,GAA+B;AAAEoF,gBAAE,EAAFA,EAAF;AAAMyB,iBAAG,EAAHA;AAAN,aAA3C;AACA,mBAAO,KAAKG,UAAL,CAAgBhH,MAAhB,CAAP;AACD;;;4CAEiBK,K,EAAa;AAC7B;AACA,gBAAI,KAAK8E,QAAL,CAAcvH,KAAd,CAAoBwH,EAAxB,EAA4B;AAC1B,qBAAO,KAAKD,QAAZ;AACD;;AAED,gBAAI,CAAC9E,KAAL,EAAY;AACV,qBAAO,wDAAW,IAAI,mEAAJ,CAAoBA,KAApB,CAAX,CAAP;AACD;;AAED,gBAAML,MAAM,GAAoB;AAAEK,mBAAK,EAALA;AAAF,aAAhC;AACA,mBAAO,KAAK2G,UAAL,CAAgBhH,MAAhB,CAAP;AACD;AAED;;;;qCACmBA,M,EAAmD;AAAA;;AACpE,gBAAMiH,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,oBAAQ,CAACE,MAAT,CAAgB,IAAhB,EAAsBnH,MAAM,CAACoF,EAA7B;AACA6B,oBAAQ,CAACE,MAAT,CAAgB,KAAhB,EAAuBnH,MAAM,CAAC6G,GAA9B;AACAI,oBAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBnH,MAAM,CAACK,KAAhC;AACA,mBAAO,KAAKuG,UAAL,CACJ3G,IADI,CACuB,cADvB,EACuCgH,QADvC,EAEJ9G,IAFI,CAGH,2DAAI,UAAAkF,MAAM,EAAI;AACZ,kBAAIA,MAAM,IAAIA,MAAM,CAACpC,OAArB,EAA8B;AAC5B,oBAAMmE,OAAO,GAAG,MAAH,OAAG,CAAH;AAAKnK,sBAAI,EAAE;AAAX,iBAAG,EAAyBoI,MAAM,CAACgC,IAAhC,CAAhB;;AACA,uBAAI,CAAClC,QAAL,CAAcvE,IAAd,CAAmBwG,OAAnB;;AACA,uBAAOA,OAAP;AACD,eAJD,MAIO;AACL,sBAAM;AAAEnK,sBAAI,EAAE,gEAAR;AAAsBE,sBAAI,EAAE,mBAA5B;AAAiDC,yBAAO;AAAxD,iBAAN;AACD;AACF,aARD,CAHG,CAAP;AAaD;;;;;;;yBA7DUuJ,c,EAAc,uH;AAAA,O;;;eAAdA,c;AAAc,iBAAdA,cAAc,K;AAAA,oBAFb;;;;;wEAEDA,c,EAAc;gBAH1B,wDAG0B;iBAHf;AACV3I,sBAAU,EAAE;AADF,W;AAGe,U;;;;;;;;;;;;;;;;;;;;;;ACZ3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASasJ,iB;AAWX,mCAAoBjL,cAApB,EAAoD;AAAA;;AAAhC,eAAAA,cAAA,GAAAA,cAAA;AANZ,eAAAkL,MAAA,GAAS,CAAT;AACA,eAAAC,MAAA,GAAS,CAAT;AAEA,eAAAC,UAAA,GAAa,IAAb;AAG+C;;;;qCAE/C;AACN,iBAAKC,UAAL,GAAmBjC,MAAM,CAACkC,UAAP,IAAqB,KAAKF,UAA3B,GAAyC,KAAKD,MAA9C,GAAuD,KAAKD,MAA9E;AACD;;;4CAEiB;AAChB,iBAAKlL,cAAL,CAAoBG,YAApB,CAAiC,WAAjC;AACD;;;mCAEQoL,K,EAAO;AACd,iBAAKF,UAAL,GAAmBE,KAAK,CAACC,MAAN,CAAaF,UAAb,IAA2B,KAAKF,UAAjC,GAA+C,KAAKD,MAApD,GAA6D,KAAKD,MAApF;AACD;;;;;;;yBAvBUD,iB,EAAiB,qJ;AAAA,O;;;cAAjBA,iB;AAAiB,qC;AAAA,iB;AAAA,e;AAAA,ie;AAAA;AAAA;ACT9B;;AACE;;AACE;;AACF;;AACA;;AACE;;AAQF;;AACF;;AAEA;;AACE;;AACE;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACF;;AACF;;;;;;;;;wEDjBaA,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACT3K,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;;;;;;;;;;;;AET9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASaiL,Y,GAIX,sBACSC,aADT,EACqC;AAAA;;AAA5B,aAAAA,aAAA,GAAAA,aAAA;AAEP,aAAKC,aAAL,GAAqB,KAAKD,aAAL,CAAmBE,OAAxC;AACD,O;;;yBARUH,Y,EAAY,oH;AAAA,O;;;cAAZA,Y;AAAY,iC;AAAA,gB;AAAA,e;AAAA,kC;AAAA;AAAA;ACTzB;;AAKE;;AACF;;;;;;;;;wEDGaA,Y,EAAY;gBALxB,uDAKwB;iBALd;AACTnL,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,sBAFJ;AAGTC,qBAAS,EAAE,CAAC,sBAAD;AAHF,W;AAKc,U;;;;;;;;;;;;;;;;;;;;;;AETzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaqL,c;AAUX,kCAAc;AAAA;AAAG;;;;qCAEN,CACV;;;;;;;yBAbUA,c;AAAc,O;;;cAAdA,c;AAAc,kC;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,kH;AAAA;AAAA;ACR3B;;AACE;;AACE;;AACF;;AACA;;AAA4B;;AAAc;;AAC1C;;AAEA;;AAAG;;;;AAAkB;;AACvB;;;;AAJ8B;;AAAA;;AACvB;;AAAA;;AAEF;;AAAA;;;;;;;;;;wEDCQA,c,EAAc;gBAL1B,uDAK0B;iBALhB;AACTvL,oBAAQ,EAAE,WADD;AAETC,uBAAW,EAAE,wBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKgB,U;;;AAEhBiJ,oBAAU,EAAE,CAAF;kBAAlB;AAAkB,WAAE,C;AAGZqC,iBAAO,EAAE,CAAF;kBAAf;AAAe,WAAE,C;AAGT7J,eAAK,EAAE,CAAF;kBAAb;AAAa,WAAE;;;;;;;;;;;;;;;;;;;AEhBlB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;AACO,eAAS8J,gBAAT,GAAyB;AAC9B,eAAO,UAAC9I,OAAD,EAA6D;AAClE,cAAM+I,SAAS,GAAG,IAAIC,MAAJ,CAAW,UAAX,EAAuBC,IAAvB,CAA4BjJ,OAAO,CAAC1B,KAApC,CAAlB;AACA,iBAAO,CAACyK,SAAD,GAAa;AAAE,uBAAW;AAAEzK,mBAAK,EAAE0B,OAAO,CAAC1B;AAAjB;AAAb,WAAb,GAAuD,IAA9D;AACD,SAHD;AAID;AAED;;;UAKa4K,gB;;;;;;;mCAEFlJ,O,EAAwB;AAC/B,mBAAQ8I,gBAAgB,GAAG9I,OAAH,CAAxB;AACD;;;;;;;yBAJUkJ,gB;AAAgB,O;;;cAAhBA,gB;AAAgB,2C;AAAA,oFAFhB,CAAC;AAAEC,iBAAO,EAAE,4DAAX;AAA0BC,qBAAW,EAAEF,gBAAvC;AAAyDG,eAAK,EAAE;AAAhE,SAAD,CAEgB;;;;;wEAAhBH,gB,EAAgB;gBAJ5B,uDAI4B;iBAJlB;AACT7L,oBAAQ,EAAE,cADD;AAETiM,qBAAS,EAAE,CAAC;AAAEH,qBAAO,EAAE,4DAAX;AAA0BC,yBAAW,EAAEF,gBAAvC;AAAyDG,mBAAK,EAAE;AAAhE,aAAD;AAFF,W;AAIkB,U;;;;;;;;;;;;;;;;;;AChB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UA+BaE,S;;;;;cAAAA,S;AAAS,oBAFR,2DAEQ;;;;2BAATA,S;AAAS,S;AAAA,mBAHT,E;AAAE,kBAXJ,CACP,uEADO,EAEP,4FAFO,EAGP,6DAAWC,OAAX,EAHO,EAIP,oEAJO,EAKP,qDALO,EAMP,iFANO,EAOP,sFAPO,EAQP,qEARO,EASP,iFATO,CAWI;;;;4HAGFD,S,EAAS;AAAA,yBAhBlB,2DAgBkB;AAhBN,oBAGZ,uEAHY,EAIZ,4FAJY,EAIW,4DAJX,EAMZ,oEANY,EAOZ,qDAPY,EAQZ,iFARY,EASZ,sFATY,EAUZ,qEAVY,EAWZ,iFAXY;AAgBM,S;AALJ,O;;;;;wEAKLA,S,EAAS;gBAlBrB,sDAkBqB;iBAlBZ;AACRtC,wBAAY,EAAE,CACZ,2DADY,CADN;AAIRC,mBAAO,EAAE,CACP,uEADO,EAEP,4FAFO,EAGP,6DAAWsC,OAAX,EAHO,EAIP,oEAJO,EAKP,qDALO,EAMP,iFANO,EAOP,sFAPO,EAQP,qEARO,EASP,iFATO,CAJD;AAeRF,qBAAS,EAAE,EAfH;AAgBRG,qBAAS,EAAE,CAAC,2DAAD;AAhBH,W;AAkBY,U;;;;;;;;;;;;;;;;;;AC/BtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAwBaC,c;;;;;cAAAA;;;;2BAAAA,c;AAAc,S;AAAA,kBAXhB,CACP,4DADO,EAEP,0EAFO,EAGP,oEAHO,EAIP,wEAJO,EAKP,oEALO,EAMP,4DANO,EAOP,4DAPO,CAWgB;;;;4HAAdA,c,EAAc;AAAA,yBAZV,qEAYU;AAZO,oBAE9B,4DAF8B,EAG9B,0EAH8B,EAI9B,oEAJ8B,EAK9B,wEAL8B,EAM9B,oEAN8B,EAO9B,4DAP8B,EAQ9B,4DAR8B,CAYP;AAJX,oBAEJ,qEAFI;AAIW,S;AAFE,O;;;;;wEAEhBA,c,EAAc;gBAb1B,sDAa0B;iBAbjB;AACRzC,wBAAY,EAAE,CAAC,qEAAD,CADN;AAERC,mBAAO,EAAE,CACP,4DADO,EAEP,0EAFO,EAGP,oEAHO,EAIP,wEAJO,EAKP,oEALO,EAMP,4DANO,EAOP,4DAPO,CAFD;AAWRC,mBAAO,EAAE,CAAC,qEAAD;AAXD,W;AAaiB,U;;;;;;;;;;;;;;;;;;ACxB3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOawC,e;AAEX,mCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,e;AAAe,O;;;cAAfA,e;AAAe,mC;AAAA,gB;AAAA,e;AAAA;AAAA;ACP5B;;AACE;;AAUF;;;;;;;;wEDJaA,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACTtM,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAgBaqM,c;;;;;cAAAA;;;;2BAAAA,c;AAAc,S;AAAA,kBANhB,CACP,4DADO,EAEP,oDAFO,CAMgB;;;;4HAAdA,c,EAAc;AAAA,yBAPV,qEAOU;AAPO,oBAE9B,4DAF8B,EAG9B,oDAH8B,CAOP;AAJX,oBAEJ,qEAFI;AAIW,S;AAFE,O;;;;;wEAEhBA,c,EAAc;gBAR1B,sDAQ0B;iBARjB;AACR3C,wBAAY,EAAE,CAAC,qEAAD,CADN;AAERC,mBAAO,EAAE,CACP,4DADO,EAEP,oDAFO,CAFD;AAMRC,mBAAO,EAAE,CAAC,qEAAD;AAND,W;AAQiB,U;;;;;;;;;;;;;;;;;;ACha0C,U;;;;;cAAAA;;;;2BAAAA,U;AAAU,S;AAAA,kBAHZ,CAAC,4DAAD,EAAe,2DAAf,EAA6B,qEAA7B,CAGY;;;;4HAAVA,U,EAAU;AAAA,yBAJN,6DAIM;AAJO,oBAClB,4DADkB,EACJ,2DADI,EACU,qEADV,CAIP;AAHiC,oBAC5C,6DAD4C;AAGjC,S;AAFE,O;;;;;wEAEZA,U,EAAU;gBALtB,sDAKsB;iBALb;AACR5C,wBAAY,EAAE,CAAC,6DAAD,CADN;AAERC,mBAAO,EAAE,CAAC,4DAAD,EAAe,2DAAf,EAA6B,qEAA7B,CAFD;AAGRC,mBAAO,EAAE,CAAC,6DAAD;AAHD,W;AAKa,U;;;;;;;;;;;;;;;;;;ACZvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKQ;;AACE;;AAAK;;AAAQ;;AAAY;;AAC3B;;;;;;AAOA;;AACE;;AAAQ;;AAAQ;;AAAY;;AAC9B;;;;;;AAOA;;AACE;;AAAe;;AAAQ;;AAAY;;AACrC;;;;;;AAOA;;AACE;;AAAM;;AAAQ;;AAAY;;AAC5B;;;;;;AAgBA;;AACE;;AAAgB;;AAAQ;;AAAY;;AAAS;;AAC/C;;;;;;AACA;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AAMA;;AACE;;AAAS;;AAAQ;;AAAY;;AAC/B;;;;;;AAOA;;AACE;;AAAQ;;AAAQ;;AAAY;;AAC9B;;;;UDnEK2C,kB;;;;;AAEX,oCAAoBxH,EAApB,EAAqC;AAAA;;AAAA;;AACnC;AADkB,kBAAAA,EAAA,GAAAA,EAAA;AAElB,kBAAK/C,OAAL,GAAe,QAAK+C,EAAL,CAAQQ,KAAR,CAAc;AAC3B0E,gBAAI,EAAE,QAAKlF,EAAL,CAAQtC,OAAR,CAAgB,EAAhB,EAAoB,CAAC,0DAAW+C,QAAZ,CAApB,CADqB;AAE3BgH,mBAAO,EAAE,QAAKzH,EAAL,CAAQtC,OAAR,CAAgB,EAAhB,EAAoB,CAAC,0DAAW+C,QAAZ,CAApB,CAFkB;AAG3BiH,cAAE,EAAE,QAAK1H,EAAL,CAAQtC,OAAR,CAAgB,EAAhB,EAAoB,CAAC,0DAAW+C,QAAZ,CAApB,CAHuB;AAI3BkH,oBAAQ,EAAE,QAAK3H,EAAL,CAAQtC,OAAR,CAAgB,EAAhB,EAAoB,CAAC,0DAAW+C,QAAZ,EAAsB,4EAAtB,EAAgC,0EAAhC,CAApB,CAJiB;AAK3BmH,iBAAK,EAAE,QAAK5H,EAAL,CAAQtC,OAAR,CAAgB,EAAhB,EAAoB,CAAC,0DAAW+C,QAAZ,EAAsB,0DAAWmH,KAAjC,CAApB,CALoB;AAM3BC,iBAAK,EAAE,QAAK7H,EAAL,CAAQtC,OAAR,CAAgB,EAAhB,EAAoB,EAApB,CANoB;AAO3BoK,mBAAO,EAAE,QAAK9H,EAAL,CAAQtC,OAAR,CAAgB,EAAhB,EAAoB,EAApB;AAPkB,WAAd,CAAf;AAFmC;AAWpC;;;;qCAEO,CAAW;;;qCAER;AACT,mBAAO;AACLwH,kBAAI,EAAE,KAAKjI,OAAL,CAAaM,QAAb,CAAsB2H,IAAtB,CAA2BlJ,KAD5B;AAELyL,qBAAO,EAAE,KAAKxK,OAAL,CAAaM,QAAb,CAAsBkK,OAAtB,CAA8BzL,KAFlC;AAGL0L,gBAAE,EAAE,KAAKzK,OAAL,CAAaM,QAAb,CAAsBmK,EAAtB,CAAyB1L,KAHxB;AAIL2L,sBAAQ,EAAE,KAAK1K,OAAL,CAAaM,QAAb,CAAsBoK,QAAtB,CAA+B3L,KAJpC;AAKL4L,mBAAK,EAAE,KAAK3K,OAAL,CAAaM,QAAb,CAAsBqK,KAAtB,CAA4B5L,KAL9B;AAML6L,mBAAK,EAAE,KAAK5K,OAAL,CAAaM,QAAb,CAAsBsK,KAAtB,CAA4B7L,KAN9B;AAOL8L,qBAAO,EAAE,KAAK7K,OAAL,CAAaM,QAAb,CAAsBuK,OAAtB,CAA8B9L;AAPlC,aAAP;AASD;;;;QA3BqC,0G;;;yBAA3BwL,kB,EAAkB,2H;AAAA,O;;;cAAlBA,kB;AAAkB,uC;AAAA,4F;AAAA,iB;AAAA,gB;AAAA,0tB;AAAA;AAAA;ACX/B;;AACE;;AACE;;AACE;;AACE;;AACA;;AAGF;;AACF;;AAEA;;AACE;;AACE;;AACA;;AAGF;;AACF;;AAEA;;AACE;;AACE;;AACA;;AAGF;;AACF;;AAEA;;AACE;;AACE;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAMA;;AAIA;;AACA;;AAGA;;AAGA;;AAGA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AACA;;AAGF;;AACF;;AAEA;;AACE;;AACE;;AACA;;AAGF;;AACF;;AACF;;AACF;;;;;;AAjFqB;;AAAA;;AAIF;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;AAUT;;AAAA;;AAKA;;AAAA;;AAGS;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAQA;;AAAA;;AASA;;AAAA;;;;;;;;;wEDjENA,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACTzM,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKoB,U;;;;;;;;;;;;;;;;;;;;;;AEX/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAgBa8M,e;;;;;cAAAA;;;;2BAAAA,e;AAAe,S;AAAA,mBAFf,CAAC,oEAAD,EAAe,2DAAf,C;AAAyB,kBAF3B,CAAC,4DAAD,EAAe,oDAAf,EAA6B,qEAA7B,EAA+C,6EAA/C,CAE2B;;;;4HAEzBA,e,EAAe;AAAA,yBALX,wEAKW;AALO,oBACvB,4DADuB,EACT,oDADS,EACK,qEADL,EACuB,6EADvB,CAKP;AAJ+C,oBAC/D,wEAD+D;AAI/C,S;AAHE,O;;;;;wEAGjBA,e,EAAe;gBAN3B,sDAM2B;iBANlB;AACRpD,wBAAY,EAAE,CAAC,wEAAD,CADN;AAERC,mBAAO,EAAE,CAAC,4DAAD,EAAe,oDAAf,EAA6B,qEAA7B,EAA+C,6EAA/C,CAFD;AAGRC,mBAAO,EAAE,CAAC,wEAAD,CAHD;AAIRmC,qBAAS,EAAE,CAAC,oEAAD,EAAe,2DAAf;AAJH,W;AAMkB,U;;;;;;;;;;;;;;;;;;ACf5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;;AAEA;;;AACO,eAASgB,QAAT,CAAkBtK,OAAlB,EAA0C;AAC/C,YAAMuK,SAAS,GAAG,UAAlB;;AAEA,YAAIvK,OAAO,IAAIA,OAAO,CAAC1B,KAAvB,EAA8B;AAC5B,cAAMkM,GAAG,GAAGC,WAAW,CAACzK,OAAO,CAAC1B,KAAT,CAAvB;AACA,iBAAQkM,GAAG,IAAI,CAAP,IAAYA,GAAG,GAAG,EAAlB,uBAA0BD,SAA1B,EAAsC,IAAtC,IAA+C,IAAvD;AACD;;AACD,eAAO,IAAP;AACD;AAED;;;AACO,eAASG,MAAT,CAAgB1K,OAAhB,EAAwC;AAC7C,YAAMuK,SAAS,GAAG,QAAlB;;AAEA,YAAIvK,OAAO,IAAIA,OAAO,CAAC1B,KAAvB,EAA8B;AAC5B,cAAM2L,QAAQ,GAAGjK,OAAO,CAAC1B,KAAzB;AACA,iBAAO2H,IAAI,CAAC0E,GAAL,KAAaV,QAAQ,CAAC/D,OAAT,EAAb,GAAkC,CAAlC,uBAAyCqE,SAAzC,EAAqD,IAArD,IAA8D,IAArE;AACD;;AACD,eAAO,IAAP;AACD;AAED;;;;;;;AAKA,eAASE,WAAT,CAAqBR,QAArB,EAAmC;AACjC,YAAMW,QAAQ,GAAG3E,IAAI,CAAC0E,GAAL,KAAaV,QAAQ,CAAC/D,OAAT,EAA9B;;AACA,YAAG0E,QAAQ,GAAG,CAAd,EAAiB;AACf,iBAAO,CAAC,CAAR;AACD;;AACD,YAAMC,OAAO,GAAG,IAAI5E,IAAJ,CAAS2E,QAAT,CAAhB,CALiC,CAKG;;AACpC,eAAOzL,IAAI,CAAC2L,GAAL,CAASD,OAAO,CAACE,cAAR,KAA2B,IAApC,CAAP;AACD;;;;;;;;;;;;;;;;;ACtCD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKQ;;AAAoE;;AAAc;;AAAQ;;AAAS;;AAAU;;;;;;AAO7G;;AACE;;AAAgC;;AAAQ;;AAAS;;AACnD;;;;;;AACA;;AAAsE;;AAA8B;;;;UDP/FC,Y;AAMX,8BACU1I,EADV,EACyB;AAAA;;AAAf,eAAAA,EAAA,GAAAA,EAAA;AAHA,eAAA2I,UAAA,GAAa,IAAI,0DAAJ,EAAb;AAKR,eAAK1L,OAAL,GAAe,KAAK+C,EAAL,CAAQQ,KAAR,CAAc;AAC3BoI,kBAAM,EAAE,KAAK5I,EAAL,CAAQtC,OAAR,CAAgB,EAAhB,EAAoB,CAAC,0DAAW+C,QAAZ,CAApB,CADmB;AAE3BtC,oBAAQ,EAAE,KAAK6B,EAAL,CAAQtC,OAAR,CAAgB,EAAhB,EAAoB,CAAC,0DAAW+C,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWC,SAAX,CAAqB,EAArB,CAA/C,CAApB;AAFiB,WAAd,CAAf;AAID;;;;qCAEU,CAAE;;;kCAEL;AACN,iBAAKgI,UAAL,CAAgBE,IAAhB,CAAqB;AAAC3K,sBAAQ,EAAE,KAAKjB,OAAL,CAAajB,KAAb,CAAmB4M,MAA9B;AAAsCzK,sBAAQ,EAAE,KAAKlB,OAAL,CAAajB,KAAb,CAAmBmC;AAAnE,aAArB;AACD;;;;;;;yBAnBUuK,Y,EAAY,2H;AAAA,O;;;cAAZA,Y;AAAY,gC;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,wU;AAAA;AAAA;ACRzB;;AACE;;AACE;;AACE;;AACE;;AACA;;AACF;;AACF;;AACA;;AACE;;AACE;;AACA;;AAAU;;AAAiB;;AAC3B;;AAGA;;AACF;;AACF;;AACA;;AACI;;AAAoF;AAAA,qBAAS,IAAApK,KAAA,EAAT;AAAgB,aAAhB;;AAAkB;;AAAK;;AAC/G;;AACF;;AACF;;;;AArBqB;;AAAA;;AAIF;;AAAA;;AAOA;;AAAA;;AAGA;;AAAA;;AAI+B;;AAAA;;;;;;;;;wEDXrCoK,Y,EAAY;gBALxB,uDAKwB;iBALd;AACT3N,oBAAQ,EAAE,SADD;AAETC,uBAAW,EAAE,sBAFJ;AAGTC,qBAAS,EAAE,CAAC,sBAAD;AAHF,W;AAKc,U;;;;;AAIb0N,oBAAU;kBAAnB;AAAmB;;;;;;;;;;;;;;;;;;;AEZtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACSE;;AAA6E;AAAA;;AAAA;;AAAA;AAAA;;AAAkC;;;;;;AAApE,wFAAa,SAAb,EAAa,cAAb;;;;UDgBhCG,a;AAYX,+BAAoBC,QAApB,EAAwD;AAAA;;AAApC,eAAAA,QAAA,GAAAA,QAAA;AAXV,eAAAC,OAAA,GAAU,CAAV;AAKV,eAAA5H,IAAA,GAAO,EAAP;AAIU,eAAA6H,YAAA,GAAe,IAAI,0DAAJ,EAAf;AAGT;;;;qCAEO;AACN,iBAAKC,IAAL,GAAY,CAAZ;AACD;;;wCAEa;AACZ,gBAAI,KAAKC,SAAT,EAAoB;AAClB,mBAAKA,SAAL,CAAeC,KAAf;AACD;AACF;;;4CAEc;AAAA;;AACb7G,sBAAU,CAAC,YAAM;AACf,qBAAI,CAAC8G,aAAL;AACD,aAFS,EAEP,CAFO,CAAV;AAGD;;;0CAEe;AAEd,iBAAKF,SAAL,CAAeC,KAAf;AACA,gBAAIE,OAAJ;;AACA,oBAAQ,KAAKJ,IAAb;AACE,mBAAK,CAAL;AACEI,uBAAO,GAAG,KAAKP,QAAL,CAAcQ,uBAAd,CAAsC,yFAAtC,CAAV;AACA;;AACF,mBAAK,CAAL;AACED,uBAAO,GAAG,KAAKP,QAAL,CAAcQ,uBAAd,CAAsC,yFAAtC,CAAV;AACA;;AACF,mBAAK,CAAL;AACED,uBAAO,GAAG,KAAKP,QAAL,CAAcQ,uBAAd,CAAsC,yFAAtC,CAAV;AACA;;AACF,mBAAK,CAAL;AACA;AACED,uBAAO,GAAG,KAAKP,QAAL,CAAcQ,uBAAd,CAAsC,yFAAtC,CAAV;AACA;AAbJ;;AAeA,iBAAKC,YAAL,GAAoB,KAAKL,SAAL,CAAeM,eAAf,CAA+BH,OAA/B,CAApB;;AACA,gBAAI,KAAKJ,IAAL,KAAc,KAAKF,OAAvB,EAAgC;AAC7B,mBAAKQ,YAAL,CAAkEE,QAAlE,CAA2EtI,IAA3E,GAAkF,KAAKA,IAAvF;AACF;AAEF;;;kCAEO;AACN,iBAAK6H,YAAL,CAAkBjK,IAAlB;AACD;;;qCAKU2K,E,EAAY;AACrB,gBAAI,CAAC,KAAKH,YAAL,CAAkBE,QAAlB,CAA2BE,QAA3B,EAAL,EAA4C;AAC1C;AACD,aAHoB,CAIrB;;;AACA,iBAAKxI,IAAL,GAAY,MAAH,OAAG,CAAH,kBAAO,KAAKA,IAAZ,CAAG,EAAkB,KAAKoI,YAAL,CAAkBE,QAAlB,CAA2BG,QAA3B,EAAlB,CAAZ;AAEA,iBAAKC,OAAL,CAAaH,EAAb;AACA,iBAAKN,aAAL;AACD;;;kCAEOM,E,EAAY;AAClB,gBAAIA,EAAE,GAAG,CAAT,EAAY;AACV,mBAAKT,IAAL,GAAY,CAAZ;AACD,aAFD,MAEO,IAAIS,EAAE,GAAG,KAAKX,OAAd,EAAwB;AAC7B,mBAAKE,IAAL,GAAY,KAAKF,OAAjB;AACD,aAFM,MAEA;AACL,mBAAKE,IAAL,GAAYS,EAAZ;AACD;AACF;;;;;;;yBAnFUb,a,EAAa,uI;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA;AAAA;iFAQK,8D;;;;;;;;;;;;;;;;;ACjC/B;;AACE;;AACE;;AAEF;;AACA;;AACA;;AACE;;AACF;;AACA;;AACA;;AACE;;AAAmC;AAAA,qBAAS,IAAAxK,KAAA,EAAT;AAAgB,aAAhB;;AACjC;;AACF;;AACF;;AACF;;;;AAbwD;;AAAA;;AAOlC;;AAAA;;;;;;;;;wEDgBTwK,a,EAAa;gBALzB,uDAKyB;iBALf;AACT/N,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,uBAFJ;AAGTC,qBAAS,EAAE,CAAC,uBAAD;AAHF,W;AAKe,U;;;;;AAQyBkO,mBAAS;kBAAzD,uDAAyD;mBAA/C,Q,EAAU;AAAEY,kBAAI,EAAE;AAAR,a;AAAqC,Y;AAEhDd,sBAAY;kBAArB;AAAqB;;;;;;;;;;;;;;;;;;;AEnCxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACQI;;AAGE;;AAAS;;AAAQ;;AAAY;;AAC/B;;;;;;AAWA;;AAOE;;AAAgC;;AAAQ;;AAAS;;AACnD;;;;;;AACA;;AAGE;;AACF;;;;UD1BSe,kB;;;;;AAOX,oCAAoBhK,EAApB,EAAqC;AAAA;;AAAA;;AACnC;AADkB,kBAAAA,EAAA,GAAAA,EAAA;AALV,kBAAAiK,YAAA,GAAe,IAAI,0DAAJ,EAAf;AAOR,kBAAKhN,OAAL,GAAe,QAAK+C,EAAL,CAAQQ,KAAR,CAAc;AAC3BtC,oBAAQ,EAAE,QAAK8B,EAAL,CAAQtC,OAAR,CAAgB,EAAhB,EAAoB,CAAC,0DAAW+C,QAAZ,CAApB,CADiB;AAE3BtC,oBAAQ,EAAE,QAAK6B,EAAL,CAAQtC,OAAR,CAAgB,EAAhB,EAAoB,CAC5B,0DAAW+C,QADiB,EAE5B,0DAAWC,SAAX,CAAqB,CAArB,CAF4B,EAG5B,0DAAWC,SAAX,CAAqB,EAArB,CAH4B,CAApB;AAFiB,WAAd,CAAf;AAFmC;AAUpC;;;;qCAEO,CAAW;;;qCAER;AACT,mBAAO;AACLzC,sBAAQ,EAAE,KAAKjB,OAAL,CAAaM,QAAb,CAAsBW,QAAtB,CAA+BlC,KADpC;AAELmC,sBAAQ,EAAE,KAAKlB,OAAL,CAAaM,QAAb,CAAsBY,QAAtB,CAA+BnC;AAFpC,aAAP;AAID;;;;QA1BqC,0G;;;yBAA3BgO,kB,EAAkB,2H;AAAA,O;;;cAAlBA,kB;AAAkB,uC;AAAA;AAAA;AAAA,S;AAAA,4F;AAAA,iB;AAAA,e;AAAA,2P;AAAA;AAAA;ACV/B;;AACA;;AACE;;AACE;;AAKA;;AAKF;;AACF;;AACA;;AACE;;AACE;;AAMA;;AASA;;AAKF;;AACF;;AACA;;;;AAvCmB;;AASb;;AAAA;;AAeA;;AAAA;;AASA;;AAAA;;;;;;;;;wEDvBOA,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACTjP,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKoB,U;;;;;AAEnBgP,sBAAY;kBAArB;AAAqB;;;;;;;;;;;;;;;;;;;AEXxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWaC,mB;AAGX,qCAAoBlF,UAApB,EAA4C;AAAA;;AAAxB,eAAAA,UAAA,GAAAA,UAAA;AAClB,eAAK3B,kBAAL,GAA0B,IAAI,oDAAJ,CAAoB;AAC5ChI,gBAAI,EAAE,4EADsC;AAE5CiI,mBAAO,EAAE,EAFmC;AAG5C4B,gBAAI,EAAE,EAHsC;AAI5CiF,wBAAY,EAAE;AAJ8B,WAApB,CAA1B;AAMD;;;;mCAEQ7G,O,EAAe;AAAA;;AACtB;AACA,gBAAI,KAAKD,kBAAL,CAAwBrH,KAAxB,CAA8BsH,OAAlC,EAA2C;AACzC,qBAAO,KAAKD,kBAAZ;AACD;;AAED,gBAAI,CAACC,OAAL,EAAc;AACZ,qBAAO,gDAAG,IAAI,mEAAJ,CAAoBA,OAApB,CAAH,CAAP;AACD;;AAED,mBAAO,KAAK0B,UAAL,CACJrH,GADI,6BACgD2F,OADhD,GAEJ/E,IAFI,CAGH,2DAAI,UAAAkF,MAAM,EAAI;AACZ,kBAAIA,MAAM,IAAIA,MAAM,CAACpC,OAArB,EAA8B;AAC5B,oBAAM+I,YAAY,GAAG,MAAH,OAAG,CAAH;AAAK/O,sBAAI,EAAE;AAAX,iBAAG,EAA8BoI,MAAM,CAACgC,IAArC,CAArB;;AACA,uBAAI,CAACpC,kBAAL,CAAwBrE,IAAxB,CAA6BoL,YAA7B;;AACA,uBAAOA,YAAP;AACD,eAJD,MAIO;AACL,sBAAM;AAAE/O,sBAAI,EAAE,gEAAR;AAAsBE,sBAAI,EAAE,mBAA5B;AAAiDC,yBAAO;AAAxD,iBAAN;AACD;AACF,aARD,CAHG,CAAP;AAaD;;;;;;;yBAnCU0O,mB,EAAmB,uH;AAAA,O;;;eAAnBA,mB;AAAmB,iBAAnBA,mBAAmB,K;AAAA,oBAFlB;;;;;wEAEDA,mB,EAAmB;gBAH/B,wDAG+B;iBAHpB;AACV9N,sBAAU,EAAE;AADF,W;AAGoB,U;;;;;;;;;;;;;;;;;;;;;;ACZhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaiO,S;AAEX,2BAAoBzL,MAApB,EAA4C0L,UAA5C,EAAmE;AAAA;;AAA/C,eAAA1L,MAAA,GAAAA,MAAA;AAAwB,eAAA0L,UAAA,GAAAA,UAAA;AAA0B;;;;wCAE3D;AACT,gBAAI,CAAC,KAAKA,UAAL,CAAgB7L,KAArB,EAA4B;AAC1B,mBAAKG,MAAL,CAAYK,QAAZ,CAAqB,CAAC,yEAAYX,KAAb,CAArB;AACA,qBAAO,KAAP;AACD;;AACD,mBAAO,IAAP;AACD;;;;;;;yBAVU+L,S,EAAS,8G,EAAA,8I;AAAA,O;;;eAATA,S;AAAS,iBAATA,SAAS,K;AAAA,oBAFR;;;;;wEAEDA,S,EAAS;gBAHrB,wDAGqB;iBAHV;AACVjO,sBAAU,EAAE;AADF,W;AAGU,U;;;;;;;;;;;;;;;;;;;;;;;;ACRtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQamO,Y;AAEX,8BAAoB3L,MAApB,EAA4C0L,UAA5C,EAAmE;AAAA;;AAA/C,eAAA1L,MAAA,GAAAA,MAAA;AAAwB,eAAA0L,UAAA,GAAAA,UAAA;AAA0B;;;;wCAE3D;AACT,gBAAI,KAAKA,UAAL,CAAgB7L,KAApB,EAA2B;AACzB,mBAAKG,MAAL,CAAYK,QAAZ,CAAqB,CAAC,yEAAYC,IAAb,CAArB;AACA,qBAAO,KAAP;AACD;;AACD,mBAAO,IAAP;AACD;;;;;;;yBAVUqL,Y,EAAY,8G,EAAA,8I;AAAA,O;;;eAAZA,Y;AAAY,iBAAZA,YAAY,K;AAAA,oBAFX;;;;;wEAEDA,Y,EAAY;gBAHxB,wDAGwB;iBAHb;AACVnO,sBAAU,EAAE;AADF,W;AAGa,U;;;;;;;;;;;;;;;;;;;;;;;;ACRzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACaI;;AAAyC;;AAAmB;;;;;;AAC5D;;AAAwC;;AAA2B;;;;;;AACnE;;AAAyC;;AAAmB;;;;;;;;;;UDLnDoO,oB;AAKX,sCAAoB/P,cAApB,EAA4DwF,YAA5D,EAAwF;AAAA;;AAApE,eAAAxF,cAAA,GAAAA,cAAA;AAAwC,eAAAwF,YAAA,GAAAA,YAAA;AAHnD,eAAA/E,SAAA,GAAY,oEAAZ;AACF,eAAAuP,SAAA,GAAY,qEAAUxF,GAAtB;AAEoF;;;;qCAEnF;AACN,iBAAKxK,cAAL,CAAoBG,YAApB,CAAiC,OAAjC;AACD;;;sCAEW8P,gB,EAA6B;AACvC,iBAAKD,SAAL,GAAiBC,gBAAjB;AACD;;;;;;;yBAbUF,oB,EAAoB,qJ,EAAA,gK;AAAA,O;;;cAApBA,oB;AAAoB,wC;AAAA,iB;AAAA,gB;AAAA,iS;AAAA;AAAA;ACVjC;;AACE;;AAAwB;AAAA,qBAAS,IAAAG,WAAA,mBAAT;AAAmC,aAAnC;;AACtB;;AACF;;AACA;;AAAwB;AAAA,qBAAS,IAAAA,WAAA,kBAAT;AAAkC,aAAlC;;AACtB;;AACF;;AACA;;AAAwB;AAAA,qBAAS,IAAAA,WAAA,mBAAT;AAAmC,aAAnC;;AACtB;;AACF;;AACF;;AACA;;AACE;;AACE;;AACA;;AACA;;AACF;;AACF;;;;AAhB+D;;AAAA;;AAGiB;;AAAA;;AAGjB;;AAAA;;AAMtD;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;wEDLIH,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACTzP,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKsB,U;;;;;;;;;;;;;;;;;;;;;;;;AEVjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGA,UAAY2P,aAAZ;;AAAA,iBAAYA,aAAZ,EAAyB;AACvB;AACA;AACA;AACD,OAJD,EAAYA,aAAa,KAAbA,aAAa,MAAzB;AAMA;;;UAIaC,a;AAIX,iCAAc;AAAA;;AACZ,eAAKxE,OAAL,GAAe,IAAI,oDAAJ,CAAoBuE,aAAa,CAACE,OAAlC,CAAf;AACD;;;;uCAEYhK,M,EAAuB;AAClC,iBAAKuF,OAAL,CAAarH,IAAb,CAAkB8B,MAAlB;AACD;;;;;;;yBAVU+J,a;AAAa,O;;;eAAbA,a;AAAa,iBAAbA,aAAa,K;AAAA,oBAFZ;;;;;wEAEDA,a,EAAa;gBAHzB,wDAGyB;iBAHd;AACVzO,sBAAU,EAAE;AADF,W;AAGc,U;;;;;;;;;;;;;;;;;;;;ACb1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOa2O,sB;AAOX,0CAAc;AAAA;;AADJ,eAAAC,UAAA,GAAa,IAAI,0DAAJ,EAAb;AACO;;;;qCAET,CACP;;;qCAEU;AACT,iBAAKA,UAAL,CAAgBnC,IAAhB,CAAqB,KAAKK,IAAL,GAAY,CAAjC;AACD;;;qCAEU;AACT,iBAAK8B,UAAL,CAAgBnC,IAAhB,CAAqB,KAAKK,IAAL,GAAY,CAAjC;AACD;;;;;;;yBAlBU6B,sB;AAAsB,O;;;cAAtBA,sB;AAAsB,2C;AAAA;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,iM;AAAA;AAAA;ACPnC;;AACE;;AAA8E;AAAA,qBAAS,IAAAE,QAAA,EAAT;AAAmB,aAAnB;;AAAqB;;AAAI;;AACvG;;AAAoF;AAAA,qBAAS,IAAAC,QAAA,EAAT;AAAmB,aAAnB;;AAAqB;;AAAI;;AAC/G;;;;AAFyD;;AAAA;;AACA;;AAAA;;;;;;;;;wEDK5CH,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACThQ,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD;AAHF,W;AAKwB,U;;;AAGxBiO,cAAI,EAAE,CAAF;kBAAZ;AAAY,WAAE,C;AACNF,iBAAO,EAAE,CAAF;kBAAf;AAAe,WAAE,C;AAERgC,oBAAU;kBAAnB;AAAmB;;;;;;;;;;;;;;;;;;;AEbtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;UAMaG,gB;;;;;;;;AAEX;;;oCAGU7O,M,EAA0B8O,Q,EAAqC;AACvE,gBAAI,CAAC7O,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAL,EAA4B;AAC1BG,qBAAO,CAACC,KAAR,CAAc,4EAAd;AACAD,qBAAO,CAACC,KAAR,CAAcJ,MAAd;AACA,qBAAO,CAAC,CAAR;AACD;;AACD,gBAAIA,MAAM,CAAC+O,MAAP,KAAkB,CAAlB,IAAuB/O,MAAM,CAACK,IAAP,CAAY,UAAAC,CAAC;AAAA,qBAAI,EAAE,OAAOA,CAAP,KAAa,QAAf,CAAJ;AAAA,aAAb,CAA3B,EAAuE;AACrEH,qBAAO,CAACC,KAAR,CAAc,mEAAd;AACAD,qBAAO,CAACC,KAAR,CAAcJ,MAAd;AACA,qBAAO,CAAC,CAAR;AACD;;AACD,gBAAMgP,KAAK,GAAGF,QAAQ,IAAI,IAA1B;AACA,mBAAOE,KAAK,GAAGhP,MAAM,CAAC,CAAD,CAAT,GAAeA,MAAM,CAAC,CAAD,CAAjC;AACD;;;;;;;yBAlBU6O,gB;AAAgB,O;;;;cAAhBA,gB;AAAgB;;;;;wEAAhBA,gB,EAAgB;gBAH5B,kDAG4B;iBAHvB;AACJ5P,gBAAI,EAAE;AADF,W;AAGuB,U;;;;;;;;;;;;;;;;;;ACR7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;UAQagQ,kB;AAOX,sCAAc;AAAA;;AAFJ,eAAAC,YAAA,GAAmC,IAAK,0DAAL,EAAnC;AAEO;;;;qCAET,CACP;;;uCAES;AACR,iBAAKA,YAAL,CAAkBxM,IAAlB;AACD;;;;;;;yBAdUuM,kB;AAAkB,O;;;cAAlBA,kB;AAAkB,uC;AAAA;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,2N;AAAA;AAAA;ACV/B;;AAA6D;AAAA,qBAAS,IAAAzJ,UAAA,EAAT;AAAqB,aAArB;;AAC3D;;AACE;;AAAmE;;AAAQ;;AAC7E;;AACA;;AACE;;AAAgC;;AAAS;;AAC3C;;AACF;;;;AALuD;;AAAA;;AAAgB;;AAAA;;AAGnC;;AAAA;;;;;;;;;wEDKvByJ,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACTxQ,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKoB,U;;;AAEpB2G,eAAK,EAAE,CAAF;kBAAb;AAAa,WAAE,C;AACPC,cAAI,EAAE,CAAF;kBAAZ;AAAY,WAAE,C;AAEL2J,sBAAY,EAAE,CAAF;kBAArB;AAAqB,WAAE;;;;;;;;;;;;;;;;;;;AEX1B;;AAAA,eAASC,kBAAT,CAA+BC,OAA/B,EAAyC;AACvC,YAAIjI,MAAM,GAAO,EAAjB;AACA,eAAOA,MAAP;AACD;;;;;;;;;;;;;;;;;ACPD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAuBakI,U;AACX,4BAAYC,eAAZ,EAA8CC,YAA9C,EAA0E;AAAA;;AACxE;AACAD,yBAAe,CAACE,aAAhB,CACED,YAAY,CAACE,8BAAb,CAA4C,qBAA5C,CADF,EAFwE,CAKxE;AACD;;;;oCAEa;AACZ,mBAAO;AACLC,sBAAQ,EAAEL,UADL;AAEL3E,uBAAS,EAAE,CACT,kFADS,EAET,wEAFS,EAGT,0EAHS,EAIT,yEAJS,EAKT,oEALS,EAMT,2EANS,EAOT,sEAPS,EAQT,mFARS;AAFN,aAAP;AAaD;;;;;;;cAvBU2E;;;;2BAAAA,U,EAAU,8H,EAAA,+H;AAAA,S;AAAA,mBAJV;AACT;AADS,S;AAEV,kBAJQ,CAAC,4DAAD,EAAe,qEAAf,EAAiC,oEAAjC,CAIR,EAHS,oEAGT;;;;4HAEUA,U,EAAU;AAAA,oBANX,4DAMW,EANG,qEAMH,EANqB,oEAMrB;AANkC,oBAC7C,oEAD6C;AAMlC,S;AALE,O;;;;;wEAKZA,U,EAAU;gBARtB,sDAQsB;iBARb;AACRhH,wBAAY,EAAE,EADN;AAERC,mBAAO,EAAE,CAAC,4DAAD,EAAe,qEAAf,EAAiC,oEAAjC,CAFD;AAGRC,mBAAO,EAAE,CAAC,oEAAD,CAHD;AAIRmC,qBAAS,EAAE;AACT;AADS;AAJH,W;AAQa,U;;;;;;;;;;;;;;;;;;;;;;;;ACvBvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaiF,mB;AAaX,uCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBAhBUA,mB;AAAmB,O;;;cAAnBA,mB;AAAmB,wC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,yS;AAAA;AAAA;ACPhC;;AAAkB;;AAAS;;AAC3B;;AACE;;AACE;;AAA+B;;AAAW;;AAC1C;;AAA8B;;AAAK;;AACnC;;AAA6B;;AAAgB;;AAC7C;;AAA8B;;AAAU;;AAC1C;;AACA;;AACE;;AAA+B;;AAAY;;AAC3C;;AAA8B;;AAAQ;;AACtC;;AAA6B;;AAAa;;AAC1C;;AAA8B;;AAAW;;AAC3C;;AACF;;;;AAdkB;;AAAA;;AASiB;;AAAA;;AACD;;AAAA;;AACD;;AAAA;;AACC;;AAAA;;;;;;;;wEDLrBA,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACTlR,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKqB,U;;;AAGrBiR,eAAK;kBAAb;AAAa,Y;AAELC,kBAAQ,EAAE,CAAF;kBAAhB;AAAgB,WAAE,C;AAEV5Q,cAAI,EAAE,CAAF;kBAAZ;AAAY,WAAE,C;AAEN6Q,mBAAS,EAAE,CAAF;kBAAjB;AAAiB,WAAE,C;AAEXtE,iBAAO,EAAE,CAAF;kBAAf;AAAe,WAAE;;;;;;;;;;;;;;;;;;;AElBpB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACSQ;;AACE;;AAAK;;AAAQ;;AAAY;;AAC3B;;;;;;AAOA;;AACE;;AAAO;;AAAQ;;AAAY;;AAC7B;;;;UDRKuE,kB;;;;;AAKX,oCAAoBrM,EAApB,EAAqC;AAAA;;AAAA;;AACnC;AADkB,kBAAAA,EAAA,GAAAA,EAAA;AAJX,kBAAA2C,QAAA,GAAW,8EAAX;AAED,kBAAAN,aAAA,GAAgC,EAAhC;AAIN,kBAAKpF,OAAL,GAAe,QAAK+C,EAAL,CAAQQ,KAAR,CAAc;AAC3B8L,oBAAQ,EAAE,QAAKtM,EAAL,CAAQtC,OAAR,CAAgB,+EAAS6O,QAAzB,EAAmC,EAAnC,CADiB;AAE3BC,gBAAI,EAAE,QAAKxM,EAAL,CAAQtC,OAAR,CAAgB;AAAE1B,mBAAK,EAAE,EAAT;AAAayQ,sBAAQ,EAAE;AAAvB,aAAhB,EAA+C,CAAC,0DAAWhM,QAAZ,CAA/C,CAFqB;AAG3BiM,kBAAM,EAAE,QAAK1M,EAAL,CAAQtC,OAAR,CAAgB;AAAE1B,mBAAK,EAAE,EAAT;AAAayQ,sBAAQ,EAAE;AAAvB,aAAhB,EAA+C,CAAC,0DAAWhM,QAAZ,CAA/C;AAHmB,WAAd,CAAf;AAFmC;AAOpC;;;;qCAEU;AAAA;;AACT,iBAAK4B,aAAL,CAAmBC,IAAnB,CAAwB,KAAKrF,OAAL,CAAaU,GAAb,CAAiB,UAAjB,EAA6BgP,YAA7B,CAA0C9L,SAA1C,CAAoD,UAAAyL,QAAQ,EAAI;AACpF,kBAAKA,QAAQ,KAAK,+EAASC,QAA3B,EAAuC;AACrC,uBAAI,CAACtP,OAAL,CAAaU,GAAb,CAAiB,MAAjB,EAAyBiP,OAAzB;;AACA,uBAAI,CAAC3P,OAAL,CAAaU,GAAb,CAAiB,QAAjB,EAA2BiP,OAA3B;AACD,eAHD,MAGO;AACL,uBAAI,CAAC3P,OAAL,CAAaU,GAAb,CAAiB,MAAjB,EAAyBkP,MAAzB;;AACA,uBAAI,CAAC5P,OAAL,CAAaU,GAAb,CAAiB,QAAjB,EAA2BkP,MAA3B;AACD;AACJ,aARuB,CAAxB;AASD;;;wCAEa;AACZ,iBAAKxK,aAAL,CAAmB7E,OAAnB,CAA2B,UAAAgF,GAAG;AAAA,qBAAIA,GAAG,CAACC,WAAJ,EAAJ;AAAA,aAA9B;AACD;;;qCAEU;AACT,mBAAO;AACL6J,sBAAQ,EAAE,KAAKrP,OAAL,CAAaM,QAAb,CAAsB+O,QAAtB,CAA+BtQ,KADpC;AAELwQ,kBAAI,EAAE,KAAKvP,OAAL,CAAaM,QAAb,CAAsBiP,IAAtB,CAA2BxQ,KAF5B;AAGL0Q,oBAAM,EAAE,KAAKzP,OAAL,CAAaM,QAAb,CAAsBmP,MAAtB,CAA6B1Q;AAHhC,aAAP;AAKD;;;;QApCqC,0G;;;yBAA3BqQ,kB,EAAkB,2H;AAAA,O;;;cAAlBA,kB;AAAkB,uC;AAAA,4F;AAAA,iB;AAAA,e;AAAA,0U;AAAA;AAAA;ACZ/B;;AACE;;AACE;;AAA+C;;AAAoB;;AACnE;;AAA+C;;AAAqB;;AACtE;;AACA;;AACE;;AACE;;AACE;;AACA;;AAGF;;AACF;;AAEA;;AACE;;AACE;;AACA;;AAGF;;AACF;;AACF;;AACF;;;;AAxBmB;;AAEG;;AAAA;;AACA;;AAAA;;AAMH;;AAAA;;AASA;;AAAA;;;;;;;;;wEDNNA,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACTtR,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKoB,U;;;;;;;;;;;;;;;;;;;;;;AEZ/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWa6R,kB;AAWX,oCAAoBC,KAApB,EAAmD5G,aAAnD,EAAiF;AAAA;;AAA7D,eAAA4G,KAAA,GAAAA,KAAA;AAA+B,eAAA5G,aAAA,GAAAA,aAAA;AACjD,eAAK6G,WAAL,GAAmB,IAAI,oDAAJ,CAAoB,yFAApB,CAAnB;AACA,eAAKC,QAAL,GAAgB,IAAI,oDAAJ,CAAoB,iFAApB,CAAhB;AACA,eAAKC,MAAL,GAAc,IAAI,oDAAJ,CAAoBjR,SAApB,CAAd;AACA,eAAKkK,aAAL,CAAmBE,OAAnB,CAA2BrH,IAA3B,CAAgC,2DAAcmO,MAA9C;AACD;;;;qCAEU;AAAA;;AACT,iBAAKJ,KAAL,CAAWK,WAAX,CACC7O,IADD,EAEE;AACA,gFAAa,GAAb,CAHF,EAIE,iEAAU,UAAAH,MAAM,EAAI;AAClB,kBAAKA,MAAM,CAAC8F,UAAZ,EAAwB;AACtB,uBAAI,CAAC8I,WAAL,CAAiBhO,IAAjB,CAAsBZ,MAAM,CAAC8F,UAA7B;AACD;;AACD,kBAAK9F,MAAM,CAACmI,OAAZ,EAAsB;AACpB,uBAAI,CAAC0G,QAAL,CAAcjO,IAAd,CAAmBZ,MAAM,CAACmI,OAA1B;AACD;;AACD,kBAAKnI,MAAM,CAAC1B,KAAZ,EAAoB;AAClB,uBAAI,CAACwQ,MAAL,CAAYlO,IAAZ,CAAiBvD,IAAI,CAACM,KAAL,CAAWqC,MAAM,CAAC1B,KAAlB,CAAjB;AACD;;AACD,qBAAO,EAAP;AACD,aAXD,CAJF,EAiBCmE,SAjBD;AAkBD;;;;;;;yBArCUiM,kB,EAAkB,+H,EAAA,2H;AAAA,O;;;cAAlBA,kB;AAAkB,uC;AAAA,gB;AAAA,e;AAAA,uD;AAAA;AAAA;ACX/B;;;;;;;;;;AAAW,qKAAkC,SAAlC,EAAkC,6EAAlC,EAAkC,OAAlC,EAAkC,2EAAlC;;;;;;;;;;wEDWEA,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACT/R,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKoB,U;;;;;;;;;;;;;;;;;;;;;;;;AEA/B;AAAA;;;AAAA;AAAA;AAAA;;AAAO,UAAMoS,iBAAiB,GAAG,mBAA1B;;;;;;;;;;;;;;;;ACXP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACEI;;AAEE;AAAA;;AAAA;;AAAA;AAAA;;AACD;;;;;;;;AACD;;AAEE;AAAA;;AAAA;;AAAA;AAAA;;AACD;;;;ADNL,UAAKC,SAAL;;AAAA,iBAAKA,SAAL,EAAc;AACZ;AACA;AACD,OAHD,EAAKA,SAAS,KAATA,SAAS,MAAd;;UAUaC,kB;AAMX,oCAAoB9S,cAApB,EAAkD;AAAA;;AAA9B,eAAAA,cAAA,GAAAA,cAAA;AALX,eAAA6S,SAAA,GAAYA,SAAZ;AAGF,eAAAE,QAAA,GAAsBF,SAAS,CAAChP,KAAhC;AAEiD;;;;qCAEhD;AACN,iBAAK7D,cAAL,CAAoBG,YAApB,CAAiC,OAAjC;AACD;;;sCAEW;AACV6B,mBAAO,CAACgR,IAAR,CAAa,mBAAb;AACD;;;qCAEUD,Q,EAAqB;AAC9B,iBAAKA,QAAL,GAAgBA,QAAhB;AACD;;;;;;;yBAlBUD,kB,EAAkB,qJ;AAAA,O;;;cAAlBA,kB;AAAkB,uC;AAAA,gB;AAAA,e;AAAA,2hB;AAAA;AAAA;ACb/B;;AACE;;AACE;;AAIA;;AAIF;;AACA;;AAKE;;AAIE;AAAA,qBAAgB,IAAAG,SAAA,EAAhB;AAA2B,aAA3B;;AACD;;AACH;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;;;AAzBM;;AAAA;;AAIA;;AAAA;;;;;;;;;wEDMOH,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACTxS,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKoB,U;;;;;;;;;;;;;;;;;;;;;;AEb/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAWA,UAAM0S,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,uFAFb;AAGEC,gBAAQ,EAAE,CACR;AACEF,cAAI,EAAE,kDAAYrO,IADpB;AAEEwO,oBAAU,EAAE,QAFd;AAGEC,mBAAS,EAAE;AAHb,SADQ,EAMR;AACEJ,cAAI,EAAE,kDAAY1O,IADpB;AAEE2O,mBAAS,EAAE,2EAFb;AAGEI,qBAAW,EAAE,CAAC,yEAAD;AAHf,SANQ,EAWR;AACEL,cAAI,EAAE,kDAAYtP,KADpB;AAEEuP,mBAAS,EAAE,4FAFb;AAGEI,qBAAW,EAAE,CAAC,gFAAD;AAHf,SAXQ,EAgBR;AACEL,cAAI,EAAE,kDAAYxO,OADpB;AAEEyO,mBAAS,EAAE,uFAFb;AAGEI,qBAAW,EAAE,CAAC,yEAAD;AAHf,SAhBQ;AAHZ,OADqB,CAAvB;;UAiCaC,gB;;;;;cAAAA;;;;2BAAAA,gB;AAAgB,S;AAAA,kBAHlB,CAAC,6DAAahH,OAAb,CAAqByG,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;4HAAhBO,gB,EAAgB;AAAA;AAAA,oBAFjB,4DAEiB;AAAA,S;AAFL,O;;;;;wEAEXA,gB,EAAgB;gBAJ5B,sDAI4B;iBAJnB;AACRtJ,mBAAO,EAAE,CAAC,6DAAasC,OAAb,CAAqByG,MAArB,CAAD,CADD;AAER9I,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAImB,U;;;;;;;;;;;;;;;;;;AC5C7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAI,sEAAYhF,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyBsO,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,eAAI3R,OAAO,CAACC,KAAR,CAAc0R,GAAd,CAAJ;AAAA,OADZ;;;;;;;;;;;;;;;ACVA,eAASC,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDL,8BAAwB,CAAC/Q,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACA+Q,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAQ,YAAM,CAAChK,OAAP,GAAiBwJ,wBAAjB;AACAA,8BAAwB,CAAC7K,EAAzB,GAA8B,MAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWasL,e;AAiBX,iCAAoBhM,cAApB,EAA4DiM,gBAA5D,EAA6F;AAAA;;AAAzE,eAAAjM,cAAA,GAAAA,cAAA;AAAwC,eAAAiM,gBAAA,GAAAA,gBAAA;AAf5D;;AACS,eAAAC,cAAA,GAAiB,CAAE,6DAAcC,OAAhB,EAAyB,6DAAcC,MAAvC,CAAjB;AAET,eAAAC,aAAA,GAAiC,IAAjC;AASA;;AACA,eAAAC,cAAA,GAA2C,IAAI,oDAAJ,CAAoB,KAApB,CAA3C;AAEgG;;;;qCAErF,CAAG;AAEd;;;;6CACmB3Q,K,EAAe;AAAA;;AAChC,iBAAK4Q,OAAL,CAAaxC,MAAb,GAAsB,KAAtB;AACA,iBAAK/J,cAAL,CAAoBwM,iBAApB,CAAsC7Q,KAAtC,EAA6CoC,SAA7C,CAAuD,UAAA4C,MAAM,EAAI;AAC/D,kBAAIA,MAAM,CAACpI,IAAP,KAAgB,yDAApB,EAAkC;AAChC,uBAAI,CAAC0T,gBAAL,CAAsBQ,eAAtB;AACD,eAFD,MAEO;AACL,uBAAI,CAACF,OAAL,CAAaxC,MAAb,GAAsB,IAAtB;AACD;AAEF,aAPD;AAQD;;;yCAEc2C,O,EAA0B;AACvC,iBAAKC,gBAAL,GAAwBD,OAAxB;;AAEA,gBAAI,KAAKC,gBAAL,IAAyB,KAAKA,gBAAL,CAAsBpE,MAAtB,GAA+B,CAA5D,EAA+D;AAC7D,mBAAK8D,aAAL,GAAqB,KAAKM,gBAAL,CAAsB,CAAtB,CAArB;AACD;AACF;AAED;;;;uCACa3O,M,EAAiB;AAC5B,iBAAKsO,cAAL,CAAoBpQ,IAApB,CAAyB8B,MAAzB;AACD;;;;;;;yBA7CUgO,e,EAAe,4H,EAAA,2H;AAAA,O;;;cAAfA,e;AAAe,oC;AAAA;AAAA;sEAWf,wE,EAAqB,I;;;;;;;;;;;;;;ACrBlC;;;;AACE;;AAEE;AAAA;AAAA,eAA0B,cAA1B,EAA0B;AAAA,qBAEV,IAAAY,cAAA,QAFU;AAEY,aAFtC,EAA0B,aAA1B,EAA0B;AAAA,qBAGX,IAAAC,kBAAA,QAHW;AAGe,aAHzC,EAA0B,oBAA1B,EAA0B;AAAA,qBAIJ,IAAAC,YAAA,QAJI;AAIgB,aAJ1C;;AAMD;;AACH;;AAGA;;;;AACE;;AACA;;AAAwB;;AAA4B;;AACtD;;;;AAhBK;;AAGD;;AAAA,kGAA0B,SAA1B,EAA0B,kBAA1B,EAA0B,WAA1B,EAA0B,IAA1B;;AAUC;;AAAA;;;;;;;;;;wEDHQd,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACT/T,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE,0BAFJ;AAGTC,qBAAS,EAAE,CAAC,0BAAD;AAHF,W;AAKiB,U;;;;;;;AAY1BoU,iBAAO,EAAE,CAAF;kBADN,uDACM;mBADI,wE;AACJ,WAAE","file":"main-es5.eef2c4a2709ad6948c82.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { RoutingService } from 'src/app/core/services/routing.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  readonly buttonWidth = '400px';\n  readonly buttonHeight = '250px';\n\n  constructor(private routingService: RoutingService) { }\n\n  ngOnInit(): void {\n    this.routingService.updateHeader('Home');\n  }\n\n  gotoPayment() {\n    this.routingService.gotoPayment();\n  }\n\n  gotoMovements() {\n\n  }\n\n}\n","<div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-between start\">\n  <div fxFlex class=\"widget-container shadow-border\">\n    <app-big-button\n      class=\"button\"\n      label=\"Pagamento\"\n      icon=\"euro\"\n      (clickEmitter)=\"gotoPayment()\"\n    >\n    </app-big-button>\n  </div>\n\n  <div fxFlex class=\"widget-container shadow-border\">\n    <app-big-button\n      class=\"button\"\n      label=\"Info Conto\"\n      icon=\"info\"\n      (clickEmitter)=\"gotoPayment()\"\n    ></app-big-button>\n  </div>\n</div>\n\n<div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-between start\">\n  <div fxFlex class=\"widget-container shadow-border\">\n    <app-big-button\n    class=\"button\"\n    label=\"Ricarica\"\n    icon=\"publish\"\n    (clickEmitter)=\"gotoPayment()\"\n    ></app-big-button>\n  </div>\n\n  <div fxFlex class=\"widget-container shadow-border\">\n    <app-big-button\n      class=\"button\"\n      label=\"Movimenti\"\n      icon=\"account_balance_wallet\"\n      (clickEmitter)=\"gotoMovements()\"\n    ></app-big-button>\n  </div>\n</div>\n\n<div fxLayout class=\"footer\">\n  <div class=\"widget-container shadow-border spam-widget\">\n    <app-banner></app-banner>\n  </div>\n</div>\n","export enum LoginType {\n  pin= 'PIN',\n  qr= 'QR',\n  nfc= 'NFC',\n}\n","export interface CustomError extends Error {\n  type: string;\n}\n\nexport class WrongParamError implements CustomError {\n  readonly type = CUSTOM_ERROR;\n\n  name = '';\n  message = '';\n\n  constructor(param) {\n    this.name = 'Errore nei parametri';\n    this.message = JSON.stringify(param);\n  }\n}\n\nexport const CUSTOM_ERROR = 'CUSTOM_ERROR';\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n\n  constructor() { }\n\n  public getItem(name: string) {\n    const item = localStorage.getItem(name);\n    return JSON.parse(!item || item === 'undefined' ? null : item);\n  }\n\n  public setItem(name: string, value: any) {\n    if (value === undefined) {\n      localStorage.removeItem(name);\n    } else {\n      localStorage.setItem(name, JSON.stringify(value));\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isNumber } from 'util';\n\n/**\n * restituisce il minimo tra i due valori passati\n */\n@Pipe({\n  name: 'min'\n})\nexport class MinPipe implements PipeTransform {\n\n  transform(values: number[], ...args: unknown[]): number {\n    if (!Array.isArray(values)) {\n      console.error('MinPipe richiede la presenza di un array di numeri per funzionare');\n      console.error(values);\n      return -1;\n    }\n    if (values.some(n => !(typeof n === 'number'))) {\n      console.error('MinPipe richiede che l\\'array contenga valori numerici');\n      console.error(values);\n      return -1;\n    }\n    return Math.min(...values);\n  }\n\n}\n","export interface Cliente {\n  type: string;\n\n  id: string;\n  pin: string;\n  token: string;\n  nome: string;\n  budget: number;\n}\n\n\nexport const CLIENTE_TYPE = 'CLIENTE_TYPE';\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-abstract-join-part',\n  templateUrl: './abstract-join-part.component.html',\n  styleUrls: ['./abstract-join-part.component.scss']\n})\nexport abstract class AbstractJoinPartComponent implements OnInit {\n\n  /** controller del form */\n  formCrl: FormGroup;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  validate() {\n    if (this.formCrl.valid) {\n      return true;\n    } else {\n      this.validateAllFormFields(this.formCrl);\n      return false;\n    }\n  }\n\n  abstract getValue(): object;\n\n  private validateAllFormFields(formGroup: FormGroup) {\n    Object.keys(formGroup.controls).forEach((field) => {\n      const control = formGroup.get(field);\n      if (control instanceof FormControl) {\n        control.markAsTouched({ onlySelf: true });\n      } else if (control instanceof FormGroup) {\n        this.validateAllFormFields(control);\n      }\n    });\n  }\n\n}\n","<p>abstract-join-part works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<img src=\"assets/loader.gif\" alt=\"loader\">\n<mat-icon svgIcon=\"bank\" class=\"logo\"></mat-icon>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { ApiRoute } from '../../../core';\nimport { AuthStore } from '../store/auth.store';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n\n  constructor(private http: HttpClient, private authStore: AuthStore) {}\n\n\n  getToken(username: string, password: string) {\n    const params = { username, password };\n    return this.http.post<{ token: string }>(ApiRoute.login, params).pipe(\n      map((response) => {\n        if (response && response.token) {\n          this.authStore.token = response.token;\n          return response.token;\n        }\n        return '';\n      }),\n      catchError(error => {\n        throw(error);\n      })\n    );\n  }\n\n  /** */\n  logout() {\n    return this.http.post(ApiRoute.logout, {}).pipe(\n      map((response) => {\n        if (response) {\n          this.authStore.token = undefined;\n        }\n        return true;\n      }),\n      catchError(error => {\n        console.error(error);\n        this.authStore.token = undefined;\n        return of(false);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { RoutersPath } from '../constants/routing.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoutingService {\n\n  activeSection = '';\n  activeSection$ = new Subject<string>();\n\n\n  constructor(private router: Router) { }\n\n\n  /** gestisce l'header nel TemplateComponent */\n  updateHeader(text: string) {\n    this.activeSection = text;\n    this.activeSection$.next(text);\n  }\n\n  gotoHome() {\n    this.router.navigate([RoutersPath.home]);\n  }\n\n  gotoLogin() {\n    this.router.navigate([RoutersPath.login]);\n  }\n\n  gotoReload() {\n    this.router.navigate([RoutersPath.reload]);\n  }\n\n  gotoPayment() {\n    this.router.navigate([RoutersPath.payment]);\n  }\n\n  gotoMovement() {\n    this.router.navigate([RoutersPath.movement]);\n  }\n}\n","import { environment } from 'src/environments/environment';\n\nexport const RoutersPath = {\n  base: '',\n  home: 'home',\n  login: 'login',\n  payment: 'payments',\n  movement: 'movements',\n  reload: 'reload'\n};\n\nexport const baseUrl = environment.apiUrl;\n\nexport const ApiRoute = {\n  login: baseUrl + 'api/login',\n  logout: baseUrl + 'api/logout',\n  clienti: baseUrl + 'api/clienti',\n};\n","/** enviroment della build per il testing */\nexport const environment = {\n  production: false,\n  enviromentName: 'Application',\n  apiUrl: '/',\n};\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { RoutersPath } from 'src/app/core';\nimport { LoginService } from 'src/app/features/login-page/services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  /** controller del form */\n  formCrl: FormGroup;\n\n  @Output() joinRequest = new EventEmitter<void>();\n\n  private readonly toastConfig = {\n    horizontalPosition: 'center' as MatSnackBarHorizontalPosition,\n    verticalPosition: 'top' as MatSnackBarVerticalPosition,\n    panelClass: 'toast-error',\n  };\n\n  constructor(\n    private fb: FormBuilder,\n    private loginService: LoginService,\n    private router: Router,\n    private snackBar: MatSnackBar\n  ) {\n    this.formCrl = this.fb.group({\n      username: this.fb.control('', [Validators.required]),\n      password: this.fb.control('', [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(16),\n      ]),\n    });\n  }\n\n  ngOnInit() {}\n\n  login() {\n    this.loginService\n      .getToken(this.formCrl.value.username, this.formCrl.value.password)\n      .subscribe(\n        (token) => this.router.navigate([RoutersPath.home], {}),\n        (error: HttpErrorResponse) => {\n          if (error && error.status) {\n            if (error.status === 401) {\n              this.snackBar.open(\n                'Dati per il login errati!',\n                'Undo',\n                this.toastConfig\n              );\n            }\n          } else {\n            console.error(error);\n            this.snackBar.open(\n              'Errore generico durante il login!',\n              'Undo',\n              this.toastConfig\n            );\n          }\n        }\n      );\n  }\n\n  join() {\n    this.joinRequest.next();\n  }\n}\n","<div>\n  <form class=\"form\" [formGroup]=\"formCrl\">\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput placeholder=\"username*\" formControlName=\"username\" />\n        <mat-error *ngIf=\"formCrl.controls['username'].hasError('required')\"> Username <strong>obbligatorio</strong> </mat-error>\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput type=\"password\" placeholder=\"Password*\" formControlName=\"password\"/>\n        <mat-error *ngIf=\"formCrl.controls['password'].hasError('minLength') || formCrl.controls['password'].hasError('maxLength') || formCrl.controls['password'].hasError('numeric')\">\n          il pin è composto da 4-16 cifre <strong>numeriche</strong>\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['password'].hasError('required')\"> pin obbligatorio per il login </mat-error>\n      </mat-form-field>\n    </div>\n    <div class=\"login\">\n        <button mat-button color=\"primary\" [disabled]=\"formCrl.status === 'INVALID'\" (click)=\"login()\">Login</button>\n    </div>\n    <div class=\"join\">\n      <button mat-button color=\"primary\" (click)=\"join()\">Crea un nuovo account</button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiRoute } from 'src/app/core';\nimport { map, catchError } from 'rxjs/operators';\n\nenum StatusEnum {\n  waiting = 'waiting',\n  success = 'success',\n  failed = 'failed',\n}\n\n@Component({\n  selector: 'app-join-part3',\n  templateUrl: './join-part3.component.html',\n  styleUrls: ['./join-part3.component.scss']\n})\nexport class JoinPart3Component implements OnInit {\n  readonly StatusEnum = StatusEnum;\n\n  @Input() data: object;\n\n  status = StatusEnum.waiting;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.http.post(ApiRoute.clienti, this.data).pipe(\n      map(response => this.status = StatusEnum.success),\n      catchError(error => this.status = StatusEnum.failed))\n    .subscribe();\n  }\n\n}\n","<p *ngIf=\"status === StatusEnum.waiting\">in attesa della risposta del server...</p>\n<p *ngIf=\"status === StatusEnum.success\">registrazione completata con successo!</p>\n<p *ngIf=\"status === StatusEnum.failed\">registrazione fallita!</p>\n","import { Injectable } from '@angular/core';\nimport { LocalStorageService } from 'src/app/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthStore {\n\n  private pToken: string;\n\n\n  public get token() {\n    if (!this.pToken) {\n      this.pToken = this.localStorageService.getItem('token');\n    }\n    return this.pToken;\n  }\n\n  public set token(token) {\n    this.pToken = token;\n    this.localStorageService.setItem('token', token);\n  }\n\n  constructor(private localStorageService: LocalStorageService) { }\n\n}\n","export { SharedModule } from './shared.module';\n\nexport { LoginType } from './constants/login-type.enum';\n\nexport { QrCodeComponent } from './components/qr-code/qr-code.component';\nexport { NfcComponent } from './components/nfc/nfc.component';\nexport { PinComponent } from './components/pin/pin.component';\nexport { LoginComponent } from './components/login/login.component';\nexport { BigButtonComponent } from './components/big-button/big-button.component';\nexport { InfoWidgetComponent } from './components/info-widget/info-widget.component';\n\nexport { MinPipe } from './pipes/min.pipe';\nexport { SwitchNumberPipe } from './pipes/switch-number.pipe';\n\nexport { numericValidator, NumericDirective } from './directives/numeric.directive';\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { AuthStore } from '../login-page/store/auth.store';\nimport { LoginService } from '../login-page/services/login.service';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-template',\n  templateUrl: './template.component.html',\n  styleUrls: ['./template.component.scss']\n})\nexport class TemplateComponent implements OnInit, OnDestroy {\n\n  public menuItems: { label: string, icon: string, clickEvent: () => void, isVisible: () => boolean }[] = [\n    {\n      label: 'Home',\n      icon: 'more_vert',\n      clickEvent: () => this.routingService.gotoHome(),\n      isVisible: () => this.isLogin(),\n    },\n    {\n      label: 'Ricarica',\n      icon: 'publish',\n      clickEvent: () => this.routingService.gotoReload(),\n      isVisible: () => this.isLogin(),\n    },\n    {\n      label: 'Pagamento',\n      icon: 'euro',\n      clickEvent: () => this.routingService.gotoPayment(),\n      isVisible: () => this.isLogin(),\n    },\n    {\n      label: 'Movimenti',\n      icon: 'account_balance_wallet',\n      clickEvent: () => this.routingService.gotoMovement(),\n      isVisible: () => this.isLogin(),\n    },\n    {\n      label: 'Logout',\n      icon: 'lock',\n      clickEvent: () => this.logout(),\n      isVisible: () => this.isLogin(),\n    },\n  ];\n\n  actSection = this.routingService.activeSection;\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(public routingService: RoutingService, private authStore: AuthStore, private loginService: LoginService) {}\n\n  ngOnInit(): void {\n    this.subscriptions.push(\n      this.routingService.activeSection$.subscribe(activeSection =>\n        setTimeout(() => (this.actSection = activeSection), 0)\n      )\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n\n  isLogin(): boolean {\n    return !!this.authStore.token;\n  }\n\n  logout() {\n    this.loginService.logout().subscribe(() => {\n      this.routingService.gotoLogin();\n    });\n  }\n\n  menuDisabled(): boolean {\n    return !this.menuItems.some((item) => item.isVisible());\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"\" [disabled]=\"menuDisabled()\">\n      <mat-icon>more_vert</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n      <ng-container  *ngFor=\"let item of menuItems\">\n        <button\n          mat-menu-item\n          *ngIf=\"item.isVisible()\"\n          (click)=\"item.clickEvent()\"\n        >\n          <mat-icon>{{ item.icon }}</mat-icon>\n          <span>{{ item.label }}</span>\n        </button>\n      </ng-container>\n    </mat-menu>\n\n    <span class=\"title-big\">EasyPay</span>\n    <span class=\"title-separe\"> --> </span>\n    <span class=\"title-activePage\"> {{ actSection }} </span>\n  </mat-toolbar-row>\n</mat-toolbar>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","/** Tipologia di utente che può essere */\nexport enum UserType {\n  customer = 'cliente',\n  merchant = 'commerciante',\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { ApiResponse } from 'src/app/core/models/api.response';\nimport { ClienteService } from 'src/app/core/services/cliente.service';\nimport { CommercianteService } from 'src/app/core/services/commerciante.service';\n\nimport { CUSTOM_ERROR, CustomError } from '../models/error.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrezzoService {\n  prezzo$: BehaviorSubject<number> = new BehaviorSubject(0);\n\n  constructor(\n    private http: HttpClient,\n    private commercianteService: CommercianteService,\n    private clienteService: ClienteService,\n    private router: Router\n  ) {}\n  /** Salva il valore del trasferimento da effettuare */\n  setPrezzo(value: string) {\n    const convPrezzo = Number.parseFloat(value);\n    if (!isNaN(convPrezzo)) {\n      this.prezzo$.next(Number.parseFloat(value));\n    } else {\n      throw { type: CUSTOM_ERROR, name: 'errore sul prezzo', message: 'deve essere un valore numerico' };\n    }\n  }\n\n  /** gestisce un pagamento una volta che gli store sono stati tutti inizializzati correttamente */\n  handlePagamento() {\n    this.pagamento(\n      this.commercianteService.contoCommerciante$.value.idConto,\n      this.clienteService.cliente$.value.id,\n      this.prezzo$.value\n    ).subscribe(result => {\n      const response = { timestamp: new Date().getTime() };\n      if (result.success) {\n        if (window.opener) {\n          window.opener.postMessage(JSON.stringify({ success: true, ...response }), '*');\n          setInterval(() => window.close(), 1000);\n        } else {\n          console.error('Impossibile chiudere pagina');\n        }\n      } else {\n        const titleLabel = 'Impossibile procedere con il pagamento';\n        const message = 'Ricaricare il conto';\n        const error: CustomError = { type: CUSTOM_ERROR, name: result.error.id, message: result.error.message };\n        window.opener.postMessage(\n          JSON.stringify({ success: false, erroCode: result.error.id, errorMessage: result.error.message, ...response }),\n          '*'\n        );\n        setInterval(() => window.close(), 1000);\n        this.router.navigateByUrl(`/error?titleLabel=${titleLabel}&content=${message}&error=${JSON.stringify(error)}`);\n      }\n    });\n  }\n\n  /** effettua il pagamento e da un esito dell' operazione  */\n  pagamento(idCommerciante: string, idCliente: string, prezzo: number) {\n    const params = {\n      idCommerciante,\n      idCliente,\n      prezzo, // : prezzo + ''\n    };\n    return this.http.post<ApiResponse<{ success: boolean; error?: { id: string; message: string } }>>('/api/pagamenti', params);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nfc',\n  templateUrl: './nfc.component.html',\n  styleUrls: ['./nfc.component.scss']\n})\nexport class NfcComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-icon svgIcon=\"nfc-variant\" class=\"nfc-icon\"></mat-icon>\n<div class=\"nfc-message\">passare il cellulare con nfc abilitato sul dispositivo per collegarsi</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\n\nimport { CoreModule } from '../core/core.module';\nimport { BannerComponent } from './components/banner/banner.component';\nimport { BigButtonComponent } from './components/big-button/big-button.component';\nimport { ErrorPageComponent } from './components/error-page/error-page.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { InfoWidgetComponent } from './components/info-widget/info-widget.component';\nimport { JoinComponent } from './components/join/join.component';\nimport { JoinDashboardComponent } from './components/join/parts/join-dashboard/join-dashboard.component';\nimport { JoinPart0Component } from './components/join/parts/join-part0/join-part0.component';\nimport { JoinPart1Component } from './components/join/parts/join-part1/join-part1.component';\nimport { JoinPart2Component } from './components/join/parts/join-part2/join-part2.component';\nimport { JoinPart3Component } from './components/join/parts/join-part3/join-part3.component';\nimport { LoaderComponent } from './components/loader/loader.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { NfcComponent } from './components/nfc/nfc.component';\nimport { PinComponent } from './components/pin/pin.component';\nimport { QrCodeComponent } from './components/qr-code/qr-code.component';\nimport { RecognitionComponent } from './components/recognition/recognition.component';\nimport { NumericDirective } from './directives/numeric.directive';\nimport { MinPipe } from './pipes/min.pipe';\nimport { SwitchNumberPipe } from './pipes/switch-number.pipe';\nimport { MatNativeDateModule } from '@angular/material/core';\n\n@NgModule({\n  declarations: [\n    QrCodeComponent,\n    NfcComponent,\n    PinComponent,\n    NumericDirective,\n    LoaderComponent,\n    ErrorPageComponent,\n    ErrorComponent,\n    LoginComponent,\n    BigButtonComponent,\n    BannerComponent,\n    RecognitionComponent,\n    MinPipe,\n    SwitchNumberPipe,\n    InfoWidgetComponent,\n    JoinComponent,\n    JoinPart0Component,\n    JoinPart1Component,\n    JoinPart2Component,\n    JoinDashboardComponent,\n    JoinPart3Component,\n  ],\n  imports: [\n    CommonModule,\n    CoreModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    ReactiveFormsModule,\n    ZXingScannerModule,\n    MatGridListModule,\n    MatSliderModule,\n    MatRadioModule,\n    MatDividerModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n  ],\n  exports: [\n    LoaderComponent,\n    ErrorComponent,\n    LoginComponent,\n    BigButtonComponent,\n    MatGridListModule,\n    BannerComponent,\n    RecognitionComponent,\n    MinPipe,\n    SwitchNumberPipe,\n    InfoWidgetComponent,\n    JoinComponent,\n  ],\n  entryComponents: [JoinPart0Component, JoinPart1Component, JoinPart2Component, JoinPart3Component],\n})\nexport class SharedModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ApiResponse } from '../models/api.response';\nimport { CUSTOM_ERROR, CustomError, WrongParamError } from '../models/error.model';\nimport { Cliente, CLIENTE_TYPE } from '../models/cliente.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClienteService {\n  cliente$: BehaviorSubject<Cliente>;\n\n  constructor(private httpClient: HttpClient) {\n    this.cliente$ = new BehaviorSubject({\n      type: CLIENTE_TYPE,\n      id: '',\n      pin: '',\n      token: '',\n      nome: '',\n      budget: 0,\n    });\n  }\n\n  getClienteByPin(id: string, pin: string): Observable<Cliente | CustomError>  {\n    // se già presente nello store non riscarica i dati del cliente:\n    if (this.cliente$.value.id) {\n      return this.cliente$;\n    }\n\n    if (!id || !pin) {\n      return throwError(new WrongParamError({id, pin}));\n    }\n\n    const params: {id: string, pin: string} =  { id, pin } ;\n    return this._getClient(params);\n  }\n\n  getClienteByToken(token: string): Observable<Cliente | CustomError> {\n    // se già presente nello store non riscarica i dati del cliente:\n    if (this.cliente$.value.id) {\n      return this.cliente$;\n    }\n\n    if (!token) {\n      return throwError(new WrongParamError(token));\n    }\n\n    const params: {token: string} = { token };\n    return this._getClient(params);\n  }\n\n  /** effettua la richiesta HTTP per verificare se il login del cliente va a buon fine */\n  private _getClient(params: {id?: string, pin?: string; token?: string}): Observable<Cliente | CustomError> {\n    const formData = new FormData();\n    formData.append('id', params.id);\n    formData.append('pin', params.pin);\n    formData.append('token', params.token);\n    return this.httpClient\n      .post<ApiResponse<Cliente>>('/api/clienti', formData)\n      .pipe(\n        map(result => {\n          if (result && result.success) {\n            const cliente = { type: CLIENTE_TYPE, ...result.body };\n            this.cliente$.next(cliente);\n            return cliente;\n          } else {\n            throw { type: CUSTOM_ERROR, name: 'account not found', message: `non è stato possibile trovare l'account` };\n          }\n        })\n      );\n  }\n}\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { RoutingService } from 'src/app/core/services/routing.service';\n\n\n@Component({\n  selector: 'app-payments',\n  templateUrl: './payments.component.html',\n  styleUrls: ['./payments.component.scss']\n})\nexport class PaymentsComponent implements OnInit, AfterViewInit {\n\n\n\n  public breakpoint: number;\n  public  maxCol = 2;\n  public  minCol = 1;\n\n  private deviceSize = 1180;\n\n\n  constructor(private routingService: RoutingService) { }\n\n  ngOnInit(): void {\n    this.breakpoint = (window.innerWidth <= this.deviceSize) ? this.minCol : this.maxCol;\n  }\n\n  ngAfterViewInit() {\n    this.routingService.updateHeader('Pagamento');\n  }\n\n  onResize(event) {\n    this.breakpoint = (event.target.innerWidth <= this.deviceSize) ? this.minCol : this.maxCol;\n  }\n}\n","<div class=\"flex-parent\">\n  <div class=\"flex widget-container shadow-border mb20 mr10\">\n    <app-recognition class=\"relative recognition\"></app-recognition>\n  </div>\n  <div class=\"flex widget-container shadow-border mb20 ml10\">\n    <app-info-widget\n      class=\" info-table\"\n      title=\"Personale\"\n      numConto=\"xxxxxxxxxx\"\n      name=\"Franco Rossi\"\n      regSocial=\"Gelateria Buongusto\"\n      address=\" via colombo, 45, Torino\"\n    ></app-info-widget>\n  </div>\n</div>\n\n<div class=\"flex-parent\">\n  <div class=\"widget-container shadow-border flex mb20\">\n    TODO: PAGAMENTO INFO\n  </div>\n</div>\n\n<div class=\"flex-parent\">\n  <div class=\"widget-container shadow-border spam-widget\">\n    <app-banner></app-banner>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { LoadingStatus, LoaderService } from './core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  statusLoader$: BehaviorSubject<LoadingStatus>;\n\n  constructor(\n    public loaderService: LoaderService,\n  ) {\n    this.statusLoader$ = this.loaderService.status$;\n  }\n}\n","<div class=\"container\">\n  <!-- loader in attesa di recuperare il conto -->\n  <!-- <ng-container *ngIf=\"!(statusLoader$ | async)\">\n    <app-loader></app-loader>\n  </ng-container> -->\n  <router-outlet></router-outlet>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { CustomError } from 'src/app/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n  /** titolo della pagina di errore */\n  @Input() titleLabel: string;\n\n  /** contenuto html del messaggio di errore */\n  @Input() content: string;\n\n  /** oggetto errore da stampare se presente */\n  @Input() error: CustomError;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<ng-container>\n  <h1 class=\"mb-0\">\n    <mat-icon svgIcon=\"alert-circle\" class=\"logo\"></mat-icon>\n  </h1>\n  <h2 class=\"logo-title mt-0\">{{titleLabel}}</h2>\n  <div [innerHTML]=\"content\"></div>\n\n  <p>{{ error | json }}</p>\n</ng-container>\n","import { Directive } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator, ValidatorFn } from '@angular/forms';\n\n/** Validatore di caratteri numerici. ritorna */\nexport function numericValidator(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const isNumeric = new RegExp('^[0-9]*$').test(control.value);\n    return !isNumeric ? { 'numeric': { value: control.value } } : null;\n  };\n}\n\n/** Direttiva usata per validare se in un HTMLInput ha solo valori numerici */\n@Directive({\n  selector: '[appNumeric]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: NumericDirective, multi: true }]\n})\nexport class NumericDirective implements Validator {\n\n  validate(control: AbstractControl): { [key: string]: any } | null {\n    return  numericValidator()(control);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { HomeModule } from './features/home/home.module';\nimport { LoginPageModule } from './features/login-page/login-page.module';\nimport { PaymentsModule } from './features/payments/payments.module';\nimport { TemplateModule } from './features/template/template.module';\nimport { SharedModule } from './shared';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule.forRoot(),\n    AppRoutingModule,\n    SharedModule,\n    TemplateModule,\n    LoginPageModule,\n    HomeModule,\n    PaymentsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TemplateComponent } from './template.component';\nimport { HomeModule } from '../home/home.module';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [TemplateComponent],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule,\n    HomeModule,\n    RouterModule,\n  ],\n  exports: [TemplateComponent],\n})\nexport class TemplateModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.scss']\n})\nexport class BannerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed rutrum diam\n  posuere, tincidunt sapien sit amet, faucibus erat. Sed semper eu quam at\n  facilisis. Suspendisse accumsan pulvinar velit eu sollicitudin. Nulla massa\n  neque, pretium a cursus at, sodales id enim. Pellentesque volutpat, ante eu\n  varius luctus, lacus magna sollicitudin risus, ut tristique odio enim\n  vulputate odio. Sed eu justo augue. Fusce sem enim, gravida ac sollicitudin\n  sit amet, sagittis ac est. Aenean aliquam vulputate sem vitae porta. Morbi\n  eget magna sapien. In in interdum ante. Ut nisi enim, fermentum sed enim\n  vitae, accumsan mattis mauris. Praesent vel nisl lorem. Vestibulum eu urna\n  feugiat, dapibus massa sit amet, laoreet lorem.\n</p>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../../shared';\nimport { PaymentsComponent } from './payments.component';\n\n\n\n@NgModule({\n  declarations: [PaymentsComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n  ],\n  exports: [PaymentsComponent]\n})\nexport class PaymentsModule { }\n","export * from './constants/routing.constants';\n\nexport { PrezzoService } from './services/pagamento.service';\nexport { CommercianteService } from './services/commerciante.service';\nexport { ClienteService } from './services/cliente.service';\nexport { LoaderService } from './services/loader.service';\nexport { LoadingStatus } from './services/loader.service';\nexport { LocalStorageService } from './services/local-storage.service';\n\nexport * from './models/error.model';\nexport * from './models/commerciante.model';\nexport * from './models/cliente.model';\n\nexport * from './models/api.response';\nexport * from './models/api.request';\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from 'src/app/shared';\n\nimport { HomeComponent } from './home.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [CommonModule, SharedModule, FlexLayoutModule],\n  exports: [HomeComponent]\n})\nexport class HomeModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { isBorn, isOver18 } from 'src/app/core/utils/custom-validator';\n\nimport { AbstractJoinPartComponent } from '../abstract-join-part/abstract-join-part.component';\n\n@Component({\n  selector: 'app-join-part1',\n  templateUrl: './join-part1.component.html',\n  styleUrls: ['./join-part1.component.scss'],\n})\nexport class JoinPart1Component extends AbstractJoinPartComponent\n  implements OnInit {\n  constructor(private fb: FormBuilder) {\n    super();\n    this.formCrl = this.fb.group({\n      nome: this.fb.control('', [Validators.required]),\n      cognome: this.fb.control('', [Validators.required]),\n      cf: this.fb.control('', [Validators.required]),\n      bornDate: this.fb.control('', [Validators.required, isOver18, isBorn]),\n      email: this.fb.control('', [Validators.required, Validators.email]),\n      phone: this.fb.control('', []),\n      address: this.fb.control('', []),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  getValue() {\n    return {\n      nome: this.formCrl.controls.nome.value,\n      cognome: this.formCrl.controls.cognome.value,\n      cf: this.formCrl.controls.cf.value,\n      bornDate: this.formCrl.controls.bornDate.value,\n      email: this.formCrl.controls.email.value,\n      phone: this.formCrl.controls.phone.value,\n      address: this.formCrl.controls.address.value,\n    };\n  }\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n  <form class=\"form\" [formGroup]=\"formCrl\">\n    <div fxFlex>\n      <mat-form-field>\n        <input matInput placeholder=\"nome*\" formControlName=\"nome\" />\n        <mat-error *ngIf=\"formCrl.controls['nome'].hasError('required')\">\n          nome <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div fxFlex>\n      <mat-form-field>\n        <input matInput placeholder=\"cognome*\" formControlName=\"cognome\" />\n        <mat-error *ngIf=\"formCrl.controls['cognome'].hasError('required')\">\n          cognome <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div fxFlex>\n      <mat-form-field>\n        <input matInput placeholder=\"codice fiscale*\" formControlName=\"cf\" />\n        <mat-error *ngIf=\"formCrl.controls['cf'].hasError('required')\">\n          codice fiscale <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div fxFlex>\n      <mat-form-field>\n        <input matInput placeholder=\"email*\" formControlName=\"email\" />\n        <mat-error *ngIf=\"formCrl.controls['email'].hasError('required')\">\n          email <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n    <div fxFlex>\n      <mat-form-field>\n        <input\n          matInput\n          placeholder=\"data di nascita*\"\n          [matDatepicker]=\"bornDatePicker\"\n          formControlName=\"bornDate\"\n        />\n        <mat-datepicker-toggle\n          matSuffix\n          [for]=\"bornDatePicker\"\n        ></mat-datepicker-toggle>\n        <mat-datepicker #bornDatePicker></mat-datepicker>\n        <mat-error *ngIf=\"formCrl.controls['bornDate'].hasError('required') && !formCrl.controls['bornDate'].hasError('matDatepickerParse')\">\n          data di nascita <strong>obbligatoria</strong>.\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['bornDate'].hasError('matDatepickerParse')\">\n          formato della data errato.\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['bornDate'].hasError('isOver18')\">\n          l'utente deve essere maggiorenne\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['bornDate'].hasError('isBorn')\">\n          Sicuramente avremo offerte molto più belle per quando nascerai!\n        </mat-error>\n      </mat-form-field>\n    </div>\n    <div fxFlex>\n      <mat-form-field>\n        <input matInput placeholder=\"telefono\" formControlName=\"phone\" />\n        <mat-error *ngIf=\"formCrl.controls['phone'].hasError('required')\">\n          telefono <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div fxFlex>\n      <mat-form-field>\n        <input matInput placeholder=\"indirizzo\" formControlName=\"address\" />\n        <mat-error *ngIf=\"formCrl.controls['address'].hasError('required')\">\n          address <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n  </form>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nimport { SharedModule } from '../../shared';\nimport { LoginPageComponent } from './login-page.component';\nimport { LoginService } from './services/login.service';\nimport { AuthStore } from './store/auth.store';\n\n@NgModule({\n  declarations: [LoginPageComponent],\n  imports: [CommonModule, SharedModule, FlexLayoutModule, MatSnackBarModule],\n  exports: [LoginPageComponent],\n  providers: [LoginService, AuthStore]\n})\nexport class LoginPageModule {}\n","import { AbstractControl } from '@angular/forms';\n// NOTA: apparentemente la risposta { [errorName]: false } viene cmq bloccata dal validatore.\n// Trick Solution: in caso di validatore corretto passo null.\n\n/** form validator per verificare se l'età inserita (presumibilmente di nascita) sia maggiore di 18 */\nexport function isOver18(control: AbstractControl): { [key: string]: boolean } {\n  const errorCode = 'isOver18';\n\n  if (control && control.value) {\n    const age = getBirthday(control.value);\n    return  age >= 0 && age < 18 ? { [errorCode]: true } : null;\n  }\n  return null;\n}\n\n/** form validator per verificare se lutente è effettivamente nato (anni >= 0) */\nexport function isBorn(control: AbstractControl): { [key: string]: boolean } {\n  const errorCode = 'isBorn';\n\n  if (control && control.value) {\n    const bornDate = control.value;\n    return Date.now() - bornDate.getTime() < 0 ? { [errorCode]: true } : null;\n  }\n  return null;\n}\n\n/**\n * funzione che restituisce gli anni dell' utente\n * NOTA: funzione semplificata che non tiene conto di ora solare ed eventuali calcoli particolari sul calendario\n * ma sifficiente a scopo dimostrativo per questo progetto.\n */\nfunction getBirthday(bornDate: Date): number {\n  const ageDifMs = Date.now() - bornDate.getTime();\n  if(ageDifMs < 0) {\n    return -1;\n  }\n  const ageDate = new Date(ageDifMs); // miliseconds from epoch\n  return Math.abs(ageDate.getUTCFullYear() - 1970);\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-pin',\n  templateUrl: './pin.component.html',\n  styleUrls: ['./pin.component.scss']\n})\nexport class PinComponent implements OnInit {\n  /** controller del form */\n  formCrl: FormGroup;\n\n  @Output() loginEvent = new EventEmitter<{username: string, password: string}>();\n\n  constructor(\n    private fb: FormBuilder\n  ) {\n    this.formCrl = this.fb.group({\n      userId: this.fb.control('', [Validators.required]),\n      password: this.fb.control('', [Validators.required, Validators.minLength(4), Validators.maxLength(16)])\n    });\n  }\n\n  ngOnInit() {}\n\n  login() {\n    this.loginEvent.emit({username: this.formCrl.value.userId, password: this.formCrl.value.password});\n  }\n}\n","<div>\n  <form class=\"form\" [formGroup]=\"formCrl\">\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput placeholder=\"ID*\" formControlName=\"userId\" />\n        <mat-error *ngIf=\"formCrl.controls['userId'].hasError('required')\"> L'id utente è <strong>richiesto</strong> </mat-error>\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput type=\"password\" placeholder=\"Password*\" formControlName=\"password\"/>\n        <mat-hint>4 cifre numeriche</mat-hint>\n        <mat-error *ngIf=\"formCrl.controls['password'].hasError('minLength') || formCrl.controls['password'].hasError('maxLength') || formCrl.controls['password'].hasError('numeric')\">\n          il pin è composto da 4-16 cifre <strong>numeriche</strong>\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['password'].hasError('required')\"> pin obbligatorio per il login </mat-error>\n      </mat-form-field>\n    </div>\n    <div class=\"login\">\n        <button mat-raised-button color=\"primary\" [disabled]=\"formCrl.status === 'INVALID'\" (click)=\"login()\">Login</button>\n    </div>\n  </form>\n</div>\n","import {\n  AfterViewInit,\n  Component,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { AbstractJoinPartComponent } from './parts/abstract-join-part/abstract-join-part.component';\nimport { JoinPart0Component } from './parts/join-part0/join-part0.component';\nimport { JoinPart1Component } from './parts/join-part1/join-part1.component';\nimport { JoinPart2Component } from './parts/join-part2/join-part2.component';\nimport { JoinPart3Component } from './parts/join-part3/join-part3.component';\n\n@Component({\n  selector: 'app-join',\n  templateUrl: './join.component.html',\n  styleUrls: ['./join.component.scss'],\n})\nexport class JoinComponent implements OnInit, OnDestroy, AfterViewInit {\n  readonly  maxPage = 3;\n\n  favoriteUserType: string;\n  page: number;\n  componentRef: ComponentRef<AbstractJoinPartComponent>;\n  data = {};\n\n  @ViewChild('adHost', { read: ViewContainerRef }) container;\n\n  @Output() loginRequest = new EventEmitter<void>();\n\n  constructor(private resolver: ComponentFactoryResolver) {\n  }\n\n  ngOnInit(): void {\n    this.page = 0;\n  }\n\n  ngOnDestroy() {\n    if (this.container) {\n      this.container.clear();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.loadComponent();\n    }, 0);\n  }\n\n  loadComponent() {\n\n    this.container.clear();\n    let factory: ComponentFactory<AbstractJoinPartComponent|JoinPart3Component>;\n    switch (this.page) {\n      case 3:\n        factory = this.resolver.resolveComponentFactory(JoinPart3Component);\n        break;\n      case 2:\n        factory = this.resolver.resolveComponentFactory(JoinPart2Component);\n        break;\n      case 1:\n        factory = this.resolver.resolveComponentFactory(JoinPart1Component);\n        break;\n      case 0:\n      default:\n        factory = this.resolver.resolveComponentFactory(JoinPart0Component);\n        break;\n    }\n    this.componentRef = this.container.createComponent(factory);\n    if (this.page === this.maxPage) {\n      (this.componentRef as unknown as ComponentRef<JoinPart3Component>).instance.data = this.data;\n    }\n\n  }\n\n  login() {\n    this.loginRequest.next();\n  }\n\n\n\n\n  updateForm(pg: number) {\n    if (!this.componentRef.instance.validate()) {\n      return;\n    }\n    // salva le informazioni recuperate dal form\n    this.data = {...this.data, ...this.componentRef.instance.getValue()};\n\n    this.setPage(pg);\n    this.loadComponent();\n  }\n\n  setPage(pg: number) {\n    if (pg < 0) {\n      this.page = 0;\n    } else if (pg > this.maxPage ) {\n      this.page = this.maxPage;\n    } else {\n      this.page = pg;\n    }\n  }\n}\n","<div>\n  <div>\n    <mat-slider class=\"slider\" min=\"0\" max=\"3\" step=\"1\" [value]=\"page\"\n    ></mat-slider>\n  </div>\n  <mat-divider></mat-divider>\n  <div>\n    <template #adHost></template>\n  </div>\n  <app-join-dashboard *ngIf=\"page < maxPage\" [page]=\"page\" [maxPage]=\"maxPage\" (changePage)=\"updateForm($event)\"></app-join-dashboard>\n  <div class=\"login\">\n    <button mat-button color=\"primary\" (click)=\"login()\">\n      Annulla creazione account\n    </button>\n  </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\nimport { AbstractJoinPartComponent } from '../abstract-join-part/abstract-join-part.component';\n\n@Component({\n  selector: 'app-join-part0',\n  templateUrl: './join-part0.component.html',\n  styleUrls: ['./join-part0.component.scss'],\n})\nexport class JoinPart0Component extends AbstractJoinPartComponent\n  implements OnInit {\n  @Output() valuesOutput = new EventEmitter<{\n    username: string;\n    password: string;\n  }>();\n\n  constructor(private fb: FormBuilder) {\n    super();\n    this.formCrl = this.fb.group({\n      username: this.fb.control('', [Validators.required]),\n      password: this.fb.control('', [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(16),\n      ]),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  getValue() {\n    return {\n      username: this.formCrl.controls.username.value,\n      password: this.formCrl.controls.password.value,\n    };\n  }\n}\n","<form class=\"form\" [formGroup]=\"formCrl\">\n<div>\n  <mat-form-field class=\"full-width\">\n    <input\n      matInput\n      placeholder=\"username*\"\n      formControlName=\"username\"\n    />\n    <mat-error\n      *ngIf=\"formCrl.controls['username'].hasError('required')\"\n    >\n      Username <strong>obbligatorio</strong>\n    </mat-error>\n  </mat-form-field>\n</div>\n<div>\n  <mat-form-field class=\"full-width\">\n    <input\n      matInput\n      type=\"password\"\n      placeholder=\"Password*\"\n      formControlName=\"password\"\n    />\n    <mat-error\n      *ngIf=\"\n        formCrl.controls['password'].hasError('minLength') ||\n        formCrl.controls['password'].hasError('maxLength') ||\n        formCrl.controls['password'].hasError('numeric')\n      \"\n    >\n      il pin è composto da 4-16 cifre <strong>numeriche</strong>\n    </mat-error>\n    <mat-error\n      *ngIf=\"formCrl.controls['password'].hasError('required')\"\n    >\n      pin obbligatorio per il login\n    </mat-error>\n  </mat-form-field>\n</div>\n</form>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ApiResponse } from '../models/api.response';\nimport { Commerciante, COMMERCIANTE_TYPE } from '../models/commerciante.model';\nimport { CustomError, WrongParamError, CUSTOM_ERROR } from '../models/error.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommercianteService {\n  contoCommerciante$: BehaviorSubject<Commerciante>;\n\n  constructor(private httpClient: HttpClient) {\n    this.contoCommerciante$ = new BehaviorSubject({\n      type: COMMERCIANTE_TYPE,\n      idConto: '',\n      nome: '',\n      nomenclatura: ''\n    });\n  }\n\n  getConto(idConto: string): Observable<Commerciante | CustomError> {\n    // se già presente nello store non riscarica i dati del cliente:\n    if (this.contoCommerciante$.value.idConto) {\n      return this.contoCommerciante$;\n    }\n\n    if (!idConto) {\n      return of(new WrongParamError(idConto));\n    }\n\n    return this.httpClient\n      .get<ApiResponse<Commerciante>>(`/api/commercianti/${idConto}`)\n      .pipe(\n        map(result => {\n          if (result && result.success) {\n            const commerciante = { type: COMMERCIANTE_TYPE, ...result.body };\n            this.contoCommerciante$.next(commerciante);\n            return commerciante;\n          } else {\n            throw { type: CUSTOM_ERROR, name: 'account not found', message: `non è stato possibile trovare l'account` };\n          }\n        })\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthStore } from 'src/app/features/login-page/store/auth.store';\nimport { RoutersPath } from '../constants/routing.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router, private loginStore: AuthStore) { }\n\n  canActivate(): boolean {\n    if (!this.loginStore.token) {\n      this.router.navigate([RoutersPath.login]);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthStore } from 'src/app/features/login-page/store/auth.store';\nimport { RoutersPath } from '../constants/routing.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoLoginGuard {\n\n  constructor(private router: Router, private loginStore: AuthStore) { }\n\n  canActivate(): boolean {\n    if (this.loginStore.token) {\n      this.router.navigate([RoutersPath.home]);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { LoginType } from '../../constants/login-type.enum';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { LoginService } from 'src/app/features/login-page/services/login.service';\n\n@Component({\n  selector: 'app-recognition',\n  templateUrl: './recognition.component.html',\n  styleUrls: ['./recognition.component.scss']\n})\nexport class RecognitionComponent implements OnInit {\n\n  readonly LoginType = LoginType;\n  public loginType = LoginType.pin;\n\n  constructor(private routingService: RoutingService, private loginService: LoginService) { }\n\n  ngOnInit(): void {\n    this.routingService.updateHeader('Login');\n  }\n\n  changeLogin(choosenLoginType: LoginType) {\n    this.loginType = choosenLoginType;\n  }\n}\n","<div class=\"buttons-container\">\n  <button mat-icon-button (click)=\"changeLogin(LoginType.pin)\" [ngClass]=\"{active: loginType === LoginType.pin}\">\n    <mat-icon svgIcon=\"textbox-password\"></mat-icon>\n  </button>\n  <button mat-icon-button (click)=\"changeLogin(LoginType.qr)\" class=\"mr-2 ml-2\" [ngClass]=\"{active: loginType === LoginType.qr}\">\n    <mat-icon svgIcon=\"qrcode\"></mat-icon>\n  </button>\n  <button mat-icon-button (click)=\"changeLogin(LoginType.nfc)\" [ngClass]=\"{active: loginType === LoginType.nfc}\">\n    <mat-icon svgIcon=\"nfc-variant\"></mat-icon>\n  </button>\n</div>\n<div class=\"content\">\n  <div class=\"login-body\">\n    <div *ngIf=\"loginType === LoginType.pin\"><app-pin></app-pin></div>\n    <div *ngIf=\"loginType === LoginType.qr\"><app-qr-code></app-qr-code></div>\n    <div *ngIf=\"loginType === LoginType.nfc\"><app-nfc></app-nfc></div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport enum LoadingStatus {\n  LOADING = '',\n  FAILED = 'FAILED',\n  SUCCESS = 'SUCCESS'\n}\n\n/** service sche gestisce il loader */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  /** Alla fine del caricamento chiude il loader e apre la modale */\n  status$: BehaviorSubject<LoadingStatus>;\n\n  constructor() {\n    this.status$ = new BehaviorSubject(LoadingStatus.LOADING);\n  }\n\n  changeStatus(status: LoadingStatus) {\n    this.status$.next(status);\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-join-dashboard',\n  templateUrl: './join-dashboard.component.html',\n  styleUrls: ['./join-dashboard.component.scss']\n})\nexport class JoinDashboardComponent implements OnInit {\n\n\n  @Input() page: number;\n  @Input() maxPage: number;\n\n  @Output() changePage = new EventEmitter<number>();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  backPage() {\n    this.changePage.emit(this.page - 1);\n  }\n\n  nextPage() {\n    this.changePage.emit(this.page + 1);\n  }\n\n  // private setPage(pg: number) {\n  //   if (pg < 0) {\n  //     this.page = 0;\n  //   } else if (pg > this.maxPage ) {\n  //     this.page = this.maxPage;\n  //   } else {\n  //     this.page = pg;\n  //   }\n  //   this.changePage.emit(this.page);\n  // }\n\n}\n","<div class=\"move\">\n  <button mat-raised-button class=\"back\" color=\"primary\" [disabled]=\"page <= 0\" (click)=\"backPage()\">Back</button>\n  <button mat-raised-button class=\"next\" color=\"primary\" [disabled]=\"page >= maxPage\" (click)=\"nextPage()\">Next</button>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * [number, number] | switchNumber:switchFn\n */\n@Pipe({\n  name: 'switchNumber'\n})\nexport class SwitchNumberPipe implements PipeTransform {\n\n  /**\n   * @param switchFn  - determina se prendere il valore 1 o il valore 2\n   */\n  transform(values: [number, number], switchFn: boolean, ...args: unknown[]): unknown {\n    if (!Array.isArray(values)) {\n      console.error('SwitchNumberPipe richiede la presenza di un array di numeri per funzionare');\n      console.error(values);\n      return -1;\n    }\n    if (values.length !== 2 || values.some(n => !(typeof n === 'number'))) {\n      console.error('SwitchNumberPipe richiede che l\\'array contenga 2 valori numerici');\n      console.error(values);\n      return -1;\n    }\n    const equal = switchFn || true;\n    return equal ? values[0] : values[1];\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n/**\n * Nota: <app-big-button> richiede width e height impostati a 100%\n */\n@Component({\n  selector: 'app-big-button',\n  templateUrl: './big-button.component.html',\n  styleUrls: ['./big-button.component.scss']\n})\nexport class BigButtonComponent implements OnInit {\n\n  @Input() label: string;\n  @Input() icon: string;\n\n  @Output() clickEmitter: EventEmitter<void> = new  EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  clickEvent(): void {\n    this.clickEmitter.next();\n  }\n}\n","<div class=\"button-container widget-container shadow-border\" (click)=\"clickEvent()\">\n  <div class=\"icon-content\">\n    <mat-icon class=\"icon fix-top\" aria-hidden=\"false\" [inline]=\"true\">{{icon}}</mat-icon>\n  </div>\n  <div class=\"label-body\">\n    <span class=\"label centralize\" >{{label}}</span>\n  </div>\n</div>\n","export interface ApiRequest {\n  // payload: T;\n}\n\nfunction generateApiRequest<T>(payload: T): T & ApiRequest  {\n  let result = <T> {};\n  return result;\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { MatIconModule, MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { AuthGuard } from './guards/auth-guard.service';\nimport { NoLoginGuard } from './guards/no-login-guard.service';\nimport { ClienteService } from './services/cliente.service';\nimport { CommercianteService } from './services/commerciante.service';\nimport { LoaderService } from './services/loader.service';\nimport { LocalStorageService } from './services/local-storage.service';\nimport { PrezzoService } from './services/pagamento.service';\nimport { RoutingService } from './services/routing.service';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, HttpClientModule, MatIconModule],\n  exports: [MatIconModule],\n  providers: [\n    /* No providers */\n  ]\n})\nexport class CoreModule {\n  constructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer) {\n    // aggiunge le nuova svg a material\n    matIconRegistry.addSvgIconSet(\n      domSanitizer.bypassSecurityTrustResourceUrl('assets/svgs/mdi.svg')\n    );\n    // matIconRegistry.addSvgIconSet(domSanitizer.bypassSecurityTrustResourceUrl('../../assets/fonts/materialdesignicons-webfont.woff'));\n  }\n\n  static forRoot(): ModuleWithProviders<CoreModule> {\n    return {\n      ngModule: CoreModule,\n      providers: [\n        CommercianteService,\n        ClienteService,\n        PrezzoService,\n        RoutingService,\n        AuthGuard,\n        NoLoginGuard,\n        LoaderService,\n        LocalStorageService\n      ]\n    };\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-info-widget',\n  templateUrl: './info-widget.component.html',\n  styleUrls: ['./info-widget.component.scss']\n})\nexport class InfoWidgetComponent implements OnInit {\n\n  /** titolo della sezione */\n  @Input() title;\n  /** numero del conto */\n  @Input() numConto: string;\n  /** nome del proprietario conto */\n  @Input() name: string;\n  /** regione sociale */\n  @Input() regSocial: string;\n  /** indirizzo del proprietario del conto */\n  @Input() address: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"title\">{{title}}</h1>\n<div class=\"info\">\n  <div class=\"labels\">\n    <div class=\"info--conto label\">Num. Conto:</div>\n    <div class=\"info--name label\">Nome:</div>\n    <div class=\"info--reg label\">Regione Sociale:</div>\n    <div class=\"info--addr label\">Indirizzo:</div>\n  </div>\n  <div class=\"values\">\n    <div class=\"info--conto value\">{{numConto}}</div>\n    <div class=\"info--name value\">{{name}}</div>\n    <div class=\"info--reg value\">{{regSocial}}</div>\n    <div class=\"info--addr value\">{{address}}</div>\n  </div>\n</div>\n\n\n<!-- <div class=\"info\">\n  <div class=\"info--conto\"><span class=\"label\">Num. Conto:</span><span class=\"value\">{{numConto}}</span></div>\n  <div class=\"info--name\"><span class=\"label\">Nome:</span><span class=\"value\">{{name}}</span></div>\n  <div class=\"info--reg\"><span class=\"label\">Regione Sociale:</span><span class=\"value\">{{regSocial}}</span></div>\n  <div class=\"info--addr\"><span class=\"label\">Indirizzo:</span><span class=\"value\">{{address}}</span></div>\n</div> -->\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\nimport { AbstractJoinPartComponent } from '../abstract-join-part/abstract-join-part.component';\nimport { UserType } from 'src/app/core/constants/user-type.enum';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-join-part2',\n  templateUrl: './join-part2.component.html',\n  styleUrls: ['./join-part2.component.scss']\n})\nexport class JoinPart2Component extends AbstractJoinPartComponent implements OnInit, OnDestroy {\n  readonly UserType = UserType;\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(private fb: FormBuilder) {\n    super();\n    this.formCrl = this.fb.group({\n      userType: this.fb.control(UserType.customer, []),\n      piva: this.fb.control({ value: '', disabled: true }, [Validators.required]),\n      ragSoc: this.fb.control({ value: '', disabled: true }, [Validators.required]),\n    });\n  }\n\n  ngOnInit() {\n    this.subscriptions.push(this.formCrl.get('userType').valueChanges.subscribe(userType => {\n        if ( userType === UserType.customer  ) {\n          this.formCrl.get('piva').disable();\n          this.formCrl.get('ragSoc').disable();\n        } else {\n          this.formCrl.get('piva').enable();\n          this.formCrl.get('ragSoc').enable();\n        }\n    }));\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  getValue() {\n    return {\n      userType: this.formCrl.controls.userType.value,\n      piva: this.formCrl.controls.piva.value,\n      ragSoc: this.formCrl.controls.ragSoc.value,\n    };\n  }\n}\n","<form class=\"form\" [formGroup]=\"formCrl\">\n  <mat-radio-group formControlName=\"userType\">\n    <mat-radio-button [value]=\"UserType.customer\" >Sono solo un cliente</mat-radio-button>\n    <mat-radio-button [value]=\"UserType.merchant\" >Dati del commerciante</mat-radio-button>\n  </mat-radio-group>\n  <div #merchantInfo>\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput  class=\"mInfos\" placeholder=\"partita iva*\" formControlName=\"piva\" />\n        <mat-error *ngIf=\"formCrl.controls['piva'].hasError('required')\">\n          piva <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput class=\"mInfos\" placeholder=\"ragione sociale*\" formControlName=\"ragSoc\" />\n        <mat-error *ngIf=\"formCrl.controls['ragSoc'].hasError('required')\">\n          ragSoc <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n  </div>\n</form>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { CustomError, LoaderService, LoadingStatus } from 'src/app/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { debounceTime, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.scss']\n})\nexport class ErrorPageComponent implements OnInit {\n\n  /** titolo della pagina di errore */\n  titleLabel$: BehaviorSubject<string>;\n\n  /** contenuto html del messaggio di errore */\n  content$: BehaviorSubject<string>;\n\n  /** oggetto errore da stampare se presente */\n  error$: BehaviorSubject<CustomError>;\n\n  constructor(private route: ActivatedRoute, private loaderService: LoaderService) {\n    this.titleLabel$ = new BehaviorSubject('Impossibile procedere con il pagamento. Se il problema persiste contattare il venditore');\n    this.content$ = new BehaviorSubject('SUGGERIMENTO PER IL VENDITORE: assicurarsi che il idConto e prezzo siano validi');\n    this.error$ = new BehaviorSubject(undefined);\n    this.loaderService.status$.next(LoadingStatus.FAILED);\n  }\n\n  ngOnInit() {\n    this.route.queryParams\n    .pipe(\n      // debounceTime evita l'emit iniziale prima che i param siano effettivamente inizializzati\n      debounceTime(200),\n      switchMap(params => {\n        if ( params.titleLabel) {\n          this.titleLabel$.next(params.titleLabel);\n        }\n        if ( params.content ) {\n          this.content$.next(params.content);\n        }\n        if ( params.error ) {\n          this.error$.next(JSON.parse(params.error));\n        }\n        return [];\n      })\n    )\n    .subscribe();\n  }\n}\n","<app-error [titleLabel]=\"titleLabel$ | async\" [content]=\"content$ | async\" [error]=\"error$ | async\"></app-error>\n","/** Struttura contenente i dati del commerciante  */\nexport interface Commerciante {\n\n  type: string;\n\n  idConto: string;\n  nome: string;\n  /** nome identificativo della società */\n  nomenclatura: string;\n}\n\nexport const COMMERCIANTE_TYPE = 'COMMERCIANTE_TYPE';\n","import { Component, OnInit } from '@angular/core';\nimport { RoutingService } from 'src/app/core/services/routing.service';\n\nenum FormTypes {\n  login = 'Login',\n  join = 'Join'\n}\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n  readonly FormTypes = FormTypes;\n\n\n  public formType: FormTypes = FormTypes.login;\n\n  constructor(private routingService: RoutingService ) { }\n\n  ngOnInit(): void {\n    this.routingService.updateHeader('Login');\n  }\n\n  clickInfo() {\n    console.warn('not yet implement');\n  }\n\n  switchForm(formType: FormTypes) {\n    this.formType = formType;\n  }\n\n}\n","<div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-between start\">\n  <div fxFlex class=\"widget-container login-widget shadow-border\">\n    <app-login\n      *ngIf=\"formType === FormTypes.login\"\n      (joinRequest)=\"switchForm(FormTypes.join)\"\n    ></app-login>\n    <app-join\n      *ngIf=\"formType === FormTypes.join\"\n      (loginRequest)=\"switchForm(FormTypes.login)\"\n    ></app-join>\n  </div>\n  <div\n    fxFlex\n    ngClass.xs=\"info_conto_flex--xs\"\n    ngClass.gt-xs=\"info_conto_flex--gt-xs\"\n  >\n    <app-big-button\n      class=\"info_conto\"\n      label=\"Info Conto\"\n      icon=\"info\"\n      (clickEmitter)=\"clickInfo()\"\n    ></app-big-button>\n  </div>\n</div>\n<div fxLayout class=\"footer\">\n  <div class=\"widget-container shadow-border spam-widget\">\n    <app-banner></app-banner>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './features/home/home.component';\nimport { LoginPageComponent } from './features/login-page/login-page.component';\nimport { TemplateComponent } from './features/template/template.component';\nimport { AuthGuard } from './core/guards/auth-guard.service';\nimport { NoLoginGuard } from './core/guards/no-login-guard.service';\nimport { PaymentsComponent } from './features/payments/payments.component';\nimport { RoutersPath } from './core';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TemplateComponent,\n    children: [\n      {\n        path: RoutersPath.base,\n        redirectTo: '/login',\n        pathMatch: 'full'\n      },\n      {\n        path: RoutersPath.home,\n        component: HomeComponent,\n        canActivate: [AuthGuard],\n      },\n      {\n        path: RoutersPath.login,\n        component: LoginPageComponent,\n        canActivate: [NoLoginGuard],\n      },\n      {\n        path: RoutersPath.payment,\n        component: PaymentsComponent,\n        canActivate: [AuthGuard],\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { BarcodeFormat } from '@zxing/library';\nimport { ZXingScannerComponent } from '@zxing/ngx-scanner';\nimport { BehaviorSubject } from 'rxjs';\nimport { ClienteService, CUSTOM_ERROR, PrezzoService } from 'src/app/core';\n\n@Component({\n  selector: 'app-qr-code',\n  templateUrl: './qr-code.component.html',\n  styleUrls: ['./qr-code.component.scss']\n})\nexport class QrCodeComponent implements OnInit {\n\n  /** standard accettati dal lettore */\n  readonly allowedFormats = [ BarcodeFormat.QR_CODE, BarcodeFormat.EAN_13];\n  availableDevices: MediaDeviceInfo[];\n  currentDevice: MediaDeviceInfo = null;\n\n  /**\n   * scanner.\n   * documentazione: https://github.com/zxing-js/ngx-scanner/wiki/Advanced-Usage\n   */\n  @ViewChild(ZXingScannerComponent)\n  scanner: ZXingScannerComponent;\n\n  /** determina se è riuscito ad aprire o meno lo scanner */\n  statusScanner$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(private clienteService: ClienteService, private pagamentoService: PrezzoService) { }\n\n  ngOnInit() { }\n\n  /** alla lettura dello stato prova ad effettuare il login */\n  scanSuccessHandler(token: string) {\n    this.scanner.enable = false;\n    this.clienteService.getClienteByToken(token).subscribe(result => {\n      if (result.type !== CUSTOM_ERROR) {\n        this.pagamentoService.handlePagamento();\n      } else {\n        this.scanner.enable = true;\n      }\n\n    });\n  }\n\n  onCamerasFound(devices: MediaDeviceInfo[]): void {\n    this.availableDevices = devices;\n\n    if (this.availableDevices && this.availableDevices.length > 0) {\n      this.currentDevice = this.availableDevices[0];\n    }\n  }\n\n  /** modifica lo stato del reader, che indica se è in funzione o ha dei problemi in esecuzione */\n  readerStatus(status: boolean) {\n    this.statusScanner$.next(status);\n  }\n}\n","<!-- scanner -->\n<div [hidden]=\"!(statusScanner$ | async)\">\n  <zxing-scanner\n    class=\"qr-reader\"\n    [(device)]=\"currentDevice\"\n    [formats]=\"allowedFormats\"\n    (camerasFound)=\"onCamerasFound($event)\"\n    (scanSuccess)=\"scanSuccessHandler($event)\"\n    (permissionResponse)=\"readerStatus($event)\"\n    [tryHarder]=\"true\"\n  ></zxing-scanner>\n</div>\n\n<!-- gestione in caso di scanner disabilitato o non funzionante -->\n<div [hidden]=\"statusScanner$ | async\">\n  <mat-icon svgIcon=\"qrcode\" class=\"qr-icon\"></mat-icon>\n  <div class=\"qr-message\">abilitare il lettore qrcode.</div>\n</div>\n"]}