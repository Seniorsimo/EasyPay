{"version":3,"sources":["./src/app/features/recharge/recharge.module.ts","./src/app/shared/components/price-widget/price-widget.component.ts","./src/app/shared/components/price-widget/price-widget.component.html","./src/app/features/home/home.component.ts","./src/app/features/home/home.component.html","./src/app/shared/constants/login-type.enum.ts","./src/app/core/services/local-storage.service.ts","./src/app/shared/pipes/min.pipe.ts","./src/app/shared/components/join/parts/abstract-join-part/abstract-join-part.component.ts","./src/app/shared/components/join/parts/abstract-join-part/abstract-join-part.component.html","./src/app/shared/components/loader/loader.component.ts","./src/app/shared/components/loader/loader.component.html","./src/app/features/login-page/services/login.service.ts","./src/app/core/http-interceptors/auth.interceptor.ts","./src/app/core/services/routing.service.ts","./src/app/features/movements/movements.module.ts","./src/app/core/constants/routing.constants.ts","./src/app/features/recharge/components/dialog-recharge/dialog-recharge.component.ts","./src/app/features/recharge/components/dialog-recharge/dialog-recharge.component.html","./src/environments/environment.ts","./src/app/shared/components/login/login.component.ts","./src/app/shared/components/login/login.component.html","./src/app/shared/components/info-dialog/info-dialog.component.ts","./src/app/shared/components/info-dialog/info-dialog.component.html","./src/app/shared/components/join/parts/join-part3/join-part3.component.ts","./src/app/shared/components/join/parts/join-part3/join-part3.component.html","./src/app/features/login-page/store/auth.store.ts","./src/app/shared/index.ts","./src/app/features/template/template.component.ts","./src/app/features/template/template.component.html","./src/app/shared/components/nfc/nfc.component.ts","./src/app/shared/components/nfc/nfc.component.html","./src/app/shared/shared.module.ts","./src/app/core/services/cliente.service.ts","./src/app/features/payments/payments.component.ts","./src/app/features/payments/payments.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/components/error/error.component.ts","./src/app/shared/components/error/error.component.html","./src/app/core/services/movimento.service.ts","./src/app/shared/directives/numeric.directive.ts","./src/app/app.module.ts","./src/app/features/template/template.module.ts","./src/app/features/movements/movements.component.ts","./src/app/features/movements/movements.component.html","./src/app/shared/components/banner/banner.component.ts","./src/app/shared/components/banner/banner.component.html","./src/app/features/payments/payments.module.ts","./src/app/core/index.ts","./src/app/features/home/home.module.ts","./src/app/shared/components/join/parts/join-part1/join-part1.component.ts","./src/app/shared/components/join/parts/join-part1/join-part1.component.html","./src/app/features/login-page/login-page.module.ts","./src/app/core/utils/custom-validator.ts","./src/app/features/recharge/recharge.component.ts","./src/app/features/recharge/recharge.component.html","./src/app/shared/components/pin/pin.component.ts","./src/app/shared/components/pin/pin.component.html","./src/app/shared/components/join/join.component.ts","./src/app/shared/components/join/join.component.html","./src/app/shared/components/join/parts/join-part0/join-part0.component.ts","./src/app/shared/components/join/parts/join-part0/join-part0.component.html","./src/app/core/guards/auth-guard.service.ts","./src/app/core/guards/no-login-guard.service.ts","./src/app/shared/components/recognition/recognition.component.ts","./src/app/shared/components/recognition/recognition.component.html","./src/app/core/services/loader.service.ts","./src/app/shared/components/join/parts/join-dashboard/join-dashboard.component.ts","./src/app/shared/components/join/parts/join-dashboard/join-dashboard.component.html","./src/app/shared/pipes/switch-number.pipe.ts","./src/app/shared/components/big-button/big-button.component.ts","./src/app/shared/components/big-button/big-button.component.html","./src/app/core/core.module.ts","./src/app/shared/components/info-widget/info-widget.component.ts","./src/app/shared/components/info-widget/info-widget.component.html","./src/app/shared/components/join/parts/join-part2/join-part2.component.ts","./src/app/shared/components/join/parts/join-part2/join-part2.component.html","./src/app/core/store/self.store.ts","./src/app/shared/components/error-page/error-page.component.ts","./src/app/shared/components/error-page/error-page.component.html","./src/app/features/payments/components/dialog-payment/dialog-payment.component.ts","./src/app/features/payments/components/dialog-payment/dialog-payment.component.html","./src/app/features/login-page/login-page.component.ts","./src/app/features/login-page/login-page.component.html","./src/app/shared/info-atm/info-atm.component.ts","./src/app/shared/info-atm/info-atm.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/shared/components/qr-code/qr-code.component.ts","./src/app/shared/components/qr-code/qr-code.component.html","./src/app/core/constants/utente-type.enum.ts"],"names":[],"mappings":"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","file":"main-es2015.49fdad1c9b78aee14dbf.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from 'src/app/shared';\n\nimport { DialogRechargeComponent } from './components/dialog-recharge/dialog-recharge.component';\nimport { RechargeComponent } from './recharge.component';\n\n\n\n@NgModule({\n  declarations: [RechargeComponent, DialogRechargeComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n  ]\n})\nexport class RechargeModule { }\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\n\n@Component({\n  selector: 'app-price-widget',\n  templateUrl: './price-widget.component.html',\n  styleUrls: ['./price-widget.component.scss']\n})\nexport class PriceWidgetComponent implements OnInit {\n\n  @Input() title: string;\n  /** nome del bottone da cliccare */\n  @Input() operationLabel: string;\n  /** flag che fa apparire il tasto per la fattura elettronica */\n  @Input() canInvoice: boolean;\n\n  @Output() payStatus = new EventEmitter<{price: string, date: string, invoice: string}>();\n\n  formCrl: FormGroup;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.formCrl = this.fb.group({\n      price: this.fb.control('', [Validators.required]),\n      date: this.fb.control({value: this.getDateNow(), disabled: true}, [Validators.required]),\n      invoice: this.fb.control(false, []),\n    });\n  }\n\n  private getDateNow() {\n    return new Date().toISOString().substr(0, 10);\n  }\n\n  /** effettua l'azione di submit del bottone */\n  makeAction(submit: MatButton) {\n    if (!this.formCrl.invalid) {\n      // NOTA: date non è incluso in formCtr perchè è disabilitato\n      this.payStatus.emit({...this.formCrl.value, date: this.getDateNow()});\n      this.formCrl.disable();\n      submit.disabled = true;\n    }\n  }\n\n}\n","<h1 class=\"title\" style=\"margin-top: 20px;\">{{ title }}</h1>\n\n<form class=\"form\" [formGroup]=\"formCrl\">\n  <div class=\"flex-container\">\n    <div class=\"inputs-pay\">\n      <div>\n        <mat-form-field class=\"middle-width\">\n          <mat-label>Prezzo</mat-label>\n          <input matInput type=\"number\" formControlName=\"price\" />\n        </mat-form-field>\n      </div>\n      <div>\n        <mat-form-field class=\"middle-width\">\n          <mat-label>Data</mat-label>\n          <input matInput type=\"date\" formControlName=\"date\" />\n        </mat-form-field>\n      </div>\n    </div>\n    <div class=\"inputs-button\">\n      <span *ngIf=\"canInvoice !== false\"  style=\"margin: 0 5px 5px 40px\">\n        <mat-checkbox formControlName=\"invoice\">Fattura elettronica</mat-checkbox>\n      </span>\n      <span>\n        <button #submit mat-raised-button color=\"primary\" (click)=\"makeAction(submit)\">{{operationLabel}}</button>\n      </span>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from '@angular/material/snack-bar';\nimport { asyncScheduler, scheduled } from 'rxjs';\nimport { mergeAll, map } from 'rxjs/operators';\nimport { ClienteService } from 'src/app/core';\nimport { UtenteType } from 'src/app/core/constants/utente-type.enum';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { SelfStore } from 'src/app/core/store/self.store';\nimport { InfoDialogComponent } from 'src/app/shared/components/info-dialog/info-dialog.component';\nimport { Cliente } from 'src/app/shared/models/cliente.model';\nimport { Conto } from 'src/app/shared/models/conto.model';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  readonly buttonWidth = '400px';\n  readonly buttonHeight = '250px';\n\n  private readonly toastConfig = {\n    horizontalPosition: 'center' as MatSnackBarHorizontalPosition,\n    verticalPosition: 'top' as MatSnackBarVerticalPosition,\n    panelClass: 'toast-warning',\n  };\n\n  constructor(\n    private routingService: RoutingService,\n    private selfStore: SelfStore,\n    private clienteService: ClienteService,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.routingService.updateHeader('Home');\n    if (!this.selfStore.email || !this.selfStore.budget) {\n      scheduled([\n        this.clienteService.getSelfClient(),\n        this.clienteService.getSelfConto(),\n      ], asyncScheduler).pipe(\n        mergeAll(),\n        map((element) => {\n          if (this.isSelfCliente(element)) {\n            this.selfStore.updateCliente(element as Cliente);\n          } else if (this.isSelfConto(element)) {\n            this.selfStore.updateConto(element as Conto);\n          }\n        })\n      )\n      .subscribe(() => this.handleCustomerPermission());\n    } else {\n      this.handleCustomerPermission();\n    }\n  }\n\n  gotoPayment() {\n    this.routingService.gotoPayment();\n  }\n\n  gotoRecharge() {\n    this.routingService.gotoRecharge();\n  }\n\n  gotoMovements() {\n    this.routingService.gotoMovements();\n  }\n\n  /** verifica che il cliente sia un mercante */\n  isMercant(): boolean {\n    return this.selfStore.type === UtenteType.commerciante;\n  }\n\n  getInfoDialog() {\n    const dialogRef = this.dialog.open(InfoDialogComponent);\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n\n  /**\n   * verifica che il login abbia restituito un commerciante, altrimenti blocca l'atm chiedendo un upgrade\n   */\n  private handleCustomerPermission() {\n    if (!this.isMercant()) {\n      // warning: che serve un accesso da commerciante\n      this.snackBar.open('Per usare l\\'ATM è necessario un account da commerciante. Aggiorna il tuo profilo', 'Undo', this.toastConfig);\n    }\n  }\n\n  /** verifica se l'oggetto passato è un cliente */\n  private isSelfCliente(cliente): boolean {\n    return cliente && cliente.email;\n  }\n\n    /** verifica se l'oggetto passato è un conto */\n    private isSelfConto(conto): boolean {\n      return conto && conto.budget;\n    }\n}\n","<div class=\"container\">\n  <div class=\"element\">\n    <app-big-button\n      class=\"button\"\n      label=\"Pagamento\"\n      icon=\"euro\"\n      [disabled]=\"!isMercant()\"\n      (clickEmitter)=\"gotoPayment()\"\n    >\n    </app-big-button>\n  </div>\n  <div class=\"element\">\n    <app-big-button\n      class=\"button\"\n      label=\"Info Conto\"\n      icon=\"info\"\n      (clickEmitter)=\"getInfoDialog()\"\n    ></app-big-button>\n  </div>\n</div>\n<div class=\"container\">\n  <div class=\"element\">\n    <app-big-button\n      class=\"button\"\n      label=\"Ricarica\"\n      icon=\"publish\"\n      [disabled]=\"!isMercant()\"\n      (clickEmitter)=\"gotoRecharge()\"\n    ></app-big-button>\n  </div>\n  <div class=\"element\">\n    <app-big-button\n      class=\"button\"\n      label=\"Movimenti\"\n      icon=\"account_balance_wallet\"\n      [disabled]=\"!isMercant()\"\n      (clickEmitter)=\"gotoMovements()\"\n    ></app-big-button>\n  </div>\n</div>\n\n<div class=\"container\">\n  <div class=\"full-element\">\n    <app-banner></app-banner>\n  </div>\n</div>\n","export enum LoginType {\n  pin= 'PIN',\n  qr= 'QR',\n  nfc= 'NFC',\n  success= 'SUCCESS',\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n\n  constructor() { }\n\n  public getItem(name: string) {\n    const item = localStorage.getItem(name);\n    return JSON.parse(!item || item === 'undefined' ? null : item);\n  }\n\n  public setItem(name: string, value: any) {\n    if (value === undefined) {\n      localStorage.removeItem(name);\n    } else {\n      localStorage.setItem(name, JSON.stringify(value));\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isNumber } from 'util';\n\n/**\n * restituisce il minimo tra i due valori passati\n */\n@Pipe({\n  name: 'min'\n})\nexport class MinPipe implements PipeTransform {\n\n  transform(values: number[], ...args: unknown[]): number {\n    if (!Array.isArray(values)) {\n      console.error('MinPipe richiede la presenza di un array di numeri per funzionare');\n      console.error(values);\n      return -1;\n    }\n    if (values.some(n => !(typeof n === 'number'))) {\n      console.error('MinPipe richiede che l\\'array contenga valori numerici');\n      console.error(values);\n      return -1;\n    }\n    return Math.min(...values);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-abstract-join-part',\n  templateUrl: './abstract-join-part.component.html',\n  styleUrls: ['./abstract-join-part.component.scss']\n})\nexport abstract class AbstractJoinPartComponent implements OnInit {\n\n  /** controller del form */\n  formCrl: FormGroup;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  validate() {\n    if (this.formCrl.valid) {\n      return true;\n    } else {\n      this.validateAllFormFields(this.formCrl);\n      return false;\n    }\n  }\n\n  abstract getValue(): object;\n\n  private validateAllFormFields(formGroup: FormGroup) {\n    Object.keys(formGroup.controls).forEach((field) => {\n      const control = formGroup.get(field);\n      if (control instanceof FormControl) {\n        control.markAsTouched({ onlySelf: true });\n      } else if (control instanceof FormGroup) {\n        this.validateAllFormFields(control);\n      }\n    });\n  }\n\n}\n","<p>abstract-join-part works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<img src=\"assets/loader.gif\" alt=\"loader\">\n<mat-icon svgIcon=\"bank\" class=\"logo\"></mat-icon>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { ApiRoute } from '../../../core';\nimport { AuthStore } from '../store/auth.store';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n\n  constructor(private http: HttpClient, private authStore: AuthStore) {}\n\n\n  getToken(email: string, password: string) {\n    const params = { email, password };\n    return this.http.post<{ token: string }>(ApiRoute.login, params).pipe(\n      map((response) => {\n        if (response && response.token) {\n          this.authStore.token = response.token;\n          return response.token;\n        }\n        return '';\n      }),\n      catchError(error => {\n        throw(error);\n      })\n    );\n  }\n\n  /** */\n  logout() {\n    return this.http.post(ApiRoute.logout, {}).pipe(\n      map((response) => {\n        if (response) {\n          this.authStore.token = undefined;\n        }\n        return true;\n      }),\n      catchError(error => {\n        console.error(error);\n        this.authStore.token = undefined;\n        return of(false);\n      })\n    );\n  }\n}\n","import { HTTP_INTERCEPTORS, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { AuthStore } from '../../features/login-page/store/auth.store';\n\n/** Pass untouched request through to the next request handler. */\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n\n  constructor(private authStore: AuthStore, private router: Router) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const authReq = req.clone({\n      headers: req.headers.set('Authorization', this.authStore.token || '')\n    });\n    return next.handle(authReq)\n    .pipe(\n      // filter((response: HttpResponse<any>) => ),\n      map( (response: HttpResponse<any>) => {\n          if ( response && response.status === 403) {\n            console.error('Token di accesso scaduto, logout!');\n            this.authStore.token = undefined;\n            this.router.navigate([]);\n          }\n          return response;\n      })\n    );\n  }\n}\n\n/** Http interceptor providers in outside-in order */\nexport const httpInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n];\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { RoutersPath } from '../constants/routing.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoutingService {\n\n  activeSection = '';\n  activeSection$ = new Subject<string>();\n\n\n  constructor(private router: Router) { }\n\n\n  /** gestisce l'header nel TemplateComponent */\n  updateHeader(text: string) {\n    this.activeSection = text;\n    this.activeSection$.next(text);\n  }\n\n  gotoHome() {\n    this.router.navigate([RoutersPath.home]);\n  }\n\n  gotoLogin() {\n    this.router.navigate([RoutersPath.login]);\n  }\n\n  gotoPayment() {\n    this.router.navigate([RoutersPath.payment]);\n  }\n\n  gotoRecharge() {\n    this.router.navigate([RoutersPath.recharge]);\n  }\n\n  gotoMovements() {\n    this.router.navigate([RoutersPath.movements]);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MovementsComponent } from './movements.component';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { SharedModule } from 'src/app/shared';\nimport {MatTableModule} from '@angular/material/table';\n\n\n@NgModule({\n  declarations: [MovementsComponent],\n  imports: [\n    CommonModule,\n    CoreModule,\n    SharedModule,\n    MatTableModule,\n  ]\n})\nexport class MovementsModule { }\n","import { environment } from 'src/environments/environment';\n\nexport const RoutersPath = {\n  base: '',\n  home: 'home',\n  login: 'login',\n  payment: 'payments',\n  recharge: 'recharges',\n  movements: 'movements',\n  // reload: 'reload'\n};\n\nexport const baseUrl = environment.apiUrl;\n\nexport const ApiRoute = {\n  login: baseUrl + 'api/login',\n  logout: baseUrl + 'api/logout',\n  clienti: baseUrl + 'api/clienti',\n  movimenti: baseUrl + 'api/movimenti',\n  pagamenti: baseUrl + 'api/pagamenti',\n  ricariche: baseUrl + 'api/ricariche',\n  conti: baseUrl + 'api/conti',\n\n};\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MovimentoService } from 'src/app/core';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { SelfStore } from 'src/app/core/store/self.store';\nimport { DialogData } from 'src/app/features/payments/payments.component';\nimport { Cliente } from 'src/app/shared/models/cliente.model';\n\n@Component({\n  selector: 'app-dialog-recharge',\n  templateUrl: './dialog-recharge.component.html',\n  styleUrls: ['./dialog-recharge.component.scss']\n})\nexport class DialogRechargeComponent {\n\n\n  public cliente: Cliente;\n  public priceInfo: DialogData['priceInfo'];\n\n  constructor(\n    private dialogRef: MatDialogRef<DialogRechargeComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: DialogData,\n    private movimentoService: MovimentoService,\n    private selfStore: SelfStore,\n    private routingService: RoutingService,\n    private snackBar: MatSnackBar,\n  ) {\n    this.cliente = data.cliente;\n    this.priceInfo = data.priceInfo;\n  }\n\n  completeRecharge() {\n    this.movimentoService\n      .ricarica(this.cliente.idConto, this.selfStore.idConto, this.priceInfo.price)\n      .subscribe(() => {\n        // ricarica avvenuto con successo\n        this.openSnackBar('ricarica effettuata con successo', 'success');\n      },\n      (error) => {\n        // errore nel ricarica\n        this.openSnackBar('ricarica fallita', 'failure');\n        console.error(error);\n      },\n      // complete\n      () => {\n        this.dialogRef.close();\n        this.routingService.gotoHome();\n      });\n  }\n\n  undo() {\n    this.dialogRef.close();\n    window.location.reload();\n  }\n\n  private openSnackBar(message: string, cssClass?: string) {\n    this.snackBar.open(message, 'chiudi', {\n      // verticalPosition: MatSnackBarVerticalPosition,\n      // horizontalPosition: MatSnackBarHorizontalPosition,\n      panelClass: ['rechargetost', cssClass],\n      //duration: 10000,\n    });\n  }\n}\n","<div>\n  <h2>Confermi l'operazione?</h2>\n  <div class=\"container\">\n    <button class=\"marg\" mat-raised-button color=\"primary\" (click)=\"completeRecharge()\">PROSEGUI</button>\n    <button class=\"marg\" mat-raised-button color=\"secondary\" (click)=\"undo()\">INDIETRO</button>\n  </div>\n\n</div>\n","/** enviroment della build per il testing */\nexport const environment = {\n  production: false,\n  enviromentName: 'Application',\n  apiUrl: '/',\n};\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarRef,\n  MatSnackBarVerticalPosition,\n  TextOnlySnackBar,\n} from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { RoutersPath } from 'src/app/core';\nimport { LoginService } from 'src/app/features/login-page/services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  /** controller del form */\n  formCrl: FormGroup;\n\n  @Output() joinRequest = new EventEmitter<void>();\n\n  private errorToastRef: MatSnackBarRef<TextOnlySnackBar> = null;\n\n  private readonly toastConfig = {\n    horizontalPosition: 'center' as MatSnackBarHorizontalPosition,\n    verticalPosition: 'top' as MatSnackBarVerticalPosition,\n    panelClass: 'toast-error',\n  };\n\n  constructor(\n    private fb: FormBuilder,\n    private loginService: LoginService,\n    private router: Router,\n    private snackBar: MatSnackBar\n  ) {\n    this.formCrl = this.fb.group({\n      email: this.fb.control('', [Validators.required, Validators.email]),\n      password: this.fb.control('', [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(16),\n      ]),\n    });\n  }\n\n  ngOnInit() {}\n\n  login() {\n    this.loginService\n      .getToken(this.formCrl.value.email, this.formCrl.value.password)\n      .subscribe(\n        (token) => {\n          if (this.errorToastRef) {\n            this.errorToastRef.dismiss();\n          }\n          return this.router.navigate([RoutersPath.home], {});\n        },\n        (error: HttpErrorResponse) => {\n          if (error && error.status) {\n            if (error.status === 401) {\n                this.errorToastRef = this.snackBar.open(\n                'Dati per il login errati!',\n                'Undo',\n                this.toastConfig\n              );\n            }\n          } else {\n            console.error(error);\n            this.snackBar.open(\n              'Errore generico durante il login!',\n              'Undo',\n              this.toastConfig\n            );\n          }\n        }\n      );\n  }\n\n  join() {\n    this.joinRequest.next();\n  }\n}\n","<div>\n  <form class=\"form\" [formGroup]=\"formCrl\">\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput placeholder=\"email*\" formControlName=\"email\" />\n        <mat-error *ngIf=\"formCrl.controls['email'].hasError('required')\"> Email <strong>obbligatoria</strong> </mat-error>\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput type=\"password\" placeholder=\"Password*\" formControlName=\"password\"/>\n        <mat-error *ngIf=\"formCrl.controls['password'].hasError('minLength') || formCrl.controls['password'].hasError('maxLength') || formCrl.controls['password'].hasError('numeric')\">\n          il pin è composto da 4-16 cifre <strong>numeriche</strong>\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['password'].hasError('required')\"> pin obbligatorio per il login </mat-error>\n      </mat-form-field>\n    </div>\n    <div class=\"login\">\n        <button mat-button color=\"primary\" [disabled]=\"formCrl.status === 'INVALID'\" (click)=\"login()\">Login</button>\n    </div>\n    <div class=\"join\">\n      <button mat-button color=\"primary\" (click)=\"join()\">Crea un nuovo account</button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { asyncScheduler, scheduled } from 'rxjs';\nimport { map, mergeAll } from 'rxjs/operators';\nimport { ClienteService } from 'src/app/core';\nimport { UtenteType } from 'src/app/core/constants/utente-type.enum';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { SelfStore } from 'src/app/core/store/self.store';\nimport { Cliente } from '../../models/cliente.model';\nimport { Conto } from '../../models/conto.model';\n\n@Component({\n  selector: 'app-info-dialog',\n  templateUrl: './info-dialog.component.html',\n  styleUrls: ['./info-dialog.component.scss']\n})\nexport class InfoDialogComponent implements OnInit {\n\n  constructor(public selfStore: SelfStore, private clienteService: ClienteService, private routingService: RoutingService) { }\n\n  ngOnInit(): void {\n    if (!this.selfStore.email || !this.selfStore.budget) {\n      scheduled([\n        this.clienteService.getSelfClient(),\n        this.clienteService.getSelfConto(),\n      ], asyncScheduler).pipe(\n        mergeAll(),\n        map((element) => {\n          if (this.isSelfCliente(element)) {\n            this.selfStore.updateCliente(element as Cliente);\n          } else if (this.isSelfConto(element)) {\n            this.selfStore.updateConto(element as Conto);\n          }\n        })\n      )\n      .subscribe(() => this.handleCustomerPermission());\n    }\n  }\n\n  /** verifica che il cliente sia un mercante */\n  isMercant(): boolean {\n    return this.selfStore.type === UtenteType.commerciante;\n  }\n\n  /**\n   * verifica che il login abbia restituito un commerciante, altrimenti blocca l'atm chiedendo un upgrade\n   */\n  private handleCustomerPermission() {\n    if (!this.isMercant()) {\n      this.routingService.gotoHome();\n    }\n  }\n\n  /** verifica se l'oggetto passato è un cliente */\n  private isSelfCliente(cliente): boolean {\n    return cliente && cliente.email;\n  }\n\n  /** verifica se l'oggetto passato è un conto */\n  private isSelfConto(conto): boolean {\n    return conto && conto.budget;\n  }\n\n}\n","<h2 mat-dialog-title>Informazioni ATM</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <div class=\"info\">\n    <div class=\"labels\">\n      <div class=\"info--id label\">Identificativo Utente:</div>\n      <div class=\"info--name label\">Nome:</div>\n      <div class=\"info--cf label\">CF:</div>\n      <div class=\"info--birth-date label\">Data nascita:</div>\n      <div class=\"info--email label\">Email:</div>\n      <div class=\"info--rag label\">Ragione Sociale:</div>\n      <div class=\"info--piva label\">P.Iva:</div>\n      <div class=\"info--addr label\">Indirizzo:</div>\n      <div class=\"info--phone label\">Tel.:</div>\n      <div class=\"info--conto label\">Num. Conto:</div>\n      <div class=\"info--saldo label\">Saldo:</div>\n    </div>\n    <div class=\"values\">\n      <div class=\"info--id value\">{{selfStore.id || '-'}}</div>\n      <div class=\"info--name value\">{{selfStore.cognome}} {{selfStore.nome}} </div>\n      <div class=\"info--cf value\">{{selfStore.cf}}</div>\n      <div class=\"info--birth-date value\">{{selfStore.birthDate}}</div>\n      <div class=\"info--email value\">{{selfStore.email}}</div>\n      <div class=\"info--rag value\">{{selfStore.ragSociale}}</div>\n      <div class=\"info--piva value\">{{selfStore.pIva}}</div>\n      <div class=\"info--addr value\">{{selfStore.address || '-'}}</div>\n      <div class=\"info--phone value\">{{selfStore.phone || '-'}}</div>\n      <div class=\"info--conto value\">{{selfStore.idConto || '-'}}</div>\n      <div class=\"info--saldo value\">{{selfStore.saldo || '-'}}</div>\n    </div>\n  </div>\n\n  </mat-dialog-content>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ClienteService } from 'src/app/core';\nimport { RoutingService } from 'src/app/core/services/routing.service';\n\nenum StatusEnum {\n  waiting = 'waiting',\n  success = 'success',\n  failed = 'failed',\n}\n\n@Component({\n  selector: 'app-join-part3',\n  templateUrl: './join-part3.component.html',\n  styleUrls: ['./join-part3.component.scss']\n})\nexport class JoinPart3Component implements OnInit {\n  readonly StatusEnum = StatusEnum;\n\n  @Input() data: any;\n\n  status = StatusEnum.waiting;\n\n  constructor(private clienteService: ClienteService, private routingService: RoutingService) { }\n\n  ngOnInit(): void {\n    this.clienteService.register(this.data)\n    .subscribe({\n      next: () => {\n        this.status = StatusEnum.success;\n        setInterval(() => this.routingService.gotoHome(), 2000);\n      },\n      error: () => this.status = StatusEnum.failed\n    });\n  }\n\n}\n","<p *ngIf=\"status === StatusEnum.waiting\">in attesa della risposta del server...</p>\n<p *ngIf=\"status === StatusEnum.success\">registrazione completata con successo!</p>\n<p *ngIf=\"status === StatusEnum.failed\">registrazione fallita!</p>\n","import { Injectable } from '@angular/core';\nimport { LocalStorageService } from 'src/app/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthStore {\n\n  private pToken: string;\n\n\n  public get token() {\n    if (!this.pToken) {\n      this.pToken = this.localStorageService.getItem('token');\n    }\n    return this.pToken;\n  }\n\n  public set token(token) {\n    this.pToken = token;\n    this.localStorageService.setItem('token', token);\n  }\n\n  constructor(private localStorageService: LocalStorageService) { }\n\n}\n","export { SharedModule } from './shared.module';\n\nexport { LoginType } from './constants/login-type.enum';\n\nexport { QrCodeComponent } from './components/qr-code/qr-code.component';\nexport { NfcComponent } from './components/nfc/nfc.component';\nexport { PinComponent } from './components/pin/pin.component';\nexport { LoginComponent } from './components/login/login.component';\nexport { BigButtonComponent } from './components/big-button/big-button.component';\nexport { InfoWidgetComponent } from './components/info-widget/info-widget.component';\nexport { PriceWidgetComponent } from './components/price-widget/price-widget.component';\n\nexport { MinPipe } from './pipes/min.pipe';\nexport { SwitchNumberPipe } from './pipes/switch-number.pipe';\n\nexport { numericValidator, NumericDirective } from './directives/numeric.directive';\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { AuthStore } from '../login-page/store/auth.store';\nimport { LoginService } from '../login-page/services/login.service';\nimport { SelfStore } from 'src/app/core/store/self.store';\nimport { UtenteType } from 'src/app/core/constants/utente-type.enum';\n\n@Component({\n  selector: 'app-template',\n  templateUrl: './template.component.html',\n  styleUrls: ['./template.component.scss']\n})\nexport class TemplateComponent implements OnInit, OnDestroy {\n\n  public menuItems: { label: string, icon: string, clickEvent: () => void, isVisible: () => boolean, isEnable: () => boolean }[] = [\n    {\n      label: 'Home',\n      icon: 'more_vert',\n      clickEvent: () => this.routingService.gotoHome(),\n      isVisible: () => this.isLogin(),\n      isEnable: () => true,\n    },\n    {\n      label: 'Ricarica',\n      icon: 'publish',\n      clickEvent: () => this.routingService.gotoRecharge(),\n      isVisible: () => this.isLogin(),\n      isEnable: () => this.isMercant(),\n    },\n    {\n      label: 'Pagamento',\n      icon: 'euro',\n      clickEvent: () => this.routingService.gotoPayment(),\n      isVisible: () => this.isLogin(),\n      isEnable: () => this.isMercant(),\n    },\n    {\n      label: 'Movimenti',\n      icon: 'account_balance_wallet',\n      clickEvent: () => this.routingService.gotoMovements(),\n      isVisible: () => this.isLogin(),\n      isEnable: () => this.isMercant(),\n    },\n    {\n      label: 'Logout',\n      icon: 'lock',\n      clickEvent: () => this.logout(),\n      isVisible: () => this.isLogin(),\n      isEnable: () => true,\n    },\n  ];\n\n  actSection = this.routingService.activeSection;\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(public routingService: RoutingService, private authStore: AuthStore, private loginService: LoginService, private selfStore: SelfStore) {}\n\n  ngOnInit(): void {\n    this.subscriptions.push(\n      this.routingService.activeSection$.subscribe(activeSection =>\n        setTimeout(() => (this.actSection = activeSection), 0)\n      )\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n\n  isLogin(): boolean {\n    return !!this.authStore.token;\n  }\n\n  logout() {\n    this.loginService.logout().subscribe(() => {\n      this.selfStore.reset();\n      this.routingService.gotoLogin();\n    });\n  }\n\n  menuDisabled(): boolean {\n    return !this.menuItems.some((item) => item.isVisible());\n  }\n\n  isMercant(): boolean {\n    return this.selfStore.type === UtenteType.commerciante;\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"\" [disabled]=\"menuDisabled()\">\n      <mat-icon>more_vert</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n      <ng-container  *ngFor=\"let item of menuItems\">\n        <button\n          mat-menu-item\n          *ngIf=\"item.isVisible()\"\n          (click)=\"item.clickEvent()\"\n          [disabled]=\"!item.isEnable()\"\n        >\n          <mat-icon>{{ item.icon }}</mat-icon>\n          <span>{{ item.label }}</span>\n        </button>\n      </ng-container>\n    </mat-menu>\n\n    <span class=\"title-big\">EasyPay</span>\n    <span class=\"title-separe\"> --> </span>\n    <span class=\"title-activePage\"> {{ actSection }} </span>\n  </mat-toolbar-row>\n</mat-toolbar>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nfc',\n  templateUrl: './nfc.component.html',\n  styleUrls: ['./nfc.component.scss']\n})\nexport class NfcComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-icon svgIcon=\"nfc-variant\" class=\"nfc-icon\"></mat-icon>\n<div class=\"nfc-message\">passare il cellulare con nfc abilitato sul dispositivo per collegarsi</div>\n\n<div class=\"not-support\">(non supportato su questo dispositivo)</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\n\nimport { CoreModule } from '../core/core.module';\nimport { BannerComponent } from './components/banner/banner.component';\nimport { BigButtonComponent } from './components/big-button/big-button.component';\nimport { ErrorPageComponent } from './components/error-page/error-page.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { InfoDialogComponent } from './components/info-dialog/info-dialog.component';\nimport { InfoWidgetComponent } from './components/info-widget/info-widget.component';\nimport { JoinComponent } from './components/join/join.component';\nimport { JoinDashboardComponent } from './components/join/parts/join-dashboard/join-dashboard.component';\nimport { JoinPart0Component } from './components/join/parts/join-part0/join-part0.component';\nimport { JoinPart1Component } from './components/join/parts/join-part1/join-part1.component';\nimport { JoinPart2Component } from './components/join/parts/join-part2/join-part2.component';\nimport { JoinPart3Component } from './components/join/parts/join-part3/join-part3.component';\nimport { LoaderComponent } from './components/loader/loader.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { NfcComponent } from './components/nfc/nfc.component';\nimport { PinComponent } from './components/pin/pin.component';\nimport { PriceWidgetComponent } from './components/price-widget/price-widget.component';\nimport { QrCodeComponent } from './components/qr-code/qr-code.component';\nimport { RecognitionComponent } from './components/recognition/recognition.component';\nimport { NumericDirective } from './directives/numeric.directive';\nimport { MinPipe } from './pipes/min.pipe';\nimport { SwitchNumberPipe } from './pipes/switch-number.pipe';\nimport { InfoAtmComponent } from './info-atm/info-atm.component';\n\n@NgModule({\n  declarations: [\n    QrCodeComponent,\n    NfcComponent,\n    PinComponent,\n    NumericDirective,\n    LoaderComponent,\n    ErrorPageComponent,\n    ErrorComponent,\n    LoginComponent,\n    BigButtonComponent,\n    BannerComponent,\n    RecognitionComponent,\n    MinPipe,\n    SwitchNumberPipe,\n    InfoWidgetComponent,\n    JoinComponent,\n    JoinPart0Component,\n    JoinPart1Component,\n    JoinPart2Component,\n    JoinDashboardComponent,\n    JoinPart3Component,\n    PriceWidgetComponent,\n    InfoDialogComponent,\n    InfoAtmComponent,\n  ],\n  imports: [\n    CommonModule,\n    CoreModule,\n    ReactiveFormsModule,\n    ZXingScannerModule,\n    MatInputModule,\n    MatGridListModule,\n    MatButtonModule,\n    MatCardModule,\n    MatSliderModule,\n    MatRadioModule,\n    MatDividerModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatIconModule,\n    MatTableModule,\n  ],\n  exports: [\n    LoaderComponent,\n    ErrorComponent,\n    LoginComponent,\n    BigButtonComponent,\n    BannerComponent,\n    InfoAtmComponent,\n    RecognitionComponent,\n    MinPipe,\n    SwitchNumberPipe,\n    InfoWidgetComponent,\n    JoinComponent,\n    PriceWidgetComponent,\n    MatInputModule,\n    MatGridListModule,\n    MatButtonModule,\n    MatCardModule,\n    MatSliderModule,\n    MatRadioModule,\n    MatDividerModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatIconModule,\n    MatTableModule,\n  ],\n  entryComponents: [JoinPart0Component, JoinPart1Component, JoinPart2Component, JoinPart3Component, InfoDialogComponent, InfoAtmComponent],\n})\nexport class SharedModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { Cliente } from '../../shared/models/cliente.model';\nimport { UtenteType } from '../constants/utente-type.enum';\nimport { SelfStore } from '../store/self.store';\nimport { ApiRoute } from '../constants/routing.constants';\nimport { Conto } from '../../shared/models/conto.model';\nimport { ApiCliente } from '../api-models/api-cliente.model';\nimport { ApiConto } from '../api-models/api-conto.model';\nimport { ApiPostClienti } from '../api-models/api-post-cliente.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClienteService {\n\n  constructor(private http: HttpClient, private selfStore: SelfStore) {\n  }\n\n  getClienteByPin(id: string, pin: string): Observable<Cliente>  {\n    const params: {pin: string} =  { pin } ;\n    return this._getClient(id, params);\n  }\n\n  getClienteByTokenOtp(otp: string): Observable<Cliente> {\n    const id = '0'; // TODO: ottenere l'id dall' OTP\n    const params: {otp: string} = { otp };\n    return this._getClient(id, params);\n  }\n\n  /** restituisce  */\n  getSelfClient(): Observable<Cliente> {\n    return this.http.get<ApiCliente>(`${ApiRoute.clienti}/self`).pipe(\n      map(apiCliente => ({\n        type: UtenteType.cliente,\n        ...apiCliente,\n        id: apiCliente.id + '',\n        idConto: apiCliente.id_conto + '',\n        birthDate: apiCliente.birth_date,\n      }))\n    );\n  }\n\n  getSelfConto(): Observable<Conto> {\n    return this.http.get<ApiConto>(`${ApiRoute.conti}/self`).pipe(\n      map(apiConto => ({...apiConto, id: apiConto.id + '', idCliente: apiConto.id_cliente + '' } as Conto)),\n    );\n  }\n\n\n  register(data: ApiPostClienti): Observable<any> {\n    return this.http.post(ApiRoute.clienti, data);\n  }\n\n  /** effettua la richiesta HTTP per verificare se il login del cliente va a buon fine */\n  private _getClient(id: string, params: {pin?: string; otp?: string}): Observable<Cliente> {\n    return this.http.get<Cliente>(`${ApiRoute.clienti}/${id}`, {params}).pipe(\n        map(result => ({ type: UtenteType.cliente, ...result })),\n        // workaround per adattare la struttura cliente con quella ricevuta dal server\n        map((cliente: any) => ({...cliente, idConto: cliente.id_conto})),\n        catchError(error => { throw(error); })\n      );\n  }\n}\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { asyncScheduler, forkJoin, scheduled, Subject } from 'rxjs';\nimport { map, mergeAll } from 'rxjs/operators';\nimport { ClienteService } from 'src/app/core';\nimport { UtenteType } from 'src/app/core/constants/utente-type.enum';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { SelfStore } from 'src/app/core/store/self.store';\nimport { Cliente } from 'src/app/shared/models/cliente.model';\nimport { Conto } from 'src/app/shared/models/conto.model';\n\nimport { DialogPaymentComponent } from './components/dialog-payment/dialog-payment.component';\n\n\nexport interface DialogData {\n  cliente: Cliente;\n  priceInfo: { price: string; date: string; invoice: string };\n}\n\n\n@Component({\n  selector: 'app-payments',\n  templateUrl: './payments.component.html',\n  styleUrls: ['./payments.component.scss'],\n})\nexport class PaymentsComponent implements OnInit, AfterViewInit {\n  public a = new Subject<Cliente>();\n  public b = new Subject<{ price: string; date: string; invoice: string }>();\n\n  constructor(\n    private routingService: RoutingService,\n    public selfStore: SelfStore,\n    private clienteService: ClienteService,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    if (!this.selfStore.email || !this.selfStore.budget) {\n      scheduled([\n        this.clienteService.getSelfClient(),\n        this.clienteService.getSelfConto(),\n      ], asyncScheduler).pipe(\n        mergeAll(),\n        map((element) => {\n          if (this.isSelfCliente(element)) {\n            this.selfStore.updateCliente(element as Cliente);\n          } else if (this.isSelfConto(element)) {\n            this.selfStore.updateConto(element as Conto);\n          }\n        })\n      )\n      .subscribe(() => this.handleCustomerPermission());\n    } else {\n      this.handleCustomerPermission();\n    }\n    this.completePayment();\n  }\n\n  ngAfterViewInit() {\n    this.routingService.updateHeader('Pagamento');\n  }\n\n  authClientStatus(cliente: Cliente) {\n    this.a.next(cliente);\n    this.a.complete();\n  }\n\n  payStatus(status: { price: string; date: string; invoice: string }) {\n    this.b.next(status);\n    this.b.complete();\n  }\n\n  completePayment() {\n    forkJoin({ cliente: this.a, priceInfo: this.b }).subscribe(\n      ({ cliente, priceInfo }) => {\n        this.dialog.open(DialogPaymentComponent, {\n          data: { cliente, priceInfo },\n          disableClose: true,\n        });\n      }\n    );\n  }\n\n  /** verifica che il cliente sia un mercante */\n  isMercant(): boolean {\n    return this.selfStore.type === UtenteType.commerciante;\n  }\n\n\n  /**\n   * verifica che il login abbia restituito un commerciante, altrimenti blocca l'atm chiedendo un upgrade\n   */\n  private handleCustomerPermission() {\n    if (!this.isMercant()) {\n      this.routingService.gotoHome();\n    }\n  }\n\n  /** verifica se l'oggetto passato è un cliente */\n  private isSelfCliente(cliente): boolean {\n    return cliente && cliente.email;\n  }\n\n  /** verifica se l'oggetto passato è un conto */\n  private isSelfConto(conto): boolean {\n    return conto && conto.budget;\n  }\n}\n","<div class=\"flex-parent\">\n  <div class=\"flex widget-container shadow-border mb20 mr10\">\n    <app-recognition class=\"relative recognition\" (authClientStatus)=\"authClientStatus($event)\"></app-recognition>\n  </div>\n  <div class=\"flex widget-container shadow-border mb20 ml10\">\n    <app-info-widget\n      class=\" info-table\"\n      title=\"Personale\"\n      [numConto]=\"this.selfStore.idConto\"\n      [name]=\"this.selfStore.cognome +' '+ this.selfStore.nome\"\n      [regSocial]=\"this.selfStore.ragSociale\"\n      [address]=\"this.selfStore.address\"\n    ></app-info-widget>\n  </div>\n</div>\n\n<div class=\"flex-parent\">\n  <div class=\"widget-container shadow-border flex mb20\">\n    <app-price-widget title=\"Pagamento\" operationLabel=\"Paga\" [canInvoice]=\"true\" (payStatus)=\"payStatus($event)\"></app-price-widget>\n  </div>\n</div>\n\n<div class=\"flex-parent\">\n  <div class=\"widget-container shadow-border spam-widget\">\n    <app-banner></app-banner>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { LoadingStatus, LoaderService } from './core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  statusLoader$: BehaviorSubject<LoadingStatus>;\n\n  constructor(\n    public loaderService: LoaderService,\n  ) {\n    this.statusLoader$ = this.loaderService.status$;\n  }\n}\n","<div class=\"container\">\n  <!-- loader in attesa di recuperare il conto -->\n  <!-- <ng-container *ngIf=\"!(statusLoader$ | async)\">\n    <app-loader></app-loader>\n  </ng-container> -->\n  <router-outlet></router-outlet>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n  /** titolo della pagina di errore */\n  @Input() titleLabel: string;\n\n  /** contenuto html del messaggio di errore */\n  @Input() content: string;\n\n  /** oggetto errore da stampare se presente */\n  @Input() error;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<ng-container>\n  <h1 class=\"mb-0\">\n    <mat-icon svgIcon=\"alert-circle\" class=\"logo\"></mat-icon>\n  </h1>\n  <h2 class=\"logo-title mt-0\">{{titleLabel}}</h2>\n  <div [innerHTML]=\"content\"></div>\n\n  <p>{{ error | json }}</p>\n</ng-container>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ApiRoute } from '../constants/routing.constants';\nimport { ApiMovimento } from '../api-models/api-movimento.model';\nimport { Movimento } from 'src/app/shared/models/movimento.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovimentoService {\n\n  constructor(private http: HttpClient) { }\n\n\n  /** effettua un movimento di pagamento sul idContoCliente */\n  pagamento(idContoCliente: string, idContoCommerciante: string, prezzo: string) {\n    const params = {\n      from: idContoCliente,\n      to: idContoCommerciante,\n      value: prezzo,\n    };\n    return this.http.post<{ success: boolean; error?: { id: string; message: string } }>(ApiRoute.pagamenti, params).pipe(\n      map(result => {\n        console.error('TODO: gestire la risposta del pagamento');\n      })\n    );\n  }\n\n  /** effettua un movimento di caricamento sul cliente indicato da idCliente */\n  ricarica(idContoCliente: string, idContoCommerciante: string, prezzo: string) {\n    const params = {\n      from: idContoCommerciante,\n      to: idContoCliente,\n      value: prezzo,\n    };\n    return this.http.post<{ success: boolean; error?: { id: string; message: string } }>(ApiRoute.ricariche, params).pipe(\n      map(result => {\n        console.error('TODO: gestire la risposta del pagamento');\n      })\n    );\n  }\n\n  /**\n   * restituisce i movimenti del conto identificato\n   * @param conto id del conto che si vuole ricercare (può essere self)\n   * @param direction tipo di ordinamento\n   * @param from data di inizio periodo di ricerca (AAAA-MM-GG)\n   * @param to data di fine periodo di ricerca (AAAA-MM-GG)\n   */\n  getMovimenti(conto: string, direction: string= '', from: string= '', to: string= ''): Observable<Movimento[]> {\n    return this.http.get<ApiMovimento[]>(ApiRoute.movimenti, {params: {conto, direction, from, to}});\n  }\n\n  /**\n   * restituisce solo le ricariche del conto identificato\n   * @param conto id del conto che si vuole ricercare (può essere self)\n   * @param direction tipo di ordinamento\n   * @param from data di inizio periodo di ricerca (AAAA-MM-GG)\n   * @param to data di fine periodo di ricerca (AAAA-MM-GG)\n   */\n  getRicariche(conto: string, direction: string= '', from: string= '', to: string= ''): Observable<Movimento[]> {\n    return this.http.get<ApiMovimento[]>(ApiRoute.ricariche, {params: {conto, direction, from, to}});\n  }\n\n  /**\n   * restituisce solo i pagamenti del conto identificato\n   * @param conto id del conto che si vuole ricercare (può essere self)\n   * @param direction tipo di ordinamento\n   * @param from data di inizio periodo di ricerca (AAAA-MM-GG)\n   * @param to data di fine periodo di ricerca (AAAA-MM-GG)\n   */\n  getPagamenti(conto: string, direction: string= '', from: string= '', to: string= ''): Observable<Movimento[]> {\n    return this.http.get<ApiMovimento[]>(ApiRoute.pagamenti, {params: {conto, direction, from, to}});\n  }\n}\n","import { Directive } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator, ValidatorFn } from '@angular/forms';\n\n/** Validatore di caratteri numerici. ritorna */\nexport function numericValidator(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const isNumeric = new RegExp('^[0-9]*$').test(control.value);\n    return !isNumeric ? { 'numeric': { value: control.value } } : null;\n  };\n}\n\n/** Direttiva usata per validare se in un HTMLInput ha solo valori numerici */\n@Directive({\n  selector: '[appNumeric]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: NumericDirective, multi: true }]\n})\nexport class NumericDirective implements Validator {\n\n  validate(control: AbstractControl): { [key: string]: any } | null {\n    return  numericValidator()(control);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { LoginPageModule } from './features/login-page/login-page.module';\nimport { PaymentsModule } from './features/payments/payments.module';\nimport { TemplateModule } from './features/template/template.module';\nimport { SharedModule } from './shared';\nimport { RechargeModule } from './features/recharge/recharge.module';\nimport { HomeModule } from './features/home/home.module';\nimport { MovementsModule } from './features/movements/movements.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule.forRoot(),\n    AppRoutingModule,\n    SharedModule,\n    TemplateModule,\n    LoginPageModule,\n    HomeModule,\n    PaymentsModule,\n    RechargeModule,\n    MovementsModule,\n  ],\n  providers: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CoreModule } from '@angular/flex-layout';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from 'src/app/shared';\n\nimport { HomeModule } from '../home/home.module';\nimport { TemplateComponent } from './template.component';\n\n@NgModule({\n  declarations: [TemplateComponent],\n  imports: [\n    CommonModule,\n    CoreModule,\n    SharedModule,\n    HomeModule,\n    RouterModule,\n  ],\n  exports: [TemplateComponent],\n})\nexport class TemplateModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MovimentoService } from 'src/app/core';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { SelfStore } from 'src/app/core/store/self.store';\nimport { Movimento } from 'src/app/shared/models/movimento.model';\n\n@Component({\n  selector: 'app-movements',\n  templateUrl: './movements.component.html',\n  styleUrls: ['./movements.component.scss']\n})\nexport class MovementsComponent implements OnInit {\n\n  displayedColumns: string[] = ['id', 'valore', 'tipo', 'from_name', 'to_name'];\n\n  dataSource: Observable<Movimento[]>;\n\n  constructor(private movimentoService: MovimentoService, public selfStore: SelfStore, private routingService: RoutingService) { }\n\n  ngOnInit(): void {\n    this.routingService.updateHeader('Movimenti');\n    this.dataSource = this.movimentoService.getMovimenti('self');\n  }\n\n}\n","<div class=\"info\">\n  <div class=\"labels\">\n    <div class=\"info--conto label\">Conto:</div>\n    <div class=\"info--name label\">Intestatario:</div>\n    <div class=\"info--saldo label\">Saldo:</div>\n  </div>\n  <div class=\"values\">\n    <div class=\"info--conto value\">{{ selfStore.idConto || \"-\" }}</div>\n    <div class=\"info--name value\">{{selfStore.cognome}} {{selfStore.nome}} </div>\n    <div class=\"info--saldo value\">{{ selfStore.saldo || \"0\" }}</div>\n  </div>\n</div>\n\n<table mat-table [dataSource]=\"dataSource | async\" class=\"mat-elevation-z8\">\n  <!-- Id Column -->\n  <ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef>Ref.</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n  </ng-container>\n\n  <!-- Valore Column -->\n  <ng-container matColumnDef=\"valore\">\n    <th mat-header-cell *matHeaderCellDef>Valore</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.valore }} €</td>\n  </ng-container>\n\n  <!-- Tipo Column -->\n  <ng-container matColumnDef=\"tipo\">\n    <th mat-header-cell *matHeaderCellDef>Tipo</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.type }}</td>\n  </ng-container>\n\n  <!-- From Column -->\n  <ng-container matColumnDef=\"from_name\">\n    <th mat-header-cell *matHeaderCellDef>Da</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.from_name || \"-\" }}</td>\n  </ng-container>\n\n  <!-- To Column -->\n  <ng-container matColumnDef=\"to_name\">\n    <th mat-header-cell *matHeaderCellDef>A</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.to_name }}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.scss']\n})\nexport class BannerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"banner\">\n  <h1 class=\"title\">Paga 20 euro con EasyPay e riceverai un cashback di 5 euro*  </h1>\n  <p class=\"message\">\n    *offerta valida fino al 25 gennaio 2025 e per i nuovi abbonati e altri avvisi legali utili a far\n    sembrare questo banner un vero banner pubblicitario di una ipotetica promozione. I soldi verranno caricati sul conto entro 30 mesi\n    (perciò in questa demo non saranno realmente caricati).  Il seguente testo è inutile e al solo scopo illustrativo.\n    Mi scuso per la pessima resa grafica del Banner, ma la sua presenza è a puro scopo illustrativo. La prossima volta ci affideremo ad un grafico\n     per un banner più colorato e divertente.</p>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../../shared';\nimport { DialogPaymentComponent } from './components/dialog-payment/dialog-payment.component';\nimport { PaymentsComponent } from './payments.component';\n\n@NgModule({\n  declarations: [PaymentsComponent, DialogPaymentComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n  ],\n  exports: [PaymentsComponent]\n})\nexport class PaymentsModule { }\n","export * from './constants/routing.constants';\n\nexport { ClienteService } from './services/cliente.service';\nexport { LoaderService } from './services/loader.service';\nexport { LoadingStatus } from './services/loader.service';\nexport { LocalStorageService } from './services/local-storage.service';\nexport { MovimentoService } from './services/movimento.service';\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from 'src/app/shared';\n\nimport { HomeComponent } from './home.component';\nimport { CoreModule } from 'src/app/core/core.module';\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [CommonModule, SharedModule, CoreModule],\n  exports: [HomeComponent]\n})\nexport class HomeModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { isBorn, isOver18, isPhone } from 'src/app/core/utils/custom-validator';\n\nimport { AbstractJoinPartComponent } from '../abstract-join-part/abstract-join-part.component';\n\n@Component({\n  selector: 'app-join-part1',\n  templateUrl: './join-part1.component.html',\n  styleUrls: ['./join-part1.component.scss'],\n})\nexport class JoinPart1Component extends AbstractJoinPartComponent\n  implements OnInit {\n  constructor(private fb: FormBuilder) {\n    super();\n    this.formCrl = this.fb.group({\n      nome: this.fb.control('', [Validators.required]),\n      cognome: this.fb.control('', [Validators.required]),\n      cf: this.fb.control('', [Validators.required]),\n      bornDate: this.fb.control('', [Validators.required, isOver18, isBorn]),\n      phone: this.fb.control('', [isPhone]),\n      address: this.fb.control('', []),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  getValue() {\n    return {\n      nome: this.formCrl.controls.nome.value,\n      cognome: this.formCrl.controls.cognome.value,\n      cf: this.formCrl.controls.cf.value,\n      birth_date: this.formCrl.controls.bornDate.value,\n      phone: this.formCrl.controls.phone.value,\n      address: this.formCrl.controls.address.value,\n    };\n  }\n}\n","<div class=\"container\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n  <form class=\"form\" [formGroup]=\"formCrl\">\n    <div class=\"flex-element\">\n      <mat-form-field>\n        <input matInput placeholder=\"nome*\" formControlName=\"nome\" />\n        <mat-error *ngIf=\"formCrl.controls['nome'].hasError('required')\">\n          nome <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"flex-element\">\n      <mat-form-field>\n        <input matInput placeholder=\"cognome*\" formControlName=\"cognome\" />\n        <mat-error *ngIf=\"formCrl.controls['cognome'].hasError('required')\">\n          cognome <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"flex-element\">\n      <mat-form-field>\n        <input matInput placeholder=\"codice fiscale*\" formControlName=\"cf\" />\n        <mat-error *ngIf=\"formCrl.controls['cf'].hasError('required')\">\n          codice fiscale <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"flex-element\">\n      <mat-form-field>\n        <input\n          matInput\n          placeholder=\"data di nascita*\"\n          [matDatepicker]=\"bornDatePicker\"\n          formControlName=\"bornDate\"\n        />\n        <mat-datepicker-toggle\n          matSuffix\n          [for]=\"bornDatePicker\"\n        ></mat-datepicker-toggle>\n        <mat-datepicker #bornDatePicker></mat-datepicker>\n        <mat-error *ngIf=\"formCrl.controls['bornDate'].hasError('required') && !formCrl.controls['bornDate'].hasError('matDatepickerParse')\">\n          data di nascita <strong>obbligatoria</strong>.\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['bornDate'].hasError('matDatepickerParse')\">\n          formato della data errato.\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['bornDate'].hasError('isOver18')\">\n          l'utente deve essere maggiorenne\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['bornDate'].hasError('isBorn')\">\n          Sicuramente avremo offerte molto più belle per quando nascerai!\n        </mat-error>\n      </mat-form-field>\n    </div>\n    <div class=\"flex-element\">\n      <mat-form-field>\n        <input matInput placeholder=\"telefono\" formControlName=\"phone\" />\n        <mat-error *ngIf=\"formCrl.controls['phone'].hasError('required')\">\n          telefono <strong>obbligatorio</strong>\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['phone'].hasError('isPhone')\">\n          Il telefono accetta un formato +390000000000\n        </mat-error>\n\n      </mat-form-field>\n    </div>\n\n    <div class=\"flex-element\">\n      <mat-form-field>\n        <input matInput placeholder=\"indirizzo\" formControlName=\"address\" />\n        <mat-error *ngIf=\"formCrl.controls['address'].hasError('required')\">\n          address <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n  </form>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CoreModule } from 'src/app/core/core.module';\n\nimport { SharedModule } from '../../shared';\nimport { LoginPageComponent } from './login-page.component';\nimport { LoginService } from './services/login.service';\nimport { AuthStore } from './store/auth.store';\n\n@NgModule({\n  declarations: [LoginPageComponent],\n  imports: [CommonModule, SharedModule, CoreModule],\n  exports: [LoginPageComponent],\n  providers: [LoginService, AuthStore]\n})\nexport class LoginPageModule {}\n","import { AbstractControl } from '@angular/forms';\n// NOTA: apparentemente la risposta { [errorName]: false } viene cmq bloccata dal validatore.\n// Trick Solution: in caso di validatore corretto passo null.\n\n/** form validator per verificare se l'età inserita (presumibilmente di nascita) sia maggiore di 18 */\nexport function isOver18(control: AbstractControl): { [key: string]: boolean } {\n  const errorCode = 'isOver18';\n\n  if (control && control.value) {\n    const age = getBirthday(control.value);\n    return  age >= 0 && age < 18 ? { [errorCode]: true } : null;\n  }\n  return null;\n}\n\n/** form validator per verificare se lutente è effettivamente nato (anni >= 0) */\nexport function isBorn(control: AbstractControl): { [key: string]: boolean } {\n  const errorCode = 'isBorn';\n\n  if (control && control.value) {\n    const bornDate = control.value;\n    return Date.now() - bornDate.getTime() < 0 ? { [errorCode]: true } : null;\n  }\n  return null;\n}\n\n/** verifica che il formato del numero sia corretto  */\nexport function isPhone(control: AbstractControl): { [key: string]: boolean } {\n  const errorCode = 'isPhone';\n  if (control && control.value) {\n    const phone = control.value;\n    const test = new RegExp('\\+\\d{12}').test(phone);\n    return test ? { [errorCode]: true }  : null;\n\n  }\n  return null;\n}\n\n/** Verifica se è presente almeno un valore uppercase */\nexport function haveUppercase(control: AbstractControl): { [key: string]: boolean } {\n  const errorCode = 'haveUppercase';\n  if (control && control.value) {\n    const password = control.value;\n    const test = new RegExp('[A-Z]+', 'g').test(password);\n    return test ? { [errorCode]: true }  : null;\n  }\n  return null;\n}\n\n/** Verifica se è presente almeno un valore Lowercase */\nexport function haveLowercase(control: AbstractControl): { [key: string]: boolean } {\n  const errorCode = 'haveLowercase';\n  if (control && control.value) {\n    const password = control.value;\n    const test = new RegExp('[a-z]+', 'g').test(password);\n    return test ? { [errorCode]: true }  : null;\n  }\n  return null;\n}\n\n/** Verifica se è presente almeno un valore numerico */\nexport function haveDigit(control: AbstractControl): { [key: string]: boolean } {\n  const errorCode = 'haveUppercase';\n  if (control && control.value) {\n    const password = control.value;\n    const test = new RegExp('\\d+', 'g').test(password);\n    return test ? { [errorCode]: true }  : null;\n  }\n  return null;\n}\n\n\n\n\n/**\n * funzione che restituisce gli anni dell' utente\n * NOTA: funzione semplificata che non tiene conto di ora solare ed eventuali calcoli particolari sul calendario\n * ma sifficiente a scopo dimostrativo per questo progetto.\n */\nfunction getBirthday(bornDate: Date): number {\n  const ageDifMs = Date.now() - bornDate.getTime();\n  if(ageDifMs < 0) {\n    return -1;\n  }\n  const ageDate = new Date(ageDifMs); // miliseconds from epoch\n  return Math.abs(ageDate.getUTCFullYear() - 1970);\n}\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { asyncScheduler, forkJoin, scheduled, Subject } from 'rxjs';\nimport { map, mergeAll } from 'rxjs/operators';\nimport { ClienteService } from 'src/app/core';\nimport { UtenteType } from 'src/app/core/constants/utente-type.enum';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { SelfStore } from 'src/app/core/store/self.store';\nimport { Cliente } from 'src/app/shared/models/cliente.model';\nimport { Conto } from 'src/app/shared/models/conto.model';\n\nimport { DialogRechargeComponent } from './components/dialog-recharge/dialog-recharge.component';\n\n@Component({\n  selector: 'app-recharge',\n  templateUrl: './recharge.component.html',\n  styleUrls: ['./recharge.component.scss']\n})\nexport class RechargeComponent implements OnInit, AfterViewInit {\n\n  public a = new Subject<Cliente>();\n  public b = new Subject<{ price: string; date: string; invoice: string }>();\n\n  constructor(\n    private routingService: RoutingService,\n    public selfStore: SelfStore,\n    private clienteService: ClienteService,\n    private dialog: MatDialog,\n  ) {}\n\n  ngOnInit(): void {\n    if (!this.selfStore.email || !this.selfStore.budget) {\n      scheduled([\n        this.clienteService.getSelfClient(),\n        this.clienteService.getSelfConto(),\n      ], asyncScheduler).pipe(\n        mergeAll(),\n        map((element) => {\n          if (this.isSelfCliente(element)) {\n            this.selfStore.updateCliente(element as Cliente);\n          } else if (this.isSelfConto(element)) {\n            this.selfStore.updateConto(element as Conto);\n          }\n        })\n      )\n      .subscribe(() => this.handleCustomerPermission());\n    } else {\n      this.handleCustomerPermission();\n    }\n    this.completeRecharge();\n  }\n\n  ngAfterViewInit() {\n    this.routingService.updateHeader('Ricarica');\n  }\n\n  authClientStatus(cliente: Cliente) {\n    this.a.next(cliente);\n    this.a.complete();\n  }\n\n  payStatus(status: { price: string; date: string; invoice: string }) {\n    this.b.next(status);\n    this.b.complete();\n  }\n\n  completeRecharge() {\n    forkJoin({ cliente: this.a, priceInfo: this.b }).subscribe(\n      ({ cliente, priceInfo }) => {\n        this.dialog.open(DialogRechargeComponent, {\n          data: { cliente, priceInfo },\n          disableClose: true,\n        });\n      }\n    );\n  }\n\n  /** verifica che il cliente sia un mercante */\n  isMercant(): boolean {\n    return this.selfStore.type === UtenteType.commerciante;\n  }\n\n\n  /**\n   * verifica che il login abbia restituito un commerciante, altrimenti blocca l'atm chiedendo un upgrade\n   */\n  private handleCustomerPermission() {\n    if (!this.isMercant()) {\n      this.routingService.gotoHome();\n    }\n  }\n\n  /** verifica se l'oggetto passato è un cliente */\n  private isSelfCliente(cliente): boolean {\n    return cliente && cliente.email;\n  }\n\n  /** verifica se l'oggetto passato è un conto */\n  private isSelfConto(conto): boolean {\n    return conto && conto.budget;\n  }\n}\n","<div class=\"flex-parent\">\n  <div class=\"flex widget-container shadow-border mb20 mr10\">\n    <app-recognition class=\"relative recognition\" (authClientStatus)=\"authClientStatus($event)\"></app-recognition>\n  </div>\n  <div class=\"flex widget-container shadow-border mb20 ml10\">\n    <app-info-widget\n      class=\" info-table\"\n      title=\"Personale\"\n      [numConto]=\"this.selfStore.idConto\"\n      [name]=\"this.selfStore.cognome +' '+ this.selfStore.nome\"\n      [regSocial]=\"this.selfStore.ragSociale\"\n      [address]=\"this.selfStore.address\"\n    ></app-info-widget>\n  </div>\n</div>\n\n<div class=\"flex-parent\">\n  <div class=\"widget-container shadow-border flex mb20\">\n    <app-price-widget title=\"Ricarica\" operationLabel=\"Ricarica\" [canInvoice]=\"false\" (payStatus)=\"payStatus($event)\"></app-price-widget>\n  </div>\n</div>\n\n<div class=\"flex-parent\">\n  <div class=\"widget-container shadow-border spam-widget\">\n    <app-banner></app-banner>\n  </div>\n</div>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { ClienteService } from 'src/app/core';\nimport { Cliente } from '../../models/cliente.model';\n\n@Component({\n  selector: 'app-pin',\n  templateUrl: './pin.component.html',\n  styleUrls: ['./pin.component.scss']\n})\nexport class PinComponent implements OnInit {\n  /** controller del form */\n  formCrl: FormGroup;\n\n  @Output() clientAuthEvent = new EventEmitter<Cliente>();\n\n  constructor(\n    private fb: FormBuilder,\n    private clienteService: ClienteService,\n  ) {\n    this.formCrl = this.fb.group({\n      userId: this.fb.control('', [Validators.required]),\n      pin: this.fb.control('', [Validators.required, Validators.minLength(4), Validators.maxLength(16)])\n    });\n  }\n\n  ngOnInit() {}\n\n  login() {\n    this.clienteService.getClienteByPin(this.formCrl.value.userId, this.formCrl.value.pin).subscribe(\n      cliente => this.clientAuthEvent.emit(cliente)\n    );\n  }\n}\n","<div>\n  <form class=\"form\" [formGroup]=\"formCrl\">\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput placeholder=\"ID*\" formControlName=\"userId\" />\n        <mat-error *ngIf=\"formCrl.controls['userId'].hasError('required')\"> L'id utente è <strong>richiesto</strong> </mat-error>\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput type=\"pin\" placeholder=\"pin*\" formControlName=\"pin\"/>\n        <mat-hint>4 cifre numeriche</mat-hint>\n        <mat-error *ngIf=\"formCrl.controls['pin'].hasError('minLength') || formCrl.controls['pin'].hasError('maxLength') || formCrl.controls['pin'].hasError('numeric')\">\n          il pin è composto da 4-16 cifre <strong>numeriche</strong>\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['pin'].hasError('required')\"> pin obbligatorio per il login </mat-error>\n      </mat-form-field>\n    </div>\n    <div class=\"login\">\n        <button mat-raised-button color=\"primary\" [disabled]=\"formCrl.status === 'INVALID'\" (click)=\"login()\">Login</button>\n    </div>\n  </form>\n</div>\n","import {\n  AfterViewInit,\n  Component,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { AbstractJoinPartComponent } from './parts/abstract-join-part/abstract-join-part.component';\nimport { JoinPart0Component } from './parts/join-part0/join-part0.component';\nimport { JoinPart1Component } from './parts/join-part1/join-part1.component';\nimport { JoinPart2Component } from './parts/join-part2/join-part2.component';\nimport { JoinPart3Component } from './parts/join-part3/join-part3.component';\n\n@Component({\n  selector: 'app-join',\n  templateUrl: './join.component.html',\n  styleUrls: ['./join.component.scss'],\n})\nexport class JoinComponent implements OnInit, OnDestroy, AfterViewInit {\n  readonly  maxPage = 3;\n\n  favoriteUserType: string;\n  page: number;\n  componentRef: ComponentRef<AbstractJoinPartComponent>;\n  data = {};\n\n  @ViewChild('adHost', { read: ViewContainerRef }) container;\n\n  @Output() loginRequest = new EventEmitter<void>();\n\n  constructor(private resolver: ComponentFactoryResolver) {\n  }\n\n  ngOnInit(): void {\n    this.page = 0;\n  }\n\n  ngOnDestroy() {\n    if (this.container) {\n      this.container.clear();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.loadComponent();\n    }, 0);\n  }\n\n  loadComponent() {\n\n    this.container.clear();\n    let factory: ComponentFactory<AbstractJoinPartComponent|JoinPart3Component>;\n    switch (this.page) {\n      case 3:\n        factory = this.resolver.resolveComponentFactory(JoinPart3Component);\n        break;\n      case 2:\n        factory = this.resolver.resolveComponentFactory(JoinPart2Component);\n        break;\n      case 1:\n        factory = this.resolver.resolveComponentFactory(JoinPart1Component);\n        break;\n      case 0:\n      default:\n        factory = this.resolver.resolveComponentFactory(JoinPart0Component);\n        break;\n    }\n    this.componentRef = this.container.createComponent(factory);\n    if (this.page === this.maxPage) {\n      (this.componentRef as unknown as ComponentRef<JoinPart3Component>).instance.data = this.data;\n    }\n\n  }\n\n  login() {\n    this.loginRequest.next();\n  }\n\n\n\n\n  updateForm(pg: number) {\n    if (!this.componentRef.instance.validate()) {\n      return;\n    }\n    // salva le informazioni recuperate dal form\n    this.data = {...this.data, ...this.componentRef.instance.getValue()};\n\n    this.setPage(pg);\n    this.loadComponent();\n  }\n\n  setPage(pg: number) {\n    if (pg < 0) {\n      this.page = 0;\n    } else if (pg > this.maxPage ) {\n      this.page = this.maxPage;\n    } else {\n      this.page = pg;\n    }\n  }\n}\n","<div>\n  <div>\n    <mat-slider class=\"slider\" min=\"0\" max=\"3\" step=\"1\" [value]=\"page\"\n    ></mat-slider>\n  </div>\n  <mat-divider></mat-divider>\n  <div>\n    <template #adHost></template>\n  </div>\n  <app-join-dashboard *ngIf=\"page < maxPage\" [page]=\"page\" [maxPage]=\"maxPage\" (changePage)=\"updateForm($event)\"></app-join-dashboard>\n  <div class=\"login\">\n    <button mat-button color=\"primary\" (click)=\"login()\">\n      Annulla creazione account\n    </button>\n  </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { haveUppercase, haveLowercase, haveDigit } from 'src/app/core/utils/custom-validator';\nimport { AbstractJoinPartComponent } from '../abstract-join-part/abstract-join-part.component';\n\n@Component({\n  selector: 'app-join-part0',\n  templateUrl: './join-part0.component.html',\n  styleUrls: ['./join-part0.component.scss'],\n})\nexport class JoinPart0Component extends AbstractJoinPartComponent\n  implements OnInit {\n  @Output() valuesOutput = new EventEmitter<{\n    email: string;\n    password: string;\n  }>();\n\n  constructor(private fb: FormBuilder) {\n    super();\n    this.formCrl = this.fb.group({\n      email: this.fb.control('', [Validators.required, Validators.email]),\n      password: this.fb.control('', [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(16),\n        haveUppercase,\n        haveLowercase,\n        haveDigit,\n      ]),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  getValue() {\n    return {\n      email: this.formCrl.controls.email.value,\n      password: this.formCrl.controls.password.value,\n    };\n  }\n}\n","<form class=\"form\" [formGroup]=\"formCrl\">\n<div>\n  <div fxFlex>\n    <mat-form-field>\n      <input matInput placeholder=\"email*\" formControlName=\"email\" />\n      <mat-error *ngIf=\"formCrl.controls['email'].hasError('required')\">\n        email <strong>obbligatoria</strong>\n      </mat-error>\n      <mat-error *ngIf=\"formCrl.controls['email'].hasError('email')\">\n        deve essere una email: esempio@dominio.com\n      </mat-error>\n    </mat-form-field>\n  </div>\n</div>\n<div>\n  <mat-form-field class=\"full-width\">\n    <input\n      matInput\n      type=\"password\"\n      placeholder=\"Password*\"\n      formControlName=\"password\"\n    />\n    <mat-error *ngIf=\"formCrl.controls['password'].hasError('minLength') || formCrl.controls['password'].hasError('maxLength')\">\n      la password è composta da 4-16 cifre <strong>numeriche</strong>\n    </mat-error>\n    <mat-error *ngIf=\"formCrl.controls['password'].hasError('required')\">\n      Password obbligatoria (ovviamente)\n    </mat-error>\n    <mat-error *ngIf=\"formCrl.controls['password'].hasError('haveUppercase')\">\n      E' necessario aggiungere almeno un carattere maiuscolo\n    </mat-error>\n    <mat-error *ngIf=\"formCrl.controls['password'].hasError('haveLowercase')\">\n      E' necessario aggiungere almeno un carattere minuscolo\n    </mat-error>\n    <mat-error *ngIf=\"formCrl.controls['password'].hasError('haveDigit')\">\n      E' necessario aggiungere almeno un carattere numerico\n    </mat-error>\n  </mat-form-field>\n</div>\n</form>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthStore } from 'src/app/features/login-page/store/auth.store';\nimport { RoutersPath } from '../constants/routing.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router, private loginStore: AuthStore) { }\n\n  canActivate(): boolean {\n    if (!this.loginStore.token) {\n      this.router.navigate([RoutersPath.login]);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthStore } from 'src/app/features/login-page/store/auth.store';\nimport { RoutersPath } from '../constants/routing.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoLoginGuard {\n\n  constructor(private router: Router, private loginStore: AuthStore) { }\n\n  canActivate(): boolean {\n    if (this.loginStore.token) {\n      this.router.navigate([RoutersPath.home]);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { RoutingService } from 'src/app/core/services/routing.service';\n\nimport { LoginType } from '../../constants/login-type.enum';\nimport { Cliente } from '../../models/cliente.model';\n\n@Component({\n  selector: 'app-recognition',\n  templateUrl: './recognition.component.html',\n  styleUrls: ['./recognition.component.scss']\n})\nexport class RecognitionComponent implements OnInit {\n\n  readonly LoginType = LoginType;\n  public loginType = LoginType.pin;\n\n  public cliente: Cliente = null;\n\n  @Output() authClientStatus = new EventEmitter<Cliente>();\n\n  constructor(private routingService: RoutingService) { }\n\n  ngOnInit(): void {\n    this.routingService.updateHeader('Login');\n  }\n\n  changeLogin(choosenLoginType: LoginType) {\n    this.loginType = choosenLoginType;\n  }\n\n  authSuccess(cliente: Cliente) {\n    this.loginType = LoginType.success;\n    this.cliente = cliente;\n    this.authClientStatus.emit(cliente);\n  }\n}\n","<div class=\"buttons-container\">\n  <button\n    mat-icon-button\n    (click)=\"changeLogin(LoginType.pin)\"\n    [ngClass]=\"{ active: loginType === LoginType.pin }\"\n  >\n    <mat-icon svgIcon=\"textbox-password\"></mat-icon>\n  </button>\n  <button\n    mat-icon-button\n    (click)=\"changeLogin(LoginType.qr)\"\n    class=\"mr-2 ml-2\"\n    [ngClass]=\"{ active: loginType === LoginType.qr }\"\n  >\n    <mat-icon svgIcon=\"qrcode\"></mat-icon>\n  </button>\n  <button\n    mat-icon-button\n    (click)=\"changeLogin(LoginType.nfc)\"\n    [ngClass]=\"{ active: loginType === LoginType.nfc }\"\n  >\n    <mat-icon svgIcon=\"nfc-variant\"></mat-icon>\n  </button>\n</div>\n<div class=\"content\">\n  <div class=\"login-body\">\n    <app-pin\n      *ngIf=\"loginType === LoginType.pin\"\n      class=\"block\"\n      (clientAuthEvent)=\"authSuccess($event)\"\n    ></app-pin>\n    <app-qr-code\n      *ngIf=\"loginType === LoginType.qr\"\n      class=\"block\"\n      (clientAuthEvent)=\"authSuccess($event)\"\n    ></app-qr-code>\n    <app-nfc *ngIf=\"loginType === LoginType.nfc\" class=\"block\"></app-nfc>\n    <app-info-widget\n      *ngIf=\"loginType === LoginType.success\"\n      class=\"block\"\n      title=\"CLIENTE\"\n      [numConto]=\"this.cliente.idConto\"\n      [name]=\"this.cliente.cognome + ' ' + this.cliente.nome\"\n      [address]=\"this.cliente.address\"\n    ></app-info-widget>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport enum LoadingStatus {\n  LOADING = '',\n  FAILED = 'FAILED',\n  SUCCESS = 'SUCCESS'\n}\n\n/** service sche gestisce il loader */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  /** Alla fine del caricamento chiude il loader e apre la modale */\n  status$: BehaviorSubject<LoadingStatus>;\n\n  constructor() {\n    this.status$ = new BehaviorSubject(LoadingStatus.LOADING);\n  }\n\n  changeStatus(status: LoadingStatus) {\n    this.status$.next(status);\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-join-dashboard',\n  templateUrl: './join-dashboard.component.html',\n  styleUrls: ['./join-dashboard.component.scss']\n})\nexport class JoinDashboardComponent implements OnInit {\n\n\n  @Input() page: number;\n  @Input() maxPage: number;\n\n  @Output() changePage = new EventEmitter<number>();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  backPage() {\n    this.changePage.emit(this.page - 1);\n  }\n\n  nextPage() {\n    this.changePage.emit(this.page + 1);\n  }\n}\n","<div class=\"move\">\n  <button mat-raised-button class=\"back\" color=\"primary\" [disabled]=\"page <= 0\" (click)=\"backPage()\">Back</button>\n  <button mat-raised-button class=\"next\" color=\"primary\" [disabled]=\"page >= maxPage\" (click)=\"nextPage()\">Next</button>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * [number, number] | switchNumber:switchFn\n */\n@Pipe({\n  name: 'switchNumber'\n})\nexport class SwitchNumberPipe implements PipeTransform {\n\n  /**\n   * @param switchFn  - determina se prendere il valore 1 o il valore 2\n   */\n  transform(values: [number, number], switchFn: boolean, ...args: unknown[]): unknown {\n    if (!Array.isArray(values)) {\n      console.error('SwitchNumberPipe richiede la presenza di un array di numeri per funzionare');\n      console.error(values);\n      return -1;\n    }\n    if (values.length !== 2 || values.some(n => !(typeof n === 'number'))) {\n      console.error('SwitchNumberPipe richiede che l\\'array contenga 2 valori numerici');\n      console.error(values);\n      return -1;\n    }\n    const equal = switchFn || true;\n    return equal ? values[0] : values[1];\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n/**\n * Nota: <app-big-button> richiede width e height impostati a 100%\n */\n@Component({\n  selector: 'app-big-button',\n  templateUrl: './big-button.component.html',\n  styleUrls: ['./big-button.component.scss']\n})\nexport class BigButtonComponent implements OnInit {\n\n  @Input() label: string;\n  @Input() icon: string;\n  @Input() disabled: boolean;\n\n  @Output() clickEmitter: EventEmitter<void> = new  EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  clickEvent(): void {\n    this.clickEmitter.next();\n  }\n}\n","<div class=\"button-container widget-container shadow-border\" [ngClass]=\"{'disabled': disabled}\" (click)=\"clickEvent()\">\n  <div class=\"icon-content\">\n    <mat-icon class=\"icon fix-top\" aria-hidden=\"false\" [inline]=\"false\">{{icon}}</mat-icon>\n  </div>\n  <div class=\"label-body\">\n    <span class=\"label centralize\" >{{label}}</span>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatIconModule, MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { AuthGuard } from './guards/auth-guard.service';\nimport { NoLoginGuard } from './guards/no-login-guard.service';\nimport { httpInterceptorProviders } from './http-interceptors/auth.interceptor';\nimport { ClienteService } from './services/cliente.service';\nimport { LoaderService } from './services/loader.service';\nimport { LocalStorageService } from './services/local-storage.service';\nimport { RoutingService } from './services/routing.service';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, HttpClientModule, MatIconModule, FlexLayoutModule],\n  exports: [MatIconModule, FlexLayoutModule],\n  providers: [\n    /* No providers */\n  ]\n})\nexport class CoreModule {\n  constructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer) {\n    // aggiunge le nuova svg a material\n    matIconRegistry.addSvgIconSet(\n      domSanitizer.bypassSecurityTrustResourceUrl('assets/svgs/mdi.svg')\n    );\n    // matIconRegistry.addSvgIconSet(domSanitizer.bypassSecurityTrustResourceUrl('../../assets/fonts/materialdesignicons-webfont.woff'));\n  }\n\n  static forRoot(): ModuleWithProviders<CoreModule> {\n    return {\n      ngModule: CoreModule,\n      providers: [\n        ClienteService,\n        RoutingService,\n        AuthGuard,\n        NoLoginGuard,\n        LoaderService,\n        LocalStorageService,\n        httpInterceptorProviders,\n      ]\n    };\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-info-widget',\n  templateUrl: './info-widget.component.html',\n  styleUrls: ['./info-widget.component.scss']\n})\nexport class InfoWidgetComponent implements OnInit {\n\n  /** titolo della sezione */\n  @Input() title: string;\n  /** numero del conto */\n  @Input() numConto: string;\n  /** nome del proprietario conto */\n  @Input() name: string;\n  /** regione sociale */\n  @Input() regSocial: string;\n  /** indirizzo del proprietario del conto */\n  @Input() address: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"title\">{{title}}</h1>\n<div class=\"info\">\n  <div class=\"labels\">\n    <div class=\"info--conto label\">Num. Conto:</div>\n    <div class=\"info--name label\">Nome:</div>\n    <div *ngIf=\"regSocial\" class=\"info--reg label\">Regione Sociale:</div>\n    <div class=\"info--addr label\">Indirizzo:</div>\n  </div>\n  <div class=\"values\">\n    <div class=\"info--conto value\">{{numConto || '-'}}</div>\n    <div class=\"info--name value\">{{name || '-'}}</div>\n    <div *ngIf=\"regSocial\" class=\"info--reg value\">{{regSocial}}</div>\n    <div class=\"info--addr value\">{{address || '-'}}</div>\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\nimport { AbstractJoinPartComponent } from '../abstract-join-part/abstract-join-part.component';\nimport { UtenteType } from 'src/app/core/constants/utente-type.enum';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-join-part2',\n  templateUrl: './join-part2.component.html',\n  styleUrls: ['./join-part2.component.scss']\n})\nexport class JoinPart2Component extends AbstractJoinPartComponent implements OnInit, OnDestroy {\n  readonly UserType = UtenteType;\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(private fb: FormBuilder) {\n    super();\n    this.formCrl = this.fb.group({\n      type: this.fb.control(UtenteType.cliente, []),\n      piva: this.fb.control({ value: '', disabled: true }, [Validators.required]),\n      ragSoc: this.fb.control({ value: '', disabled: true }, [Validators.required]),\n    });\n  }\n\n  ngOnInit() {\n    this.subscriptions.push(this.formCrl.get('type').valueChanges.subscribe(userType => {\n        if ( userType === UtenteType.cliente  ) {\n          this.formCrl.get('piva').disable();\n          this.formCrl.get('ragSoc').disable();\n        } else {\n          this.formCrl.get('piva').enable();\n          this.formCrl.get('ragSoc').enable();\n        }\n    }));\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  getValue() {\n    return {\n      type: this.formCrl.controls.type.value,\n      piva: this.formCrl.controls.piva.value,\n      ragSoc: this.formCrl.controls.ragSoc.value,\n    };\n  }\n}\n","<form class=\"form\" [formGroup]=\"formCrl\">\n  <mat-radio-group formControlName=\"type\">\n    <mat-radio-button [value]=\"UserType.cliente\" >Sono solo un cliente</mat-radio-button>\n    <mat-radio-button [value]=\"UserType.commerciante\" >Dati del commerciante</mat-radio-button>\n  </mat-radio-group>\n  <div #merchantInfo>\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput  class=\"mInfos\" placeholder=\"partita iva*\" formControlName=\"piva\" />\n        <mat-error *ngIf=\"formCrl.controls['piva'].hasError('required')\">\n          piva <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput class=\"mInfos\" placeholder=\"ragione sociale*\" formControlName=\"ragSoc\" />\n        <mat-error *ngIf=\"formCrl.controls['ragSoc'].hasError('required')\">\n          ragSoc <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n  </div>\n</form>\n","import { Injectable } from '@angular/core';\nimport { LocalStorageService } from 'src/app/core/services/local-storage.service';\nimport { UtenteType } from '../constants/utente-type.enum';\nimport { Cliente } from '../../shared/models/cliente.model';\nimport { Conto } from '../../shared/models/conto.model';\n\n/** Store che memorizza i dati dell' utente collegato (api/clienti/self) */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SelfStore {\n\n  readonly localStoreVariable = {\n    id: 'clienti.id',\n    email: 'clienti.email',\n    nome: 'clienti.nome',\n    cognome: 'clienti.cognome',\n    cf: 'clienti.cf',\n    createdAt: 'clienti.createdAt',\n    updatedAt: 'clienti.updatedAt',\n    idConto: 'clienti.idConto',\n    type: 'clienti.type',\n    address: 'clienti.address',\n    birthDate: 'clienti.birthDate',\n    phone: 'clienti.phone',\n    regSociale: 'commercianti.ragSociale',\n    pIva: 'commercianti.pIva',\n\n    budget: 'conto.budget',\n    saldo: 'conto.saldo',\n    // uscite: 'conto.uscite',\n    // entrate: 'conto.entrate',\n    // movimenti: 'conto.movimenti',\n    avariableBadget: 'conto.avBadget',\n\n  };\n\n  private pId: string;\n  private pEmail: string;\n  private pNome: string;\n  private pCognome: string;\n  private pCf: string;\n  private pCreatedAt: Date;\n  private pUpdatedAt: Date;\n  private pIdConto: string;\n  private pType: string;\n  private pAddress: string;\n  private pPhone: string;\n  private pBirthDate: string;\n  private pRagSociale: string;\n  private pPIva: string;\n\n  private pBudget: number;\n  private pSaldo: number;\n  // private pUscite: any[];\n  // private pEntrate: any[];\n  // private pMovimenti: any[];\n  private pAvariableBadget: number;\n\n\n  public get id() {\n    if (!this.pId) {\n      this.pId = this.localStorageService.getItem(this.localStoreVariable.id);\n    }\n    return this.pId;\n  }\n\n  public set id(value) {\n    this.pId = value;\n    this.localStorageService.setItem(this.localStoreVariable.id, value);\n  }\n\n\n  public get email() {\n    if (!this.pEmail) {\n      this.pEmail = this.localStorageService.getItem(this.localStoreVariable.email);\n    }\n    return this.pEmail;\n  }\n\n  public set email(value) {\n    this.pEmail = value;\n    this.localStorageService.setItem(this.localStoreVariable.email, value);\n  }\n\n\n  public get cognome() {\n    if (!this.pCognome) {\n      this.pCognome = this.localStorageService.getItem(this.localStoreVariable.cognome);\n    }\n    return this.pCognome;\n  }\n\n  public set cognome(value) {\n    this.pCognome = value;\n    this.localStorageService.setItem(this.localStoreVariable.cognome, value);\n  }\n\n  public get nome() {\n    if (!this.pNome) {\n      this.pNome = this.localStorageService.getItem(this.localStoreVariable.nome);\n    }\n    return this.pNome;\n  }\n\n  public set nome(value) {\n    this.pNome = value;\n    this.localStorageService.setItem(this.localStoreVariable.nome, value);\n  }\n\n  public get cf() {\n    if (!this.pCf) {\n      this.pCf = this.localStorageService.getItem(this.localStoreVariable.cf);\n    }\n    return this.pCf;\n  }\n\n  public set cf(value) {\n    this.pCf = value;\n    this.localStorageService.setItem(this.localStoreVariable.cf, value);\n  }\n\n  public get createdAt() {\n    if (!this.pCreatedAt) {\n      this.pCreatedAt = this.localStorageService.getItem(this.localStoreVariable.createdAt);\n    }\n    return this.pCreatedAt;\n  }\n\n  public set createdAt(value) {\n    this.pCreatedAt = value;\n    this.localStorageService.setItem(this.localStoreVariable.createdAt, value);\n  }\n\n  public get updatedAt() {\n    if (!this.pUpdatedAt) {\n      this.pUpdatedAt = this.localStorageService.getItem(this.localStoreVariable.updatedAt);\n    }\n    return this.pUpdatedAt;\n  }\n\n  public set updatedAt(value) {\n    this.pUpdatedAt = value;\n    this.localStorageService.setItem(this.localStoreVariable.updatedAt, value);\n  }\n\n  public get idConto() {\n    if (!this.pIdConto) {\n      this.pIdConto = this.localStorageService.getItem(this.localStoreVariable.idConto);\n    }\n    return this.pIdConto;\n  }\n\n  public set idConto(value) {\n    this.pIdConto = value;\n    this.localStorageService.setItem(this.localStoreVariable.idConto, value);\n  }\n\n\n  public get type() {\n    if (!this.pType) {\n      this.pType = this.localStorageService.getItem(this.localStoreVariable.type);\n    }\n    return this.pType;\n  }\n\n  public set type(value) {\n    this.pType = value;\n    this.localStorageService.setItem(this.localStoreVariable.type, value);\n  }\n\n  public get address() {\n    if (!this.pAddress) {\n      this.pAddress = this.localStorageService.getItem(this.localStoreVariable.address);\n    }\n    return this.pAddress;\n  }\n\n  public set address(value) {\n    this.pAddress = value;\n    this.localStorageService.setItem(this.localStoreVariable.address, value);\n  }\n\n  public get phone() {\n    if (!this.pPhone) {\n      this.pPhone = this.localStorageService.getItem(this.localStoreVariable.phone);\n    }\n    return this.pPhone;\n  }\n\n  public set phone(value) {\n    this.pPhone = value;\n    this.localStorageService.setItem(this.localStoreVariable.phone, value);\n  }\n\n  public get birthDate() {\n    if (!this.pBirthDate) {\n      this.pBirthDate = this.localStorageService.getItem(this.localStoreVariable.birthDate);\n    }\n    return this.pBirthDate;\n  }\n\n  public set birthDate(value) {\n    this.pBirthDate = value;\n    this.localStorageService.setItem(this.localStoreVariable.birthDate, value);\n  }\n\n\n\n  public get ragSociale() {\n    if (!this.pRagSociale) {\n      this.pRagSociale = this.localStorageService.getItem(this.localStoreVariable.regSociale);\n    }\n    return this.pRagSociale;\n  }\n\n  public set ragSociale(value) {\n    this.pRagSociale = value;\n    this.localStorageService.setItem(this.localStoreVariable.regSociale, value);\n  }\n\n  public get pIva() {\n    if (!this.pPIva) {\n      this.pPIva = this.localStorageService.getItem(this.localStoreVariable.pIva);\n    }\n    return this.pPIva;\n  }\n\n  public set pIva(value) {\n    this.pPIva = value;\n    this.localStorageService.setItem(this.localStoreVariable.pIva, value);\n  }\n\n  public get budget() {\n    if (!this.pBudget) {\n      this.pBudget = this.localStorageService.getItem(this.localStoreVariable.budget);\n    }\n    return this.pBudget;\n  }\n\n  public set budget(value) {\n    this.pBudget = value;\n    this.localStorageService.setItem(this.localStoreVariable.budget, value);\n  }\n\n  public get saldo() {\n    if (!this.pSaldo) {\n      this.pSaldo = this.localStorageService.getItem(this.localStoreVariable.saldo);\n    }\n    return this.pSaldo;\n  }\n\n  public set saldo(value) {\n    this.pSaldo = value;\n    this.localStorageService.setItem(this.localStoreVariable.saldo, value);\n  }\n\n  public get avariableBadget() {\n    if (!this.pAvariableBadget) {\n      this.pAvariableBadget = this.localStorageService.getItem(this.localStoreVariable.avariableBadget);\n    }\n    return this.pAvariableBadget;\n  }\n\n  public set avariableBadget(value) {\n    this.pAvariableBadget = value;\n    this.localStorageService.setItem(this.localStoreVariable.avariableBadget, value);\n  }\n\n\n  constructor(private localStorageService: LocalStorageService) { }\n\n  /** Aggiorna il selfStore salvando le informazioni ottenute  */\n  public updateCliente(cliente: Cliente) {\n    this.id = cliente.id;\n    this.type = cliente.type;\n    this.nome = cliente.nome;\n    this.cognome = cliente.cognome;\n    this.email = cliente.email;\n    this.cf = cliente.cf;\n    this.createdAt = cliente.createdAt;\n    this.updatedAt = cliente.updatedAt;\n    this.address = cliente.address;\n    this.phone = cliente.phone;\n    this.birthDate = cliente.birthDate;\n    this.idConto = cliente.idConto;\n    if (cliente.type === UtenteType.commerciante) {\n      this.ragSociale = cliente.ragSoc;\n      this.pIva = cliente.piva;\n    }\n  }\n\n  public updateConto(conto: Conto) {\n    this.idConto = conto.id;\n    this.saldo = conto.saldo;\n    this.budget = conto.budget;\n  }\n\n  /** resetta lo store (e il local store). Ideale dopo un logout */\n  public reset() {\n    this.id = undefined;\n    this.type = undefined;\n    this.nome = undefined;\n    this.cognome = undefined;\n    this.email = undefined;\n    this.cf = undefined;\n    this.createdAt = undefined;\n    this.updatedAt = undefined;\n    this.address = undefined;\n    this.phone = undefined;\n    this.birthDate = undefined;\n    this.idConto = undefined;\n    this.ragSociale = undefined;\n    this.pIva = undefined;\n\n    // this.idConto = undefined;\n    this.saldo = undefined;\n    this.budget = undefined;\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport {LoaderService, LoadingStatus } from 'src/app/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { debounceTime, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.scss']\n})\nexport class ErrorPageComponent implements OnInit {\n\n  /** titolo della pagina di errore */\n  titleLabel$: BehaviorSubject<string>;\n\n  /** contenuto html del messaggio di errore */\n  content$: BehaviorSubject<string>;\n\n  /** oggetto errore da stampare se presente */\n  error$: BehaviorSubject<any>;\n\n  constructor(private route: ActivatedRoute, private loaderService: LoaderService) {\n    this.titleLabel$ = new BehaviorSubject('Impossibile procedere con il pagamento. Se il problema persiste contattare il venditore');\n    this.content$ = new BehaviorSubject('SUGGERIMENTO PER IL VENDITORE: assicurarsi che il idConto e prezzo siano validi');\n    this.error$ = new BehaviorSubject(undefined);\n    this.loaderService.status$.next(LoadingStatus.FAILED);\n  }\n\n  ngOnInit() {\n    this.route.queryParams\n    .pipe(\n      // debounceTime evita l'emit iniziale prima che i param siano effettivamente inizializzati\n      debounceTime(200),\n      switchMap(params => {\n        if ( params.titleLabel) {\n          this.titleLabel$.next(params.titleLabel);\n        }\n        if ( params.content ) {\n          this.content$.next(params.content);\n        }\n        if ( params.error ) {\n          this.error$.next(JSON.parse(params.error));\n        }\n        return [];\n      })\n    )\n    .subscribe();\n  }\n}\n","<app-error [titleLabel]=\"titleLabel$ | async\" [content]=\"content$ | async\" [error]=\"error$ | async\"></app-error>\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MovimentoService } from 'src/app/core';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { SelfStore } from 'src/app/core/store/self.store';\nimport { Cliente } from 'src/app/shared/models/cliente.model';\n\nimport { DialogData } from '../../payments.component';\n\n@Component({\n  selector: 'app-dialog-payment',\n  templateUrl: './dialog-payment.component.html',\n  styleUrls: ['./dialog-payment.component.scss']\n})\nexport class DialogPaymentComponent {\n\n\n  public cliente: Cliente;\n  public priceInfo: DialogData['priceInfo'];\n\n  constructor(\n    private dialogRef: MatDialogRef<DialogPaymentComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: DialogData,\n    private movimentoService: MovimentoService,\n    private selfStore: SelfStore,\n    private routingService: RoutingService,\n    private snackBar: MatSnackBar,\n  ) {\n    this.cliente = data.cliente;\n    this.priceInfo = data.priceInfo;\n  }\n\n  completePayment() {\n    this.movimentoService\n      .pagamento(this.cliente.idConto, this.selfStore.idConto, this.priceInfo.price)\n      .subscribe(() => {\n        // pagamento avvenuto con successo\n        this.openSnackBar('pagamento effettuato con successo', 'success');\n      },\n      (error) => {\n        // errore nel pagamento\n        this.openSnackBar('pagamento fallito', 'failure');\n        console.error(error);\n      },\n      // complete\n      () => {\n        this.dialogRef.close();\n        this.routingService.gotoHome();\n      });\n  }\n\n  undo() {\n    this.dialogRef.close();\n    window.location.reload();\n  }\n\n  private openSnackBar(message: string, cssClass?: string) {\n    this.snackBar.open(message, 'chiudi', {\n      // verticalPosition: MatSnackBarVerticalPosition,\n      // horizontalPosition: MatSnackBarHorizontalPosition,\n      panelClass: ['paytost', cssClass],\n      duration: 10000,\n    });\n  }\n}\n","<div>\n  <h2>Confermi l'operazione?</h2>\n  <div class=\"container\">\n    <button class=\"marg\" mat-raised-button color=\"primary\" (click)=\"completePayment()\">PROSEGUI</button>\n    <button class=\"marg\" mat-raised-button color=\"secondary\" (click)=\"undo()\">INDIETRO</button>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { InfoAtmComponent } from 'src/app/shared/info-atm/info-atm.component';\n\nenum FormTypes {\n  login = 'Login',\n  join = 'Join'\n}\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n  readonly FormTypes = FormTypes;\n\n\n  public formType: FormTypes = FormTypes.login;\n\n  constructor(private routingService: RoutingService, private dialog: MatDialog, ) { }\n\n  ngOnInit(): void {\n    this.routingService.updateHeader('Login');\n  }\n\n  clickInfo() {\n    const dialogRef = this.dialog.open(InfoAtmComponent);\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n\n  switchForm(formType: FormTypes) {\n    this.formType = formType;\n  }\n\n}\n","<div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-between start\">\n  <div fxFlex class=\"widget-container login-widget shadow-border\">\n    <app-login\n      *ngIf=\"formType === FormTypes.login\"\n      (joinRequest)=\"switchForm(FormTypes.join)\"\n    ></app-login>\n    <app-join\n      *ngIf=\"formType === FormTypes.join\"\n      (loginRequest)=\"switchForm(FormTypes.login)\"\n    ></app-join>\n  </div>\n  <div\n    fxFlex\n    ngClass.xs=\"info_conto_flex--xs\"\n    ngClass.gt-xs=\"info_conto_flex--gt-xs\"\n  >\n    <app-big-button\n      class=\"info_conto\"\n      label=\"Info Conto\"\n      icon=\"info\"\n      (clickEmitter)=\"clickInfo()\"\n    ></app-big-button>\n  </div>\n</div>\n<div fxLayout class=\"footer\">\n  <div class=\"widget-container shadow-border spam-widget\">\n    <app-banner></app-banner>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-info-atm',\n  templateUrl: './info-atm.component.html',\n  styleUrls: ['./info-atm.component.scss']\n})\nexport class InfoAtmComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  getATMCode(): string {\n    return 'ATM_01246843fdg';\n  }\n}\n","<h2 mat-dialog-title>Informazioni ATM</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <div class=\"info\">\n    <div class=\"labels\">\n      <div class=\"info--id label\">Identificativo ATM:</div>\n\n    </div>\n    <div class=\"values\">\n      <div class=\"info--id value\">{{getATMCode() || '-'}}</div>\n    </div>\n  </div>\n\n  </mat-dialog-content>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { RoutersPath } from './core';\nimport { AuthGuard } from './core/guards/auth-guard.service';\nimport { NoLoginGuard } from './core/guards/no-login-guard.service';\nimport { HomeComponent } from './features/home/home.component';\nimport { LoginPageComponent } from './features/login-page/login-page.component';\nimport { MovementsComponent } from './features/movements/movements.component';\nimport { PaymentsComponent } from './features/payments/payments.component';\nimport { RechargeComponent } from './features/recharge/recharge.component';\nimport { TemplateComponent } from './features/template/template.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TemplateComponent,\n    children: [\n      {\n        path: RoutersPath.base,\n        redirectTo: '/login',\n        pathMatch: 'full'\n      },\n      {\n        path: RoutersPath.home,\n        component: HomeComponent,\n        canActivate: [AuthGuard],\n      },\n      {\n        path: RoutersPath.login,\n        component: LoginPageComponent,\n        canActivate: [NoLoginGuard],\n      },\n      {\n        path: RoutersPath.payment,\n        component: PaymentsComponent,\n        canActivate: [AuthGuard],\n      },\n      {\n        path: RoutersPath.recharge,\n        component: RechargeComponent,\n        canActivate: [AuthGuard],\n      },\n      {\n        path: RoutersPath.movements,\n        component: MovementsComponent,\n        canActivate: [AuthGuard],\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { BarcodeFormat } from '@zxing/library';\nimport { ZXingScannerComponent } from '@zxing/ngx-scanner';\nimport { BehaviorSubject } from 'rxjs';\nimport { ClienteService } from 'src/app/core';\n\nimport { Cliente } from '../../models/cliente.model';\n\n@Component({\n  selector: 'app-qr-code',\n  templateUrl: './qr-code.component.html',\n  styleUrls: ['./qr-code.component.scss']\n})\nexport class QrCodeComponent implements OnInit {\n\n  /** standard accettati dal lettore */\n  readonly allowedFormats = [ BarcodeFormat.QR_CODE, BarcodeFormat.EAN_13];\n  availableDevices: MediaDeviceInfo[];\n  currentDevice: MediaDeviceInfo = null;\n\n  /**\n   * scanner.\n   * documentazione: https://github.com/zxing-js/ngx-scanner/wiki/Advanced-Usage\n   */\n  @ViewChild(ZXingScannerComponent)\n  scanner: ZXingScannerComponent;\n\n  @Output() clientAuthEvent = new EventEmitter<Cliente>();\n\n  /** determina se è riuscito ad aprire o meno lo scanner */\n  statusScanner$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(private clienteService: ClienteService) { }\n\n  ngOnInit() { }\n\n  /** alla lettura dello stato prova ad effettuare il login */\n  scanSuccessHandler(token: string) {\n    this.scanner.enable = false;\n    this.clienteService.getClienteByTokenOtp(token).subscribe(\n      cliente => {\n        console.warn(cliente);\n        this.clientAuthEvent.emit(cliente)},\n      error => this.scanner.enable = true);\n  }\n\n  onCamerasFound(devices: MediaDeviceInfo[]): void {\n    this.availableDevices = devices;\n\n    if (this.availableDevices && this.availableDevices.length > 0) {\n      this.currentDevice = this.availableDevices[0];\n    }\n  }\n\n  /** modifica lo stato del reader, che indica se è in funzione o ha dei problemi in esecuzione */\n  readerStatus(status: boolean) {\n    this.statusScanner$.next(status);\n  }\n}\n","<!-- scanner -->\n<div [hidden]=\"!(statusScanner$ | async)\">\n  <zxing-scanner\n    class=\"qr-reader\"\n    [(device)]=\"currentDevice\"\n    [formats]=\"allowedFormats\"\n    (camerasFound)=\"onCamerasFound($event)\"\n    (scanSuccess)=\"scanSuccessHandler($event)\"\n    (permissionResponse)=\"readerStatus($event)\"\n    [tryHarder]=\"true\"\n  ></zxing-scanner>\n</div>\n\n<!-- gestione in caso di scanner disabilitato o non funzionante -->\n<div [hidden]=\"statusScanner$ | async\">\n  <mat-icon svgIcon=\"qrcode\" class=\"qr-icon\"></mat-icon>\n  <div class=\"qr-message\">abilitare il lettore qrcode.</div>\n</div>\n","/** Tipologia di utente che può essere */\nexport enum UtenteType {\n  cliente = 'cliente',\n  commerciante = 'commerciante',\n}\n"],"sourceRoot":"webpack:///"}