{"version":3,"sources":["webpack:///src/app/features/recharge/recharge.module.ts","webpack:///src/app/shared/components/price-widget/price-widget.component.ts","webpack:///src/app/shared/components/price-widget/price-widget.component.html","webpack:///src/app/features/home/home.component.ts","webpack:///src/app/features/home/home.component.html","webpack:///src/app/shared/constants/login-type.enum.ts","webpack:///src/app/core/services/local-storage.service.ts","webpack:///src/app/shared/pipes/min.pipe.ts","webpack:///src/app/shared/components/join/parts/abstract-join-part/abstract-join-part.component.ts","webpack:///src/app/shared/components/join/parts/abstract-join-part/abstract-join-part.component.html","webpack:///src/app/shared/components/loader/loader.component.ts","webpack:///src/app/shared/components/loader/loader.component.html","webpack:///src/app/features/login-page/services/login.service.ts","webpack:///src/app/core/http-interceptors/auth.interceptor.ts","webpack:///src/app/core/services/routing.service.ts","webpack:///src/app/features/movements/movements.module.ts","webpack:///src/app/core/constants/routing.constants.ts","webpack:///src/app/features/recharge/components/dialog-recharge/dialog-recharge.component.ts","webpack:///src/app/features/recharge/components/dialog-recharge/dialog-recharge.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/shared/components/login/login.component.ts","webpack:///src/app/shared/components/login/login.component.html","webpack:///src/app/shared/components/info-dialog/info-dialog.component.ts","webpack:///src/app/shared/components/info-dialog/info-dialog.component.html","webpack:///src/app/shared/components/join/parts/join-part3/join-part3.component.ts","webpack:///src/app/shared/components/join/parts/join-part3/join-part3.component.html","webpack:///src/app/features/login-page/store/auth.store.ts","webpack:///src/app/shared/index.ts","webpack:///src/app/features/template/template.component.ts","webpack:///src/app/features/template/template.component.html","webpack:///src/app/shared/components/nfc/nfc.component.ts","webpack:///src/app/shared/components/nfc/nfc.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/core/services/cliente.service.ts","webpack:///src/app/features/payments/payments.component.ts","webpack:///src/app/features/payments/payments.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/shared/components/error/error.component.ts","webpack:///src/app/shared/components/error/error.component.html","webpack:///src/app/core/services/movimento.service.ts","webpack:///src/app/shared/directives/numeric.directive.ts","webpack:///src/app/app.module.ts","webpack:///src/app/features/template/template.module.ts","webpack:///src/app/features/movements/movements.component.ts","webpack:///src/app/features/movements/movements.component.html","webpack:///src/app/shared/components/banner/banner.component.ts","webpack:///src/app/shared/components/banner/banner.component.html","webpack:///src/app/features/payments/payments.module.ts","webpack:///src/app/core/index.ts","webpack:///src/app/features/home/home.module.ts","webpack:///src/app/shared/components/join/parts/join-part1/join-part1.component.ts","webpack:///src/app/shared/components/join/parts/join-part1/join-part1.component.html","webpack:///src/app/features/login-page/login-page.module.ts","webpack:///src/app/core/utils/custom-validator.ts","webpack:///src/app/features/recharge/recharge.component.ts","webpack:///src/app/features/recharge/recharge.component.html","webpack:///src/app/shared/components/pin/pin.component.ts","webpack:///src/app/shared/components/pin/pin.component.html","webpack:///src/app/shared/components/join/join.component.ts","webpack:///src/app/shared/components/join/join.component.html","webpack:///src/app/shared/components/join/parts/join-part0/join-part0.component.ts","webpack:///src/app/shared/components/join/parts/join-part0/join-part0.component.html","webpack:///src/app/core/guards/auth-guard.service.ts","webpack:///src/app/core/guards/no-login-guard.service.ts","webpack:///src/app/shared/components/recognition/recognition.component.ts","webpack:///src/app/shared/components/recognition/recognition.component.html","webpack:///src/app/core/services/loader.service.ts","webpack:///src/app/shared/components/join/parts/join-dashboard/join-dashboard.component.ts","webpack:///src/app/shared/components/join/parts/join-dashboard/join-dashboard.component.html","webpack:///src/app/shared/pipes/switch-number.pipe.ts","webpack:///src/app/shared/components/big-button/big-button.component.ts","webpack:///src/app/shared/components/big-button/big-button.component.html","webpack:///src/app/core/core.module.ts","webpack:///src/app/shared/components/info-widget/info-widget.component.ts","webpack:///src/app/shared/components/info-widget/info-widget.component.html","webpack:///src/app/shared/components/join/parts/join-part2/join-part2.component.ts","webpack:///src/app/shared/components/join/parts/join-part2/join-part2.component.html","webpack:///src/app/core/store/self.store.ts","webpack:///src/app/shared/components/error-page/error-page.component.ts","webpack:///src/app/shared/components/error-page/error-page.component.html","webpack:///src/app/features/payments/components/dialog-payment/dialog-payment.component.ts","webpack:///src/app/features/payments/components/dialog-payment/dialog-payment.component.html","webpack:///src/app/features/login-page/login-page.component.ts","webpack:///src/app/features/login-page/login-page.component.html","webpack:///src/app/shared/info-atm/info-atm.component.ts","webpack:///src/app/shared/info-atm/info-atm.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/shared/components/qr-code/qr-code.component.ts","webpack:///src/app/shared/components/qr-code/qr-code.component.html","webpack:///src/app/core/constants/utente-type.enum.ts"],"names":["RechargeModule","declarations","imports","PriceWidgetComponent","fb","payStatus","formCrl","group","price","control","required","date","value","getDateNow","disabled","invoice","Date","toISOString","substr","submit","invalid","emit","disable","makeAction","selector","templateUrl","styleUrls","title","operationLabel","canInvoice","HomeComponent","routingService","selfStore","clienteService","dialog","snackBar","buttonWidth","buttonHeight","toastConfig","horizontalPosition","verticalPosition","panelClass","updateHeader","email","budget","getSelfClient","getSelfConto","pipe","element","isSelfCliente","updateCliente","isSelfConto","updateConto","subscribe","handleCustomerPermission","gotoPayment","gotoRecharge","gotoMovements","type","commerciante","dialogRef","open","afterClosed","result","console","log","isMercant","cliente","conto","getInfoDialog","LoginType","LocalStorageService","name","item","localStorage","getItem","JSON","parse","undefined","removeItem","setItem","stringify","providedIn","MinPipe","values","Array","isArray","error","some","n","Math","min","AbstractJoinPartComponent","valid","validateAllFormFields","formGroup","Object","keys","controls","forEach","field","get","markAsTouched","onlySelf","LoaderComponent","LoginService","http","authStore","password","params","post","login","response","token","logout","AuthInterceptor","router","req","next","authReq","clone","headers","set","handle","status","navigate","httpInterceptorProviders","provide","useClass","multi","RoutingService","activeSection","activeSection$","text","home","payment","recharge","movements","MovementsModule","RoutersPath","base","baseUrl","apiUrl","ApiRoute","clienti","movimenti","pagamenti","ricariche","conti","DialogRechargeComponent","data","movimentoService","priceInfo","ricarica","idConto","openSnackBar","close","gotoHome","window","location","reload","message","cssClass","completeRecharge","undo","environment","production","enviromentName","LoginComponent","loginService","joinRequest","errorToastRef","minLength","maxLength","getToken","dismiss","join","InfoDialogComponent","StatusEnum","JoinPart3Component","waiting","register","success","setInterval","failed","AuthStore","localStorageService","pToken","TemplateComponent","menuItems","label","icon","clickEvent","isVisible","isLogin","isEnable","actSection","subscriptions","push","setTimeout","sub","unsubscribe","reset","gotoLogin","NfcComponent","SharedModule","exports","entryComponents","ClienteService","id","pin","_getClient","otp","apiCliente","id_conto","birthDate","birth_date","apiConto","idCliente","id_cliente","PaymentsComponent","a","b","completePayment","complete","disableClose","authClientStatus","AppComponent","loaderService","statusLoader$","status$","ErrorComponent","titleLabel","content","MovimentoService","idContoCliente","idContoCommerciante","prezzo","from","to","direction","numericValidator","isNumeric","RegExp","test","NumericDirective","useExisting","providers","AppModule","forRoot","bootstrap","TemplateModule","MovementsComponent","displayedColumns","dataSource","getMovimenti","BannerComponent","PaymentsModule","HomeModule","JoinPart1Component","nome","cognome","cf","bornDate","phone","address","LoginPageModule","isOver18","errorCode","age","getBirthday","isBorn","now","getTime","isPhone","haveUppercase","haveLowercase","haveDigit","ageDifMs","ageDate","abs","getUTCFullYear","RechargeComponent","PinComponent","clientAuthEvent","userId","getClienteByPin","JoinComponent","resolver","maxPage","loginRequest","page","container","clear","loadComponent","factory","resolveComponentFactory","componentRef","createComponent","instance","pg","validate","getValue","setPage","read","JoinPart0Component","valuesOutput","AuthGuard","loginStore","NoLoginGuard","RecognitionComponent","loginType","choosenLoginType","changeLogin","LoadingStatus","LoaderService","LOADING","JoinDashboardComponent","changePage","backPage","nextPage","SwitchNumberPipe","switchFn","length","equal","BigButtonComponent","clickEmitter","CoreModule","matIconRegistry","domSanitizer","addSvgIconSet","bypassSecurityTrustResourceUrl","ngModule","InfoWidgetComponent","numConto","regSocial","JoinPart2Component","UserType","piva","ragSoc","valueChanges","userType","enable","SelfStore","localStoreVariable","createdAt","updatedAt","regSociale","pIva","saldo","avariableBadget","ragSociale","pId","pEmail","pCognome","pNome","pCf","pCreatedAt","pUpdatedAt","pIdConto","pType","pAddress","pPhone","pBirthDate","pRagSociale","pPIva","pBudget","pSaldo","pAvariableBadget","ErrorPageComponent","route","titleLabel$","content$","error$","FAILED","queryParams","DialogPaymentComponent","pagamento","duration","FormTypes","LoginPageComponent","formType","clickInfo","InfoAtmComponent","routes","path","component","children","redirectTo","pathMatch","canActivate","AppRoutingModule","bootstrapModule","err","webpackEmptyAsyncContext","Promise","resolve","then","e","Error","code","module","QrCodeComponent","allowedFormats","QR_CODE","EAN_13","currentDevice","statusScanner$","scanner","getClienteByTokenOtp","warn","devices","availableDevices","onCamerasFound","scanSuccessHandler","readerStatus","UtenteType"],"mappings":"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","file":"main-es5.49fdad1c9b78aee14dbf.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from 'src/app/shared';\n\nimport { DialogRechargeComponent } from './components/dialog-recharge/dialog-recharge.component';\nimport { RechargeComponent } from './recharge.component';\n\n\n\n@NgModule({\n  declarations: [RechargeComponent, DialogRechargeComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n  ]\n})\nexport class RechargeModule { }\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\n\n@Component({\n  selector: 'app-price-widget',\n  templateUrl: './price-widget.component.html',\n  styleUrls: ['./price-widget.component.scss']\n})\nexport class PriceWidgetComponent implements OnInit {\n\n  @Input() title: string;\n  /** nome del bottone da cliccare */\n  @Input() operationLabel: string;\n  /** flag che fa apparire il tasto per la fattura elettronica */\n  @Input() canInvoice: boolean;\n\n  @Output() payStatus = new EventEmitter<{price: string, date: string, invoice: string}>();\n\n  formCrl: FormGroup;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.formCrl = this.fb.group({\n      price: this.fb.control('', [Validators.required]),\n      date: this.fb.control({value: this.getDateNow(), disabled: true}, [Validators.required]),\n      invoice: this.fb.control(false, []),\n    });\n  }\n\n  private getDateNow() {\n    return new Date().toISOString().substr(0, 10);\n  }\n\n  /** effettua l'azione di submit del bottone */\n  makeAction(submit: MatButton) {\n    if (!this.formCrl.invalid) {\n      // NOTA: date non è incluso in formCtr perchè è disabilitato\n      this.payStatus.emit({...this.formCrl.value, date: this.getDateNow()});\n      this.formCrl.disable();\n      submit.disabled = true;\n    }\n  }\n\n}\n","<h1 class=\"title\" style=\"margin-top: 20px;\">{{ title }}</h1>\n\n<form class=\"form\" [formGroup]=\"formCrl\">\n  <div class=\"flex-container\">\n    <div class=\"inputs-pay\">\n      <div>\n        <mat-form-field class=\"middle-width\">\n          <mat-label>Prezzo</mat-label>\n          <input matInput type=\"number\" formControlName=\"price\" />\n        </mat-form-field>\n      </div>\n      <div>\n        <mat-form-field class=\"middle-width\">\n          <mat-label>Data</mat-label>\n          <input matInput type=\"date\" formControlName=\"date\" />\n        </mat-form-field>\n      </div>\n    </div>\n    <div class=\"inputs-button\">\n      <span *ngIf=\"canInvoice !== false\"  style=\"margin: 0 5px 5px 40px\">\n        <mat-checkbox formControlName=\"invoice\">Fattura elettronica</mat-checkbox>\n      </span>\n      <span>\n        <button #submit mat-raised-button color=\"primary\" (click)=\"makeAction(submit)\">{{operationLabel}}</button>\n      </span>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from '@angular/material/snack-bar';\nimport { asyncScheduler, scheduled } from 'rxjs';\nimport { mergeAll, map } from 'rxjs/operators';\nimport { ClienteService } from 'src/app/core';\nimport { UtenteType } from 'src/app/core/constants/utente-type.enum';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { SelfStore } from 'src/app/core/store/self.store';\nimport { InfoDialogComponent } from 'src/app/shared/components/info-dialog/info-dialog.component';\nimport { Cliente } from 'src/app/shared/models/cliente.model';\nimport { Conto } from 'src/app/shared/models/conto.model';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  readonly buttonWidth = '400px';\n  readonly buttonHeight = '250px';\n\n  private readonly toastConfig = {\n    horizontalPosition: 'center' as MatSnackBarHorizontalPosition,\n    verticalPosition: 'top' as MatSnackBarVerticalPosition,\n    panelClass: 'toast-warning',\n  };\n\n  constructor(\n    private routingService: RoutingService,\n    private selfStore: SelfStore,\n    private clienteService: ClienteService,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.routingService.updateHeader('Home');\n    if (!this.selfStore.email || !this.selfStore.budget) {\n      scheduled([\n        this.clienteService.getSelfClient(),\n        this.clienteService.getSelfConto(),\n      ], asyncScheduler).pipe(\n        mergeAll(),\n        map((element) => {\n          if (this.isSelfCliente(element)) {\n            this.selfStore.updateCliente(element as Cliente);\n          } else if (this.isSelfConto(element)) {\n            this.selfStore.updateConto(element as Conto);\n          }\n        })\n      )\n      .subscribe(() => this.handleCustomerPermission());\n    } else {\n      this.handleCustomerPermission();\n    }\n  }\n\n  gotoPayment() {\n    this.routingService.gotoPayment();\n  }\n\n  gotoRecharge() {\n    this.routingService.gotoRecharge();\n  }\n\n  gotoMovements() {\n    this.routingService.gotoMovements();\n  }\n\n  /** verifica che il cliente sia un mercante */\n  isMercant(): boolean {\n    return this.selfStore.type === UtenteType.commerciante;\n  }\n\n  getInfoDialog() {\n    const dialogRef = this.dialog.open(InfoDialogComponent);\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n\n  /**\n   * verifica che il login abbia restituito un commerciante, altrimenti blocca l'atm chiedendo un upgrade\n   */\n  private handleCustomerPermission() {\n    if (!this.isMercant()) {\n      // warning: che serve un accesso da commerciante\n      this.snackBar.open('Per usare l\\'ATM è necessario un account da commerciante. Aggiorna il tuo profilo', 'Undo', this.toastConfig);\n    }\n  }\n\n  /** verifica se l'oggetto passato è un cliente */\n  private isSelfCliente(cliente): boolean {\n    return cliente && cliente.email;\n  }\n\n    /** verifica se l'oggetto passato è un conto */\n    private isSelfConto(conto): boolean {\n      return conto && conto.budget;\n    }\n}\n","<div class=\"container\">\n  <div class=\"element\">\n    <app-big-button\n      class=\"button\"\n      label=\"Pagamento\"\n      icon=\"euro\"\n      [disabled]=\"!isMercant()\"\n      (clickEmitter)=\"gotoPayment()\"\n    >\n    </app-big-button>\n  </div>\n  <div class=\"element\">\n    <app-big-button\n      class=\"button\"\n      label=\"Info Conto\"\n      icon=\"info\"\n      (clickEmitter)=\"getInfoDialog()\"\n    ></app-big-button>\n  </div>\n</div>\n<div class=\"container\">\n  <div class=\"element\">\n    <app-big-button\n      class=\"button\"\n      label=\"Ricarica\"\n      icon=\"publish\"\n      [disabled]=\"!isMercant()\"\n      (clickEmitter)=\"gotoRecharge()\"\n    ></app-big-button>\n  </div>\n  <div class=\"element\">\n    <app-big-button\n      class=\"button\"\n      label=\"Movimenti\"\n      icon=\"account_balance_wallet\"\n      [disabled]=\"!isMercant()\"\n      (clickEmitter)=\"gotoMovements()\"\n    ></app-big-button>\n  </div>\n</div>\n\n<div class=\"container\">\n  <div class=\"full-element\">\n    <app-banner></app-banner>\n  </div>\n</div>\n","export enum LoginType {\n  pin= 'PIN',\n  qr= 'QR',\n  nfc= 'NFC',\n  success= 'SUCCESS',\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n\n  constructor() { }\n\n  public getItem(name: string) {\n    const item = localStorage.getItem(name);\n    return JSON.parse(!item || item === 'undefined' ? null : item);\n  }\n\n  public setItem(name: string, value: any) {\n    if (value === undefined) {\n      localStorage.removeItem(name);\n    } else {\n      localStorage.setItem(name, JSON.stringify(value));\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isNumber } from 'util';\n\n/**\n * restituisce il minimo tra i due valori passati\n */\n@Pipe({\n  name: 'min'\n})\nexport class MinPipe implements PipeTransform {\n\n  transform(values: number[], ...args: unknown[]): number {\n    if (!Array.isArray(values)) {\n      console.error('MinPipe richiede la presenza di un array di numeri per funzionare');\n      console.error(values);\n      return -1;\n    }\n    if (values.some(n => !(typeof n === 'number'))) {\n      console.error('MinPipe richiede che l\\'array contenga valori numerici');\n      console.error(values);\n      return -1;\n    }\n    return Math.min(...values);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-abstract-join-part',\n  templateUrl: './abstract-join-part.component.html',\n  styleUrls: ['./abstract-join-part.component.scss']\n})\nexport abstract class AbstractJoinPartComponent implements OnInit {\n\n  /** controller del form */\n  formCrl: FormGroup;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  validate() {\n    if (this.formCrl.valid) {\n      return true;\n    } else {\n      this.validateAllFormFields(this.formCrl);\n      return false;\n    }\n  }\n\n  abstract getValue(): object;\n\n  private validateAllFormFields(formGroup: FormGroup) {\n    Object.keys(formGroup.controls).forEach((field) => {\n      const control = formGroup.get(field);\n      if (control instanceof FormControl) {\n        control.markAsTouched({ onlySelf: true });\n      } else if (control instanceof FormGroup) {\n        this.validateAllFormFields(control);\n      }\n    });\n  }\n\n}\n","<p>abstract-join-part works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<img src=\"assets/loader.gif\" alt=\"loader\">\n<mat-icon svgIcon=\"bank\" class=\"logo\"></mat-icon>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { ApiRoute } from '../../../core';\nimport { AuthStore } from '../store/auth.store';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n\n  constructor(private http: HttpClient, private authStore: AuthStore) {}\n\n\n  getToken(email: string, password: string) {\n    const params = { email, password };\n    return this.http.post<{ token: string }>(ApiRoute.login, params).pipe(\n      map((response) => {\n        if (response && response.token) {\n          this.authStore.token = response.token;\n          return response.token;\n        }\n        return '';\n      }),\n      catchError(error => {\n        throw(error);\n      })\n    );\n  }\n\n  /** */\n  logout() {\n    return this.http.post(ApiRoute.logout, {}).pipe(\n      map((response) => {\n        if (response) {\n          this.authStore.token = undefined;\n        }\n        return true;\n      }),\n      catchError(error => {\n        console.error(error);\n        this.authStore.token = undefined;\n        return of(false);\n      })\n    );\n  }\n}\n","import { HTTP_INTERCEPTORS, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { AuthStore } from '../../features/login-page/store/auth.store';\n\n/** Pass untouched request through to the next request handler. */\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n\n  constructor(private authStore: AuthStore, private router: Router) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const authReq = req.clone({\n      headers: req.headers.set('Authorization', this.authStore.token || '')\n    });\n    return next.handle(authReq)\n    .pipe(\n      // filter((response: HttpResponse<any>) => ),\n      map( (response: HttpResponse<any>) => {\n          if ( response && response.status === 403) {\n            console.error('Token di accesso scaduto, logout!');\n            this.authStore.token = undefined;\n            this.router.navigate([]);\n          }\n          return response;\n      })\n    );\n  }\n}\n\n/** Http interceptor providers in outside-in order */\nexport const httpInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n];\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { RoutersPath } from '../constants/routing.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoutingService {\n\n  activeSection = '';\n  activeSection$ = new Subject<string>();\n\n\n  constructor(private router: Router) { }\n\n\n  /** gestisce l'header nel TemplateComponent */\n  updateHeader(text: string) {\n    this.activeSection = text;\n    this.activeSection$.next(text);\n  }\n\n  gotoHome() {\n    this.router.navigate([RoutersPath.home]);\n  }\n\n  gotoLogin() {\n    this.router.navigate([RoutersPath.login]);\n  }\n\n  gotoPayment() {\n    this.router.navigate([RoutersPath.payment]);\n  }\n\n  gotoRecharge() {\n    this.router.navigate([RoutersPath.recharge]);\n  }\n\n  gotoMovements() {\n    this.router.navigate([RoutersPath.movements]);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MovementsComponent } from './movements.component';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { SharedModule } from 'src/app/shared';\nimport {MatTableModule} from '@angular/material/table';\n\n\n@NgModule({\n  declarations: [MovementsComponent],\n  imports: [\n    CommonModule,\n    CoreModule,\n    SharedModule,\n    MatTableModule,\n  ]\n})\nexport class MovementsModule { }\n","import { environment } from 'src/environments/environment';\n\nexport const RoutersPath = {\n  base: '',\n  home: 'home',\n  login: 'login',\n  payment: 'payments',\n  recharge: 'recharges',\n  movements: 'movements',\n  // reload: 'reload'\n};\n\nexport const baseUrl = environment.apiUrl;\n\nexport const ApiRoute = {\n  login: baseUrl + 'api/login',\n  logout: baseUrl + 'api/logout',\n  clienti: baseUrl + 'api/clienti',\n  movimenti: baseUrl + 'api/movimenti',\n  pagamenti: baseUrl + 'api/pagamenti',\n  ricariche: baseUrl + 'api/ricariche',\n  conti: baseUrl + 'api/conti',\n\n};\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MovimentoService } from 'src/app/core';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { SelfStore } from 'src/app/core/store/self.store';\nimport { DialogData } from 'src/app/features/payments/payments.component';\nimport { Cliente } from 'src/app/shared/models/cliente.model';\n\n@Component({\n  selector: 'app-dialog-recharge',\n  templateUrl: './dialog-recharge.component.html',\n  styleUrls: ['./dialog-recharge.component.scss']\n})\nexport class DialogRechargeComponent {\n\n\n  public cliente: Cliente;\n  public priceInfo: DialogData['priceInfo'];\n\n  constructor(\n    private dialogRef: MatDialogRef<DialogRechargeComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: DialogData,\n    private movimentoService: MovimentoService,\n    private selfStore: SelfStore,\n    private routingService: RoutingService,\n    private snackBar: MatSnackBar,\n  ) {\n    this.cliente = data.cliente;\n    this.priceInfo = data.priceInfo;\n  }\n\n  completeRecharge() {\n    this.movimentoService\n      .ricarica(this.cliente.idConto, this.selfStore.idConto, this.priceInfo.price)\n      .subscribe(() => {\n        // ricarica avvenuto con successo\n        this.openSnackBar('ricarica effettuata con successo', 'success');\n      },\n      (error) => {\n        // errore nel ricarica\n        this.openSnackBar('ricarica fallita', 'failure');\n        console.error(error);\n      },\n      // complete\n      () => {\n        this.dialogRef.close();\n        this.routingService.gotoHome();\n      });\n  }\n\n  undo() {\n    this.dialogRef.close();\n    window.location.reload();\n  }\n\n  private openSnackBar(message: string, cssClass?: string) {\n    this.snackBar.open(message, 'chiudi', {\n      // verticalPosition: MatSnackBarVerticalPosition,\n      // horizontalPosition: MatSnackBarHorizontalPosition,\n      panelClass: ['rechargetost', cssClass],\n      //duration: 10000,\n    });\n  }\n}\n","<div>\n  <h2>Confermi l'operazione?</h2>\n  <div class=\"container\">\n    <button class=\"marg\" mat-raised-button color=\"primary\" (click)=\"completeRecharge()\">PROSEGUI</button>\n    <button class=\"marg\" mat-raised-button color=\"secondary\" (click)=\"undo()\">INDIETRO</button>\n  </div>\n\n</div>\n","/** enviroment della build per il testing */\nexport const environment = {\n  production: false,\n  enviromentName: 'Application',\n  apiUrl: '/',\n};\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarRef,\n  MatSnackBarVerticalPosition,\n  TextOnlySnackBar,\n} from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { RoutersPath } from 'src/app/core';\nimport { LoginService } from 'src/app/features/login-page/services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  /** controller del form */\n  formCrl: FormGroup;\n\n  @Output() joinRequest = new EventEmitter<void>();\n\n  private errorToastRef: MatSnackBarRef<TextOnlySnackBar> = null;\n\n  private readonly toastConfig = {\n    horizontalPosition: 'center' as MatSnackBarHorizontalPosition,\n    verticalPosition: 'top' as MatSnackBarVerticalPosition,\n    panelClass: 'toast-error',\n  };\n\n  constructor(\n    private fb: FormBuilder,\n    private loginService: LoginService,\n    private router: Router,\n    private snackBar: MatSnackBar\n  ) {\n    this.formCrl = this.fb.group({\n      email: this.fb.control('', [Validators.required, Validators.email]),\n      password: this.fb.control('', [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(16),\n      ]),\n    });\n  }\n\n  ngOnInit() {}\n\n  login() {\n    this.loginService\n      .getToken(this.formCrl.value.email, this.formCrl.value.password)\n      .subscribe(\n        (token) => {\n          if (this.errorToastRef) {\n            this.errorToastRef.dismiss();\n          }\n          return this.router.navigate([RoutersPath.home], {});\n        },\n        (error: HttpErrorResponse) => {\n          if (error && error.status) {\n            if (error.status === 401) {\n                this.errorToastRef = this.snackBar.open(\n                'Dati per il login errati!',\n                'Undo',\n                this.toastConfig\n              );\n            }\n          } else {\n            console.error(error);\n            this.snackBar.open(\n              'Errore generico durante il login!',\n              'Undo',\n              this.toastConfig\n            );\n          }\n        }\n      );\n  }\n\n  join() {\n    this.joinRequest.next();\n  }\n}\n","<div>\n  <form class=\"form\" [formGroup]=\"formCrl\">\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput placeholder=\"email*\" formControlName=\"email\" />\n        <mat-error *ngIf=\"formCrl.controls['email'].hasError('required')\"> Email <strong>obbligatoria</strong> </mat-error>\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput type=\"password\" placeholder=\"Password*\" formControlName=\"password\"/>\n        <mat-error *ngIf=\"formCrl.controls['password'].hasError('minLength') || formCrl.controls['password'].hasError('maxLength') || formCrl.controls['password'].hasError('numeric')\">\n          il pin è composto da 4-16 cifre <strong>numeriche</strong>\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['password'].hasError('required')\"> pin obbligatorio per il login </mat-error>\n      </mat-form-field>\n    </div>\n    <div class=\"login\">\n        <button mat-button color=\"primary\" [disabled]=\"formCrl.status === 'INVALID'\" (click)=\"login()\">Login</button>\n    </div>\n    <div class=\"join\">\n      <button mat-button color=\"primary\" (click)=\"join()\">Crea un nuovo account</button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { asyncScheduler, scheduled } from 'rxjs';\nimport { map, mergeAll } from 'rxjs/operators';\nimport { ClienteService } from 'src/app/core';\nimport { UtenteType } from 'src/app/core/constants/utente-type.enum';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { SelfStore } from 'src/app/core/store/self.store';\nimport { Cliente } from '../../models/cliente.model';\nimport { Conto } from '../../models/conto.model';\n\n@Component({\n  selector: 'app-info-dialog',\n  templateUrl: './info-dialog.component.html',\n  styleUrls: ['./info-dialog.component.scss']\n})\nexport class InfoDialogComponent implements OnInit {\n\n  constructor(public selfStore: SelfStore, private clienteService: ClienteService, private routingService: RoutingService) { }\n\n  ngOnInit(): void {\n    if (!this.selfStore.email || !this.selfStore.budget) {\n      scheduled([\n        this.clienteService.getSelfClient(),\n        this.clienteService.getSelfConto(),\n      ], asyncScheduler).pipe(\n        mergeAll(),\n        map((element) => {\n          if (this.isSelfCliente(element)) {\n            this.selfStore.updateCliente(element as Cliente);\n          } else if (this.isSelfConto(element)) {\n            this.selfStore.updateConto(element as Conto);\n          }\n        })\n      )\n      .subscribe(() => this.handleCustomerPermission());\n    }\n  }\n\n  /** verifica che il cliente sia un mercante */\n  isMercant(): boolean {\n    return this.selfStore.type === UtenteType.commerciante;\n  }\n\n  /**\n   * verifica che il login abbia restituito un commerciante, altrimenti blocca l'atm chiedendo un upgrade\n   */\n  private handleCustomerPermission() {\n    if (!this.isMercant()) {\n      this.routingService.gotoHome();\n    }\n  }\n\n  /** verifica se l'oggetto passato è un cliente */\n  private isSelfCliente(cliente): boolean {\n    return cliente && cliente.email;\n  }\n\n  /** verifica se l'oggetto passato è un conto */\n  private isSelfConto(conto): boolean {\n    return conto && conto.budget;\n  }\n\n}\n","<h2 mat-dialog-title>Informazioni ATM</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <div class=\"info\">\n    <div class=\"labels\">\n      <div class=\"info--id label\">Identificativo Utente:</div>\n      <div class=\"info--name label\">Nome:</div>\n      <div class=\"info--cf label\">CF:</div>\n      <div class=\"info--birth-date label\">Data nascita:</div>\n      <div class=\"info--email label\">Email:</div>\n      <div class=\"info--rag label\">Ragione Sociale:</div>\n      <div class=\"info--piva label\">P.Iva:</div>\n      <div class=\"info--addr label\">Indirizzo:</div>\n      <div class=\"info--phone label\">Tel.:</div>\n      <div class=\"info--conto label\">Num. Conto:</div>\n      <div class=\"info--saldo label\">Saldo:</div>\n    </div>\n    <div class=\"values\">\n      <div class=\"info--id value\">{{selfStore.id || '-'}}</div>\n      <div class=\"info--name value\">{{selfStore.cognome}} {{selfStore.nome}} </div>\n      <div class=\"info--cf value\">{{selfStore.cf}}</div>\n      <div class=\"info--birth-date value\">{{selfStore.birthDate}}</div>\n      <div class=\"info--email value\">{{selfStore.email}}</div>\n      <div class=\"info--rag value\">{{selfStore.ragSociale}}</div>\n      <div class=\"info--piva value\">{{selfStore.pIva}}</div>\n      <div class=\"info--addr value\">{{selfStore.address || '-'}}</div>\n      <div class=\"info--phone value\">{{selfStore.phone || '-'}}</div>\n      <div class=\"info--conto value\">{{selfStore.idConto || '-'}}</div>\n      <div class=\"info--saldo value\">{{selfStore.saldo || '-'}}</div>\n    </div>\n  </div>\n\n  </mat-dialog-content>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ClienteService } from 'src/app/core';\nimport { RoutingService } from 'src/app/core/services/routing.service';\n\nenum StatusEnum {\n  waiting = 'waiting',\n  success = 'success',\n  failed = 'failed',\n}\n\n@Component({\n  selector: 'app-join-part3',\n  templateUrl: './join-part3.component.html',\n  styleUrls: ['./join-part3.component.scss']\n})\nexport class JoinPart3Component implements OnInit {\n  readonly StatusEnum = StatusEnum;\n\n  @Input() data: any;\n\n  status = StatusEnum.waiting;\n\n  constructor(private clienteService: ClienteService, private routingService: RoutingService) { }\n\n  ngOnInit(): void {\n    this.clienteService.register(this.data)\n    .subscribe({\n      next: () => {\n        this.status = StatusEnum.success;\n        setInterval(() => this.routingService.gotoHome(), 2000);\n      },\n      error: () => this.status = StatusEnum.failed\n    });\n  }\n\n}\n","<p *ngIf=\"status === StatusEnum.waiting\">in attesa della risposta del server...</p>\n<p *ngIf=\"status === StatusEnum.success\">registrazione completata con successo!</p>\n<p *ngIf=\"status === StatusEnum.failed\">registrazione fallita!</p>\n","import { Injectable } from '@angular/core';\nimport { LocalStorageService } from 'src/app/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthStore {\n\n  private pToken: string;\n\n\n  public get token() {\n    if (!this.pToken) {\n      this.pToken = this.localStorageService.getItem('token');\n    }\n    return this.pToken;\n  }\n\n  public set token(token) {\n    this.pToken = token;\n    this.localStorageService.setItem('token', token);\n  }\n\n  constructor(private localStorageService: LocalStorageService) { }\n\n}\n","export { SharedModule } from './shared.module';\n\nexport { LoginType } from './constants/login-type.enum';\n\nexport { QrCodeComponent } from './components/qr-code/qr-code.component';\nexport { NfcComponent } from './components/nfc/nfc.component';\nexport { PinComponent } from './components/pin/pin.component';\nexport { LoginComponent } from './components/login/login.component';\nexport { BigButtonComponent } from './components/big-button/big-button.component';\nexport { InfoWidgetComponent } from './components/info-widget/info-widget.component';\nexport { PriceWidgetComponent } from './components/price-widget/price-widget.component';\n\nexport { MinPipe } from './pipes/min.pipe';\nexport { SwitchNumberPipe } from './pipes/switch-number.pipe';\n\nexport { numericValidator, NumericDirective } from './directives/numeric.directive';\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { AuthStore } from '../login-page/store/auth.store';\nimport { LoginService } from '../login-page/services/login.service';\nimport { SelfStore } from 'src/app/core/store/self.store';\nimport { UtenteType } from 'src/app/core/constants/utente-type.enum';\n\n@Component({\n  selector: 'app-template',\n  templateUrl: './template.component.html',\n  styleUrls: ['./template.component.scss']\n})\nexport class TemplateComponent implements OnInit, OnDestroy {\n\n  public menuItems: { label: string, icon: string, clickEvent: () => void, isVisible: () => boolean, isEnable: () => boolean }[] = [\n    {\n      label: 'Home',\n      icon: 'more_vert',\n      clickEvent: () => this.routingService.gotoHome(),\n      isVisible: () => this.isLogin(),\n      isEnable: () => true,\n    },\n    {\n      label: 'Ricarica',\n      icon: 'publish',\n      clickEvent: () => this.routingService.gotoRecharge(),\n      isVisible: () => this.isLogin(),\n      isEnable: () => this.isMercant(),\n    },\n    {\n      label: 'Pagamento',\n      icon: 'euro',\n      clickEvent: () => this.routingService.gotoPayment(),\n      isVisible: () => this.isLogin(),\n      isEnable: () => this.isMercant(),\n    },\n    {\n      label: 'Movimenti',\n      icon: 'account_balance_wallet',\n      clickEvent: () => this.routingService.gotoMovements(),\n      isVisible: () => this.isLogin(),\n      isEnable: () => this.isMercant(),\n    },\n    {\n      label: 'Logout',\n      icon: 'lock',\n      clickEvent: () => this.logout(),\n      isVisible: () => this.isLogin(),\n      isEnable: () => true,\n    },\n  ];\n\n  actSection = this.routingService.activeSection;\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(public routingService: RoutingService, private authStore: AuthStore, private loginService: LoginService, private selfStore: SelfStore) {}\n\n  ngOnInit(): void {\n    this.subscriptions.push(\n      this.routingService.activeSection$.subscribe(activeSection =>\n        setTimeout(() => (this.actSection = activeSection), 0)\n      )\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n\n  isLogin(): boolean {\n    return !!this.authStore.token;\n  }\n\n  logout() {\n    this.loginService.logout().subscribe(() => {\n      this.selfStore.reset();\n      this.routingService.gotoLogin();\n    });\n  }\n\n  menuDisabled(): boolean {\n    return !this.menuItems.some((item) => item.isVisible());\n  }\n\n  isMercant(): boolean {\n    return this.selfStore.type === UtenteType.commerciante;\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"\" [disabled]=\"menuDisabled()\">\n      <mat-icon>more_vert</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n      <ng-container  *ngFor=\"let item of menuItems\">\n        <button\n          mat-menu-item\n          *ngIf=\"item.isVisible()\"\n          (click)=\"item.clickEvent()\"\n          [disabled]=\"!item.isEnable()\"\n        >\n          <mat-icon>{{ item.icon }}</mat-icon>\n          <span>{{ item.label }}</span>\n        </button>\n      </ng-container>\n    </mat-menu>\n\n    <span class=\"title-big\">EasyPay</span>\n    <span class=\"title-separe\"> --> </span>\n    <span class=\"title-activePage\"> {{ actSection }} </span>\n  </mat-toolbar-row>\n</mat-toolbar>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nfc',\n  templateUrl: './nfc.component.html',\n  styleUrls: ['./nfc.component.scss']\n})\nexport class NfcComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-icon svgIcon=\"nfc-variant\" class=\"nfc-icon\"></mat-icon>\n<div class=\"nfc-message\">passare il cellulare con nfc abilitato sul dispositivo per collegarsi</div>\n\n<div class=\"not-support\">(non supportato su questo dispositivo)</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\n\nimport { CoreModule } from '../core/core.module';\nimport { BannerComponent } from './components/banner/banner.component';\nimport { BigButtonComponent } from './components/big-button/big-button.component';\nimport { ErrorPageComponent } from './components/error-page/error-page.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { InfoDialogComponent } from './components/info-dialog/info-dialog.component';\nimport { InfoWidgetComponent } from './components/info-widget/info-widget.component';\nimport { JoinComponent } from './components/join/join.component';\nimport { JoinDashboardComponent } from './components/join/parts/join-dashboard/join-dashboard.component';\nimport { JoinPart0Component } from './components/join/parts/join-part0/join-part0.component';\nimport { JoinPart1Component } from './components/join/parts/join-part1/join-part1.component';\nimport { JoinPart2Component } from './components/join/parts/join-part2/join-part2.component';\nimport { JoinPart3Component } from './components/join/parts/join-part3/join-part3.component';\nimport { LoaderComponent } from './components/loader/loader.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { NfcComponent } from './components/nfc/nfc.component';\nimport { PinComponent } from './components/pin/pin.component';\nimport { PriceWidgetComponent } from './components/price-widget/price-widget.component';\nimport { QrCodeComponent } from './components/qr-code/qr-code.component';\nimport { RecognitionComponent } from './components/recognition/recognition.component';\nimport { NumericDirective } from './directives/numeric.directive';\nimport { MinPipe } from './pipes/min.pipe';\nimport { SwitchNumberPipe } from './pipes/switch-number.pipe';\nimport { InfoAtmComponent } from './info-atm/info-atm.component';\n\n@NgModule({\n  declarations: [\n    QrCodeComponent,\n    NfcComponent,\n    PinComponent,\n    NumericDirective,\n    LoaderComponent,\n    ErrorPageComponent,\n    ErrorComponent,\n    LoginComponent,\n    BigButtonComponent,\n    BannerComponent,\n    RecognitionComponent,\n    MinPipe,\n    SwitchNumberPipe,\n    InfoWidgetComponent,\n    JoinComponent,\n    JoinPart0Component,\n    JoinPart1Component,\n    JoinPart2Component,\n    JoinDashboardComponent,\n    JoinPart3Component,\n    PriceWidgetComponent,\n    InfoDialogComponent,\n    InfoAtmComponent,\n  ],\n  imports: [\n    CommonModule,\n    CoreModule,\n    ReactiveFormsModule,\n    ZXingScannerModule,\n    MatInputModule,\n    MatGridListModule,\n    MatButtonModule,\n    MatCardModule,\n    MatSliderModule,\n    MatRadioModule,\n    MatDividerModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatIconModule,\n    MatTableModule,\n  ],\n  exports: [\n    LoaderComponent,\n    ErrorComponent,\n    LoginComponent,\n    BigButtonComponent,\n    BannerComponent,\n    InfoAtmComponent,\n    RecognitionComponent,\n    MinPipe,\n    SwitchNumberPipe,\n    InfoWidgetComponent,\n    JoinComponent,\n    PriceWidgetComponent,\n    MatInputModule,\n    MatGridListModule,\n    MatButtonModule,\n    MatCardModule,\n    MatSliderModule,\n    MatRadioModule,\n    MatDividerModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatIconModule,\n    MatTableModule,\n  ],\n  entryComponents: [JoinPart0Component, JoinPart1Component, JoinPart2Component, JoinPart3Component, InfoDialogComponent, InfoAtmComponent],\n})\nexport class SharedModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { Cliente } from '../../shared/models/cliente.model';\nimport { UtenteType } from '../constants/utente-type.enum';\nimport { SelfStore } from '../store/self.store';\nimport { ApiRoute } from '../constants/routing.constants';\nimport { Conto } from '../../shared/models/conto.model';\nimport { ApiCliente } from '../api-models/api-cliente.model';\nimport { ApiConto } from '../api-models/api-conto.model';\nimport { ApiPostClienti } from '../api-models/api-post-cliente.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClienteService {\n\n  constructor(private http: HttpClient, private selfStore: SelfStore) {\n  }\n\n  getClienteByPin(id: string, pin: string): Observable<Cliente>  {\n    const params: {pin: string} =  { pin } ;\n    return this._getClient(id, params);\n  }\n\n  getClienteByTokenOtp(otp: string): Observable<Cliente> {\n    const id = '0'; // TODO: ottenere l'id dall' OTP\n    const params: {otp: string} = { otp };\n    return this._getClient(id, params);\n  }\n\n  /** restituisce  */\n  getSelfClient(): Observable<Cliente> {\n    return this.http.get<ApiCliente>(`${ApiRoute.clienti}/self`).pipe(\n      map(apiCliente => ({\n        type: UtenteType.cliente,\n        ...apiCliente,\n        id: apiCliente.id + '',\n        idConto: apiCliente.id_conto + '',\n        birthDate: apiCliente.birth_date,\n      }))\n    );\n  }\n\n  getSelfConto(): Observable<Conto> {\n    return this.http.get<ApiConto>(`${ApiRoute.conti}/self`).pipe(\n      map(apiConto => ({...apiConto, id: apiConto.id + '', idCliente: apiConto.id_cliente + '' } as Conto)),\n    );\n  }\n\n\n  register(data: ApiPostClienti): Observable<any> {\n    return this.http.post(ApiRoute.clienti, data);\n  }\n\n  /** effettua la richiesta HTTP per verificare se il login del cliente va a buon fine */\n  private _getClient(id: string, params: {pin?: string; otp?: string}): Observable<Cliente> {\n    return this.http.get<Cliente>(`${ApiRoute.clienti}/${id}`, {params}).pipe(\n        map(result => ({ type: UtenteType.cliente, ...result })),\n        // workaround per adattare la struttura cliente con quella ricevuta dal server\n        map((cliente: any) => ({...cliente, idConto: cliente.id_conto})),\n        catchError(error => { throw(error); })\n      );\n  }\n}\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { asyncScheduler, forkJoin, scheduled, Subject } from 'rxjs';\nimport { map, mergeAll } from 'rxjs/operators';\nimport { ClienteService } from 'src/app/core';\nimport { UtenteType } from 'src/app/core/constants/utente-type.enum';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { SelfStore } from 'src/app/core/store/self.store';\nimport { Cliente } from 'src/app/shared/models/cliente.model';\nimport { Conto } from 'src/app/shared/models/conto.model';\n\nimport { DialogPaymentComponent } from './components/dialog-payment/dialog-payment.component';\n\n\nexport interface DialogData {\n  cliente: Cliente;\n  priceInfo: { price: string; date: string; invoice: string };\n}\n\n\n@Component({\n  selector: 'app-payments',\n  templateUrl: './payments.component.html',\n  styleUrls: ['./payments.component.scss'],\n})\nexport class PaymentsComponent implements OnInit, AfterViewInit {\n  public a = new Subject<Cliente>();\n  public b = new Subject<{ price: string; date: string; invoice: string }>();\n\n  constructor(\n    private routingService: RoutingService,\n    public selfStore: SelfStore,\n    private clienteService: ClienteService,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    if (!this.selfStore.email || !this.selfStore.budget) {\n      scheduled([\n        this.clienteService.getSelfClient(),\n        this.clienteService.getSelfConto(),\n      ], asyncScheduler).pipe(\n        mergeAll(),\n        map((element) => {\n          if (this.isSelfCliente(element)) {\n            this.selfStore.updateCliente(element as Cliente);\n          } else if (this.isSelfConto(element)) {\n            this.selfStore.updateConto(element as Conto);\n          }\n        })\n      )\n      .subscribe(() => this.handleCustomerPermission());\n    } else {\n      this.handleCustomerPermission();\n    }\n    this.completePayment();\n  }\n\n  ngAfterViewInit() {\n    this.routingService.updateHeader('Pagamento');\n  }\n\n  authClientStatus(cliente: Cliente) {\n    this.a.next(cliente);\n    this.a.complete();\n  }\n\n  payStatus(status: { price: string; date: string; invoice: string }) {\n    this.b.next(status);\n    this.b.complete();\n  }\n\n  completePayment() {\n    forkJoin({ cliente: this.a, priceInfo: this.b }).subscribe(\n      ({ cliente, priceInfo }) => {\n        this.dialog.open(DialogPaymentComponent, {\n          data: { cliente, priceInfo },\n          disableClose: true,\n        });\n      }\n    );\n  }\n\n  /** verifica che il cliente sia un mercante */\n  isMercant(): boolean {\n    return this.selfStore.type === UtenteType.commerciante;\n  }\n\n\n  /**\n   * verifica che il login abbia restituito un commerciante, altrimenti blocca l'atm chiedendo un upgrade\n   */\n  private handleCustomerPermission() {\n    if (!this.isMercant()) {\n      this.routingService.gotoHome();\n    }\n  }\n\n  /** verifica se l'oggetto passato è un cliente */\n  private isSelfCliente(cliente): boolean {\n    return cliente && cliente.email;\n  }\n\n  /** verifica se l'oggetto passato è un conto */\n  private isSelfConto(conto): boolean {\n    return conto && conto.budget;\n  }\n}\n","<div class=\"flex-parent\">\n  <div class=\"flex widget-container shadow-border mb20 mr10\">\n    <app-recognition class=\"relative recognition\" (authClientStatus)=\"authClientStatus($event)\"></app-recognition>\n  </div>\n  <div class=\"flex widget-container shadow-border mb20 ml10\">\n    <app-info-widget\n      class=\" info-table\"\n      title=\"Personale\"\n      [numConto]=\"this.selfStore.idConto\"\n      [name]=\"this.selfStore.cognome +' '+ this.selfStore.nome\"\n      [regSocial]=\"this.selfStore.ragSociale\"\n      [address]=\"this.selfStore.address\"\n    ></app-info-widget>\n  </div>\n</div>\n\n<div class=\"flex-parent\">\n  <div class=\"widget-container shadow-border flex mb20\">\n    <app-price-widget title=\"Pagamento\" operationLabel=\"Paga\" [canInvoice]=\"true\" (payStatus)=\"payStatus($event)\"></app-price-widget>\n  </div>\n</div>\n\n<div class=\"flex-parent\">\n  <div class=\"widget-container shadow-border spam-widget\">\n    <app-banner></app-banner>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { LoadingStatus, LoaderService } from './core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  statusLoader$: BehaviorSubject<LoadingStatus>;\n\n  constructor(\n    public loaderService: LoaderService,\n  ) {\n    this.statusLoader$ = this.loaderService.status$;\n  }\n}\n","<div class=\"container\">\n  <!-- loader in attesa di recuperare il conto -->\n  <!-- <ng-container *ngIf=\"!(statusLoader$ | async)\">\n    <app-loader></app-loader>\n  </ng-container> -->\n  <router-outlet></router-outlet>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n  /** titolo della pagina di errore */\n  @Input() titleLabel: string;\n\n  /** contenuto html del messaggio di errore */\n  @Input() content: string;\n\n  /** oggetto errore da stampare se presente */\n  @Input() error;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<ng-container>\n  <h1 class=\"mb-0\">\n    <mat-icon svgIcon=\"alert-circle\" class=\"logo\"></mat-icon>\n  </h1>\n  <h2 class=\"logo-title mt-0\">{{titleLabel}}</h2>\n  <div [innerHTML]=\"content\"></div>\n\n  <p>{{ error | json }}</p>\n</ng-container>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ApiRoute } from '../constants/routing.constants';\nimport { ApiMovimento } from '../api-models/api-movimento.model';\nimport { Movimento } from 'src/app/shared/models/movimento.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovimentoService {\n\n  constructor(private http: HttpClient) { }\n\n\n  /** effettua un movimento di pagamento sul idContoCliente */\n  pagamento(idContoCliente: string, idContoCommerciante: string, prezzo: string) {\n    const params = {\n      from: idContoCliente,\n      to: idContoCommerciante,\n      value: prezzo,\n    };\n    return this.http.post<{ success: boolean; error?: { id: string; message: string } }>(ApiRoute.pagamenti, params).pipe(\n      map(result => {\n        console.error('TODO: gestire la risposta del pagamento');\n      })\n    );\n  }\n\n  /** effettua un movimento di caricamento sul cliente indicato da idCliente */\n  ricarica(idContoCliente: string, idContoCommerciante: string, prezzo: string) {\n    const params = {\n      from: idContoCommerciante,\n      to: idContoCliente,\n      value: prezzo,\n    };\n    return this.http.post<{ success: boolean; error?: { id: string; message: string } }>(ApiRoute.ricariche, params).pipe(\n      map(result => {\n        console.error('TODO: gestire la risposta del pagamento');\n      })\n    );\n  }\n\n  /**\n   * restituisce i movimenti del conto identificato\n   * @param conto id del conto che si vuole ricercare (può essere self)\n   * @param direction tipo di ordinamento\n   * @param from data di inizio periodo di ricerca (AAAA-MM-GG)\n   * @param to data di fine periodo di ricerca (AAAA-MM-GG)\n   */\n  getMovimenti(conto: string, direction: string= '', from: string= '', to: string= ''): Observable<Movimento[]> {\n    return this.http.get<ApiMovimento[]>(ApiRoute.movimenti, {params: {conto, direction, from, to}});\n  }\n\n  /**\n   * restituisce solo le ricariche del conto identificato\n   * @param conto id del conto che si vuole ricercare (può essere self)\n   * @param direction tipo di ordinamento\n   * @param from data di inizio periodo di ricerca (AAAA-MM-GG)\n   * @param to data di fine periodo di ricerca (AAAA-MM-GG)\n   */\n  getRicariche(conto: string, direction: string= '', from: string= '', to: string= ''): Observable<Movimento[]> {\n    return this.http.get<ApiMovimento[]>(ApiRoute.ricariche, {params: {conto, direction, from, to}});\n  }\n\n  /**\n   * restituisce solo i pagamenti del conto identificato\n   * @param conto id del conto che si vuole ricercare (può essere self)\n   * @param direction tipo di ordinamento\n   * @param from data di inizio periodo di ricerca (AAAA-MM-GG)\n   * @param to data di fine periodo di ricerca (AAAA-MM-GG)\n   */\n  getPagamenti(conto: string, direction: string= '', from: string= '', to: string= ''): Observable<Movimento[]> {\n    return this.http.get<ApiMovimento[]>(ApiRoute.pagamenti, {params: {conto, direction, from, to}});\n  }\n}\n","import { Directive } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator, ValidatorFn } from '@angular/forms';\n\n/** Validatore di caratteri numerici. ritorna */\nexport function numericValidator(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const isNumeric = new RegExp('^[0-9]*$').test(control.value);\n    return !isNumeric ? { 'numeric': { value: control.value } } : null;\n  };\n}\n\n/** Direttiva usata per validare se in un HTMLInput ha solo valori numerici */\n@Directive({\n  selector: '[appNumeric]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: NumericDirective, multi: true }]\n})\nexport class NumericDirective implements Validator {\n\n  validate(control: AbstractControl): { [key: string]: any } | null {\n    return  numericValidator()(control);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { LoginPageModule } from './features/login-page/login-page.module';\nimport { PaymentsModule } from './features/payments/payments.module';\nimport { TemplateModule } from './features/template/template.module';\nimport { SharedModule } from './shared';\nimport { RechargeModule } from './features/recharge/recharge.module';\nimport { HomeModule } from './features/home/home.module';\nimport { MovementsModule } from './features/movements/movements.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule.forRoot(),\n    AppRoutingModule,\n    SharedModule,\n    TemplateModule,\n    LoginPageModule,\n    HomeModule,\n    PaymentsModule,\n    RechargeModule,\n    MovementsModule,\n  ],\n  providers: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CoreModule } from '@angular/flex-layout';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from 'src/app/shared';\n\nimport { HomeModule } from '../home/home.module';\nimport { TemplateComponent } from './template.component';\n\n@NgModule({\n  declarations: [TemplateComponent],\n  imports: [\n    CommonModule,\n    CoreModule,\n    SharedModule,\n    HomeModule,\n    RouterModule,\n  ],\n  exports: [TemplateComponent],\n})\nexport class TemplateModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MovimentoService } from 'src/app/core';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { SelfStore } from 'src/app/core/store/self.store';\nimport { Movimento } from 'src/app/shared/models/movimento.model';\n\n@Component({\n  selector: 'app-movements',\n  templateUrl: './movements.component.html',\n  styleUrls: ['./movements.component.scss']\n})\nexport class MovementsComponent implements OnInit {\n\n  displayedColumns: string[] = ['id', 'valore', 'tipo', 'from_name', 'to_name'];\n\n  dataSource: Observable<Movimento[]>;\n\n  constructor(private movimentoService: MovimentoService, public selfStore: SelfStore, private routingService: RoutingService) { }\n\n  ngOnInit(): void {\n    this.routingService.updateHeader('Movimenti');\n    this.dataSource = this.movimentoService.getMovimenti('self');\n  }\n\n}\n","<div class=\"info\">\n  <div class=\"labels\">\n    <div class=\"info--conto label\">Conto:</div>\n    <div class=\"info--name label\">Intestatario:</div>\n    <div class=\"info--saldo label\">Saldo:</div>\n  </div>\n  <div class=\"values\">\n    <div class=\"info--conto value\">{{ selfStore.idConto || \"-\" }}</div>\n    <div class=\"info--name value\">{{selfStore.cognome}} {{selfStore.nome}} </div>\n    <div class=\"info--saldo value\">{{ selfStore.saldo || \"0\" }}</div>\n  </div>\n</div>\n\n<table mat-table [dataSource]=\"dataSource | async\" class=\"mat-elevation-z8\">\n  <!-- Id Column -->\n  <ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef>Ref.</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n  </ng-container>\n\n  <!-- Valore Column -->\n  <ng-container matColumnDef=\"valore\">\n    <th mat-header-cell *matHeaderCellDef>Valore</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.valore }} €</td>\n  </ng-container>\n\n  <!-- Tipo Column -->\n  <ng-container matColumnDef=\"tipo\">\n    <th mat-header-cell *matHeaderCellDef>Tipo</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.type }}</td>\n  </ng-container>\n\n  <!-- From Column -->\n  <ng-container matColumnDef=\"from_name\">\n    <th mat-header-cell *matHeaderCellDef>Da</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.from_name || \"-\" }}</td>\n  </ng-container>\n\n  <!-- To Column -->\n  <ng-container matColumnDef=\"to_name\">\n    <th mat-header-cell *matHeaderCellDef>A</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.to_name }}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.scss']\n})\nexport class BannerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"banner\">\n  <h1 class=\"title\">Paga 20 euro con EasyPay e riceverai un cashback di 5 euro*  </h1>\n  <p class=\"message\">\n    *offerta valida fino al 25 gennaio 2025 e per i nuovi abbonati e altri avvisi legali utili a far\n    sembrare questo banner un vero banner pubblicitario di una ipotetica promozione. I soldi verranno caricati sul conto entro 30 mesi\n    (perciò in questa demo non saranno realmente caricati).  Il seguente testo è inutile e al solo scopo illustrativo.\n    Mi scuso per la pessima resa grafica del Banner, ma la sua presenza è a puro scopo illustrativo. La prossima volta ci affideremo ad un grafico\n     per un banner più colorato e divertente.</p>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../../shared';\nimport { DialogPaymentComponent } from './components/dialog-payment/dialog-payment.component';\nimport { PaymentsComponent } from './payments.component';\n\n@NgModule({\n  declarations: [PaymentsComponent, DialogPaymentComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n  ],\n  exports: [PaymentsComponent]\n})\nexport class PaymentsModule { }\n","export * from './constants/routing.constants';\n\nexport { ClienteService } from './services/cliente.service';\nexport { LoaderService } from './services/loader.service';\nexport { LoadingStatus } from './services/loader.service';\nexport { LocalStorageService } from './services/local-storage.service';\nexport { MovimentoService } from './services/movimento.service';\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from 'src/app/shared';\n\nimport { HomeComponent } from './home.component';\nimport { CoreModule } from 'src/app/core/core.module';\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [CommonModule, SharedModule, CoreModule],\n  exports: [HomeComponent]\n})\nexport class HomeModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { isBorn, isOver18, isPhone } from 'src/app/core/utils/custom-validator';\n\nimport { AbstractJoinPartComponent } from '../abstract-join-part/abstract-join-part.component';\n\n@Component({\n  selector: 'app-join-part1',\n  templateUrl: './join-part1.component.html',\n  styleUrls: ['./join-part1.component.scss'],\n})\nexport class JoinPart1Component extends AbstractJoinPartComponent\n  implements OnInit {\n  constructor(private fb: FormBuilder) {\n    super();\n    this.formCrl = this.fb.group({\n      nome: this.fb.control('', [Validators.required]),\n      cognome: this.fb.control('', [Validators.required]),\n      cf: this.fb.control('', [Validators.required]),\n      bornDate: this.fb.control('', [Validators.required, isOver18, isBorn]),\n      phone: this.fb.control('', [isPhone]),\n      address: this.fb.control('', []),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  getValue() {\n    return {\n      nome: this.formCrl.controls.nome.value,\n      cognome: this.formCrl.controls.cognome.value,\n      cf: this.formCrl.controls.cf.value,\n      birth_date: this.formCrl.controls.bornDate.value,\n      phone: this.formCrl.controls.phone.value,\n      address: this.formCrl.controls.address.value,\n    };\n  }\n}\n","<div class=\"container\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n  <form class=\"form\" [formGroup]=\"formCrl\">\n    <div class=\"flex-element\">\n      <mat-form-field>\n        <input matInput placeholder=\"nome*\" formControlName=\"nome\" />\n        <mat-error *ngIf=\"formCrl.controls['nome'].hasError('required')\">\n          nome <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"flex-element\">\n      <mat-form-field>\n        <input matInput placeholder=\"cognome*\" formControlName=\"cognome\" />\n        <mat-error *ngIf=\"formCrl.controls['cognome'].hasError('required')\">\n          cognome <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"flex-element\">\n      <mat-form-field>\n        <input matInput placeholder=\"codice fiscale*\" formControlName=\"cf\" />\n        <mat-error *ngIf=\"formCrl.controls['cf'].hasError('required')\">\n          codice fiscale <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"flex-element\">\n      <mat-form-field>\n        <input\n          matInput\n          placeholder=\"data di nascita*\"\n          [matDatepicker]=\"bornDatePicker\"\n          formControlName=\"bornDate\"\n        />\n        <mat-datepicker-toggle\n          matSuffix\n          [for]=\"bornDatePicker\"\n        ></mat-datepicker-toggle>\n        <mat-datepicker #bornDatePicker></mat-datepicker>\n        <mat-error *ngIf=\"formCrl.controls['bornDate'].hasError('required') && !formCrl.controls['bornDate'].hasError('matDatepickerParse')\">\n          data di nascita <strong>obbligatoria</strong>.\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['bornDate'].hasError('matDatepickerParse')\">\n          formato della data errato.\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['bornDate'].hasError('isOver18')\">\n          l'utente deve essere maggiorenne\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['bornDate'].hasError('isBorn')\">\n          Sicuramente avremo offerte molto più belle per quando nascerai!\n        </mat-error>\n      </mat-form-field>\n    </div>\n    <div class=\"flex-element\">\n      <mat-form-field>\n        <input matInput placeholder=\"telefono\" formControlName=\"phone\" />\n        <mat-error *ngIf=\"formCrl.controls['phone'].hasError('required')\">\n          telefono <strong>obbligatorio</strong>\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['phone'].hasError('isPhone')\">\n          Il telefono accetta un formato +390000000000\n        </mat-error>\n\n      </mat-form-field>\n    </div>\n\n    <div class=\"flex-element\">\n      <mat-form-field>\n        <input matInput placeholder=\"indirizzo\" formControlName=\"address\" />\n        <mat-error *ngIf=\"formCrl.controls['address'].hasError('required')\">\n          address <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n  </form>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CoreModule } from 'src/app/core/core.module';\n\nimport { SharedModule } from '../../shared';\nimport { LoginPageComponent } from './login-page.component';\nimport { LoginService } from './services/login.service';\nimport { AuthStore } from './store/auth.store';\n\n@NgModule({\n  declarations: [LoginPageComponent],\n  imports: [CommonModule, SharedModule, CoreModule],\n  exports: [LoginPageComponent],\n  providers: [LoginService, AuthStore]\n})\nexport class LoginPageModule {}\n","import { AbstractControl } from '@angular/forms';\n// NOTA: apparentemente la risposta { [errorName]: false } viene cmq bloccata dal validatore.\n// Trick Solution: in caso di validatore corretto passo null.\n\n/** form validator per verificare se l'età inserita (presumibilmente di nascita) sia maggiore di 18 */\nexport function isOver18(control: AbstractControl): { [key: string]: boolean } {\n  const errorCode = 'isOver18';\n\n  if (control && control.value) {\n    const age = getBirthday(control.value);\n    return  age >= 0 && age < 18 ? { [errorCode]: true } : null;\n  }\n  return null;\n}\n\n/** form validator per verificare se lutente è effettivamente nato (anni >= 0) */\nexport function isBorn(control: AbstractControl): { [key: string]: boolean } {\n  const errorCode = 'isBorn';\n\n  if (control && control.value) {\n    const bornDate = control.value;\n    return Date.now() - bornDate.getTime() < 0 ? { [errorCode]: true } : null;\n  }\n  return null;\n}\n\n/** verifica che il formato del numero sia corretto  */\nexport function isPhone(control: AbstractControl): { [key: string]: boolean } {\n  const errorCode = 'isPhone';\n  if (control && control.value) {\n    const phone = control.value;\n    const test = new RegExp('\\+\\d{12}').test(phone);\n    return test ? { [errorCode]: true }  : null;\n\n  }\n  return null;\n}\n\n/** Verifica se è presente almeno un valore uppercase */\nexport function haveUppercase(control: AbstractControl): { [key: string]: boolean } {\n  const errorCode = 'haveUppercase';\n  if (control && control.value) {\n    const password = control.value;\n    const test = new RegExp('[A-Z]+', 'g').test(password);\n    return test ? { [errorCode]: true }  : null;\n  }\n  return null;\n}\n\n/** Verifica se è presente almeno un valore Lowercase */\nexport function haveLowercase(control: AbstractControl): { [key: string]: boolean } {\n  const errorCode = 'haveLowercase';\n  if (control && control.value) {\n    const password = control.value;\n    const test = new RegExp('[a-z]+', 'g').test(password);\n    return test ? { [errorCode]: true }  : null;\n  }\n  return null;\n}\n\n/** Verifica se è presente almeno un valore numerico */\nexport function haveDigit(control: AbstractControl): { [key: string]: boolean } {\n  const errorCode = 'haveUppercase';\n  if (control && control.value) {\n    const password = control.value;\n    const test = new RegExp('\\d+', 'g').test(password);\n    return test ? { [errorCode]: true }  : null;\n  }\n  return null;\n}\n\n\n\n\n/**\n * funzione che restituisce gli anni dell' utente\n * NOTA: funzione semplificata che non tiene conto di ora solare ed eventuali calcoli particolari sul calendario\n * ma sifficiente a scopo dimostrativo per questo progetto.\n */\nfunction getBirthday(bornDate: Date): number {\n  const ageDifMs = Date.now() - bornDate.getTime();\n  if(ageDifMs < 0) {\n    return -1;\n  }\n  const ageDate = new Date(ageDifMs); // miliseconds from epoch\n  return Math.abs(ageDate.getUTCFullYear() - 1970);\n}\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { asyncScheduler, forkJoin, scheduled, Subject } from 'rxjs';\nimport { map, mergeAll } from 'rxjs/operators';\nimport { ClienteService } from 'src/app/core';\nimport { UtenteType } from 'src/app/core/constants/utente-type.enum';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { SelfStore } from 'src/app/core/store/self.store';\nimport { Cliente } from 'src/app/shared/models/cliente.model';\nimport { Conto } from 'src/app/shared/models/conto.model';\n\nimport { DialogRechargeComponent } from './components/dialog-recharge/dialog-recharge.component';\n\n@Component({\n  selector: 'app-recharge',\n  templateUrl: './recharge.component.html',\n  styleUrls: ['./recharge.component.scss']\n})\nexport class RechargeComponent implements OnInit, AfterViewInit {\n\n  public a = new Subject<Cliente>();\n  public b = new Subject<{ price: string; date: string; invoice: string }>();\n\n  constructor(\n    private routingService: RoutingService,\n    public selfStore: SelfStore,\n    private clienteService: ClienteService,\n    private dialog: MatDialog,\n  ) {}\n\n  ngOnInit(): void {\n    if (!this.selfStore.email || !this.selfStore.budget) {\n      scheduled([\n        this.clienteService.getSelfClient(),\n        this.clienteService.getSelfConto(),\n      ], asyncScheduler).pipe(\n        mergeAll(),\n        map((element) => {\n          if (this.isSelfCliente(element)) {\n            this.selfStore.updateCliente(element as Cliente);\n          } else if (this.isSelfConto(element)) {\n            this.selfStore.updateConto(element as Conto);\n          }\n        })\n      )\n      .subscribe(() => this.handleCustomerPermission());\n    } else {\n      this.handleCustomerPermission();\n    }\n    this.completeRecharge();\n  }\n\n  ngAfterViewInit() {\n    this.routingService.updateHeader('Ricarica');\n  }\n\n  authClientStatus(cliente: Cliente) {\n    this.a.next(cliente);\n    this.a.complete();\n  }\n\n  payStatus(status: { price: string; date: string; invoice: string }) {\n    this.b.next(status);\n    this.b.complete();\n  }\n\n  completeRecharge() {\n    forkJoin({ cliente: this.a, priceInfo: this.b }).subscribe(\n      ({ cliente, priceInfo }) => {\n        this.dialog.open(DialogRechargeComponent, {\n          data: { cliente, priceInfo },\n          disableClose: true,\n        });\n      }\n    );\n  }\n\n  /** verifica che il cliente sia un mercante */\n  isMercant(): boolean {\n    return this.selfStore.type === UtenteType.commerciante;\n  }\n\n\n  /**\n   * verifica che il login abbia restituito un commerciante, altrimenti blocca l'atm chiedendo un upgrade\n   */\n  private handleCustomerPermission() {\n    if (!this.isMercant()) {\n      this.routingService.gotoHome();\n    }\n  }\n\n  /** verifica se l'oggetto passato è un cliente */\n  private isSelfCliente(cliente): boolean {\n    return cliente && cliente.email;\n  }\n\n  /** verifica se l'oggetto passato è un conto */\n  private isSelfConto(conto): boolean {\n    return conto && conto.budget;\n  }\n}\n","<div class=\"flex-parent\">\n  <div class=\"flex widget-container shadow-border mb20 mr10\">\n    <app-recognition class=\"relative recognition\" (authClientStatus)=\"authClientStatus($event)\"></app-recognition>\n  </div>\n  <div class=\"flex widget-container shadow-border mb20 ml10\">\n    <app-info-widget\n      class=\" info-table\"\n      title=\"Personale\"\n      [numConto]=\"this.selfStore.idConto\"\n      [name]=\"this.selfStore.cognome +' '+ this.selfStore.nome\"\n      [regSocial]=\"this.selfStore.ragSociale\"\n      [address]=\"this.selfStore.address\"\n    ></app-info-widget>\n  </div>\n</div>\n\n<div class=\"flex-parent\">\n  <div class=\"widget-container shadow-border flex mb20\">\n    <app-price-widget title=\"Ricarica\" operationLabel=\"Ricarica\" [canInvoice]=\"false\" (payStatus)=\"payStatus($event)\"></app-price-widget>\n  </div>\n</div>\n\n<div class=\"flex-parent\">\n  <div class=\"widget-container shadow-border spam-widget\">\n    <app-banner></app-banner>\n  </div>\n</div>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { ClienteService } from 'src/app/core';\nimport { Cliente } from '../../models/cliente.model';\n\n@Component({\n  selector: 'app-pin',\n  templateUrl: './pin.component.html',\n  styleUrls: ['./pin.component.scss']\n})\nexport class PinComponent implements OnInit {\n  /** controller del form */\n  formCrl: FormGroup;\n\n  @Output() clientAuthEvent = new EventEmitter<Cliente>();\n\n  constructor(\n    private fb: FormBuilder,\n    private clienteService: ClienteService,\n  ) {\n    this.formCrl = this.fb.group({\n      userId: this.fb.control('', [Validators.required]),\n      pin: this.fb.control('', [Validators.required, Validators.minLength(4), Validators.maxLength(16)])\n    });\n  }\n\n  ngOnInit() {}\n\n  login() {\n    this.clienteService.getClienteByPin(this.formCrl.value.userId, this.formCrl.value.pin).subscribe(\n      cliente => this.clientAuthEvent.emit(cliente)\n    );\n  }\n}\n","<div>\n  <form class=\"form\" [formGroup]=\"formCrl\">\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput placeholder=\"ID*\" formControlName=\"userId\" />\n        <mat-error *ngIf=\"formCrl.controls['userId'].hasError('required')\"> L'id utente è <strong>richiesto</strong> </mat-error>\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput type=\"pin\" placeholder=\"pin*\" formControlName=\"pin\"/>\n        <mat-hint>4 cifre numeriche</mat-hint>\n        <mat-error *ngIf=\"formCrl.controls['pin'].hasError('minLength') || formCrl.controls['pin'].hasError('maxLength') || formCrl.controls['pin'].hasError('numeric')\">\n          il pin è composto da 4-16 cifre <strong>numeriche</strong>\n        </mat-error>\n        <mat-error *ngIf=\"formCrl.controls['pin'].hasError('required')\"> pin obbligatorio per il login </mat-error>\n      </mat-form-field>\n    </div>\n    <div class=\"login\">\n        <button mat-raised-button color=\"primary\" [disabled]=\"formCrl.status === 'INVALID'\" (click)=\"login()\">Login</button>\n    </div>\n  </form>\n</div>\n","import {\n  AfterViewInit,\n  Component,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { AbstractJoinPartComponent } from './parts/abstract-join-part/abstract-join-part.component';\nimport { JoinPart0Component } from './parts/join-part0/join-part0.component';\nimport { JoinPart1Component } from './parts/join-part1/join-part1.component';\nimport { JoinPart2Component } from './parts/join-part2/join-part2.component';\nimport { JoinPart3Component } from './parts/join-part3/join-part3.component';\n\n@Component({\n  selector: 'app-join',\n  templateUrl: './join.component.html',\n  styleUrls: ['./join.component.scss'],\n})\nexport class JoinComponent implements OnInit, OnDestroy, AfterViewInit {\n  readonly  maxPage = 3;\n\n  favoriteUserType: string;\n  page: number;\n  componentRef: ComponentRef<AbstractJoinPartComponent>;\n  data = {};\n\n  @ViewChild('adHost', { read: ViewContainerRef }) container;\n\n  @Output() loginRequest = new EventEmitter<void>();\n\n  constructor(private resolver: ComponentFactoryResolver) {\n  }\n\n  ngOnInit(): void {\n    this.page = 0;\n  }\n\n  ngOnDestroy() {\n    if (this.container) {\n      this.container.clear();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.loadComponent();\n    }, 0);\n  }\n\n  loadComponent() {\n\n    this.container.clear();\n    let factory: ComponentFactory<AbstractJoinPartComponent|JoinPart3Component>;\n    switch (this.page) {\n      case 3:\n        factory = this.resolver.resolveComponentFactory(JoinPart3Component);\n        break;\n      case 2:\n        factory = this.resolver.resolveComponentFactory(JoinPart2Component);\n        break;\n      case 1:\n        factory = this.resolver.resolveComponentFactory(JoinPart1Component);\n        break;\n      case 0:\n      default:\n        factory = this.resolver.resolveComponentFactory(JoinPart0Component);\n        break;\n    }\n    this.componentRef = this.container.createComponent(factory);\n    if (this.page === this.maxPage) {\n      (this.componentRef as unknown as ComponentRef<JoinPart3Component>).instance.data = this.data;\n    }\n\n  }\n\n  login() {\n    this.loginRequest.next();\n  }\n\n\n\n\n  updateForm(pg: number) {\n    if (!this.componentRef.instance.validate()) {\n      return;\n    }\n    // salva le informazioni recuperate dal form\n    this.data = {...this.data, ...this.componentRef.instance.getValue()};\n\n    this.setPage(pg);\n    this.loadComponent();\n  }\n\n  setPage(pg: number) {\n    if (pg < 0) {\n      this.page = 0;\n    } else if (pg > this.maxPage ) {\n      this.page = this.maxPage;\n    } else {\n      this.page = pg;\n    }\n  }\n}\n","<div>\n  <div>\n    <mat-slider class=\"slider\" min=\"0\" max=\"3\" step=\"1\" [value]=\"page\"\n    ></mat-slider>\n  </div>\n  <mat-divider></mat-divider>\n  <div>\n    <template #adHost></template>\n  </div>\n  <app-join-dashboard *ngIf=\"page < maxPage\" [page]=\"page\" [maxPage]=\"maxPage\" (changePage)=\"updateForm($event)\"></app-join-dashboard>\n  <div class=\"login\">\n    <button mat-button color=\"primary\" (click)=\"login()\">\n      Annulla creazione account\n    </button>\n  </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { haveUppercase, haveLowercase, haveDigit } from 'src/app/core/utils/custom-validator';\nimport { AbstractJoinPartComponent } from '../abstract-join-part/abstract-join-part.component';\n\n@Component({\n  selector: 'app-join-part0',\n  templateUrl: './join-part0.component.html',\n  styleUrls: ['./join-part0.component.scss'],\n})\nexport class JoinPart0Component extends AbstractJoinPartComponent\n  implements OnInit {\n  @Output() valuesOutput = new EventEmitter<{\n    email: string;\n    password: string;\n  }>();\n\n  constructor(private fb: FormBuilder) {\n    super();\n    this.formCrl = this.fb.group({\n      email: this.fb.control('', [Validators.required, Validators.email]),\n      password: this.fb.control('', [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(16),\n        haveUppercase,\n        haveLowercase,\n        haveDigit,\n      ]),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  getValue() {\n    return {\n      email: this.formCrl.controls.email.value,\n      password: this.formCrl.controls.password.value,\n    };\n  }\n}\n","<form class=\"form\" [formGroup]=\"formCrl\">\n<div>\n  <div fxFlex>\n    <mat-form-field>\n      <input matInput placeholder=\"email*\" formControlName=\"email\" />\n      <mat-error *ngIf=\"formCrl.controls['email'].hasError('required')\">\n        email <strong>obbligatoria</strong>\n      </mat-error>\n      <mat-error *ngIf=\"formCrl.controls['email'].hasError('email')\">\n        deve essere una email: esempio@dominio.com\n      </mat-error>\n    </mat-form-field>\n  </div>\n</div>\n<div>\n  <mat-form-field class=\"full-width\">\n    <input\n      matInput\n      type=\"password\"\n      placeholder=\"Password*\"\n      formControlName=\"password\"\n    />\n    <mat-error *ngIf=\"formCrl.controls['password'].hasError('minLength') || formCrl.controls['password'].hasError('maxLength')\">\n      la password è composta da 4-16 cifre <strong>numeriche</strong>\n    </mat-error>\n    <mat-error *ngIf=\"formCrl.controls['password'].hasError('required')\">\n      Password obbligatoria (ovviamente)\n    </mat-error>\n    <mat-error *ngIf=\"formCrl.controls['password'].hasError('haveUppercase')\">\n      E' necessario aggiungere almeno un carattere maiuscolo\n    </mat-error>\n    <mat-error *ngIf=\"formCrl.controls['password'].hasError('haveLowercase')\">\n      E' necessario aggiungere almeno un carattere minuscolo\n    </mat-error>\n    <mat-error *ngIf=\"formCrl.controls['password'].hasError('haveDigit')\">\n      E' necessario aggiungere almeno un carattere numerico\n    </mat-error>\n  </mat-form-field>\n</div>\n</form>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthStore } from 'src/app/features/login-page/store/auth.store';\nimport { RoutersPath } from '../constants/routing.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router, private loginStore: AuthStore) { }\n\n  canActivate(): boolean {\n    if (!this.loginStore.token) {\n      this.router.navigate([RoutersPath.login]);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthStore } from 'src/app/features/login-page/store/auth.store';\nimport { RoutersPath } from '../constants/routing.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoLoginGuard {\n\n  constructor(private router: Router, private loginStore: AuthStore) { }\n\n  canActivate(): boolean {\n    if (this.loginStore.token) {\n      this.router.navigate([RoutersPath.home]);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { RoutingService } from 'src/app/core/services/routing.service';\n\nimport { LoginType } from '../../constants/login-type.enum';\nimport { Cliente } from '../../models/cliente.model';\n\n@Component({\n  selector: 'app-recognition',\n  templateUrl: './recognition.component.html',\n  styleUrls: ['./recognition.component.scss']\n})\nexport class RecognitionComponent implements OnInit {\n\n  readonly LoginType = LoginType;\n  public loginType = LoginType.pin;\n\n  public cliente: Cliente = null;\n\n  @Output() authClientStatus = new EventEmitter<Cliente>();\n\n  constructor(private routingService: RoutingService) { }\n\n  ngOnInit(): void {\n    this.routingService.updateHeader('Login');\n  }\n\n  changeLogin(choosenLoginType: LoginType) {\n    this.loginType = choosenLoginType;\n  }\n\n  authSuccess(cliente: Cliente) {\n    this.loginType = LoginType.success;\n    this.cliente = cliente;\n    this.authClientStatus.emit(cliente);\n  }\n}\n","<div class=\"buttons-container\">\n  <button\n    mat-icon-button\n    (click)=\"changeLogin(LoginType.pin)\"\n    [ngClass]=\"{ active: loginType === LoginType.pin }\"\n  >\n    <mat-icon svgIcon=\"textbox-password\"></mat-icon>\n  </button>\n  <button\n    mat-icon-button\n    (click)=\"changeLogin(LoginType.qr)\"\n    class=\"mr-2 ml-2\"\n    [ngClass]=\"{ active: loginType === LoginType.qr }\"\n  >\n    <mat-icon svgIcon=\"qrcode\"></mat-icon>\n  </button>\n  <button\n    mat-icon-button\n    (click)=\"changeLogin(LoginType.nfc)\"\n    [ngClass]=\"{ active: loginType === LoginType.nfc }\"\n  >\n    <mat-icon svgIcon=\"nfc-variant\"></mat-icon>\n  </button>\n</div>\n<div class=\"content\">\n  <div class=\"login-body\">\n    <app-pin\n      *ngIf=\"loginType === LoginType.pin\"\n      class=\"block\"\n      (clientAuthEvent)=\"authSuccess($event)\"\n    ></app-pin>\n    <app-qr-code\n      *ngIf=\"loginType === LoginType.qr\"\n      class=\"block\"\n      (clientAuthEvent)=\"authSuccess($event)\"\n    ></app-qr-code>\n    <app-nfc *ngIf=\"loginType === LoginType.nfc\" class=\"block\"></app-nfc>\n    <app-info-widget\n      *ngIf=\"loginType === LoginType.success\"\n      class=\"block\"\n      title=\"CLIENTE\"\n      [numConto]=\"this.cliente.idConto\"\n      [name]=\"this.cliente.cognome + ' ' + this.cliente.nome\"\n      [address]=\"this.cliente.address\"\n    ></app-info-widget>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport enum LoadingStatus {\n  LOADING = '',\n  FAILED = 'FAILED',\n  SUCCESS = 'SUCCESS'\n}\n\n/** service sche gestisce il loader */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  /** Alla fine del caricamento chiude il loader e apre la modale */\n  status$: BehaviorSubject<LoadingStatus>;\n\n  constructor() {\n    this.status$ = new BehaviorSubject(LoadingStatus.LOADING);\n  }\n\n  changeStatus(status: LoadingStatus) {\n    this.status$.next(status);\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-join-dashboard',\n  templateUrl: './join-dashboard.component.html',\n  styleUrls: ['./join-dashboard.component.scss']\n})\nexport class JoinDashboardComponent implements OnInit {\n\n\n  @Input() page: number;\n  @Input() maxPage: number;\n\n  @Output() changePage = new EventEmitter<number>();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  backPage() {\n    this.changePage.emit(this.page - 1);\n  }\n\n  nextPage() {\n    this.changePage.emit(this.page + 1);\n  }\n}\n","<div class=\"move\">\n  <button mat-raised-button class=\"back\" color=\"primary\" [disabled]=\"page <= 0\" (click)=\"backPage()\">Back</button>\n  <button mat-raised-button class=\"next\" color=\"primary\" [disabled]=\"page >= maxPage\" (click)=\"nextPage()\">Next</button>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * [number, number] | switchNumber:switchFn\n */\n@Pipe({\n  name: 'switchNumber'\n})\nexport class SwitchNumberPipe implements PipeTransform {\n\n  /**\n   * @param switchFn  - determina se prendere il valore 1 o il valore 2\n   */\n  transform(values: [number, number], switchFn: boolean, ...args: unknown[]): unknown {\n    if (!Array.isArray(values)) {\n      console.error('SwitchNumberPipe richiede la presenza di un array di numeri per funzionare');\n      console.error(values);\n      return -1;\n    }\n    if (values.length !== 2 || values.some(n => !(typeof n === 'number'))) {\n      console.error('SwitchNumberPipe richiede che l\\'array contenga 2 valori numerici');\n      console.error(values);\n      return -1;\n    }\n    const equal = switchFn || true;\n    return equal ? values[0] : values[1];\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n/**\n * Nota: <app-big-button> richiede width e height impostati a 100%\n */\n@Component({\n  selector: 'app-big-button',\n  templateUrl: './big-button.component.html',\n  styleUrls: ['./big-button.component.scss']\n})\nexport class BigButtonComponent implements OnInit {\n\n  @Input() label: string;\n  @Input() icon: string;\n  @Input() disabled: boolean;\n\n  @Output() clickEmitter: EventEmitter<void> = new  EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  clickEvent(): void {\n    this.clickEmitter.next();\n  }\n}\n","<div class=\"button-container widget-container shadow-border\" [ngClass]=\"{'disabled': disabled}\" (click)=\"clickEvent()\">\n  <div class=\"icon-content\">\n    <mat-icon class=\"icon fix-top\" aria-hidden=\"false\" [inline]=\"false\">{{icon}}</mat-icon>\n  </div>\n  <div class=\"label-body\">\n    <span class=\"label centralize\" >{{label}}</span>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatIconModule, MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { AuthGuard } from './guards/auth-guard.service';\nimport { NoLoginGuard } from './guards/no-login-guard.service';\nimport { httpInterceptorProviders } from './http-interceptors/auth.interceptor';\nimport { ClienteService } from './services/cliente.service';\nimport { LoaderService } from './services/loader.service';\nimport { LocalStorageService } from './services/local-storage.service';\nimport { RoutingService } from './services/routing.service';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, HttpClientModule, MatIconModule, FlexLayoutModule],\n  exports: [MatIconModule, FlexLayoutModule],\n  providers: [\n    /* No providers */\n  ]\n})\nexport class CoreModule {\n  constructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer) {\n    // aggiunge le nuova svg a material\n    matIconRegistry.addSvgIconSet(\n      domSanitizer.bypassSecurityTrustResourceUrl('assets/svgs/mdi.svg')\n    );\n    // matIconRegistry.addSvgIconSet(domSanitizer.bypassSecurityTrustResourceUrl('../../assets/fonts/materialdesignicons-webfont.woff'));\n  }\n\n  static forRoot(): ModuleWithProviders<CoreModule> {\n    return {\n      ngModule: CoreModule,\n      providers: [\n        ClienteService,\n        RoutingService,\n        AuthGuard,\n        NoLoginGuard,\n        LoaderService,\n        LocalStorageService,\n        httpInterceptorProviders,\n      ]\n    };\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-info-widget',\n  templateUrl: './info-widget.component.html',\n  styleUrls: ['./info-widget.component.scss']\n})\nexport class InfoWidgetComponent implements OnInit {\n\n  /** titolo della sezione */\n  @Input() title: string;\n  /** numero del conto */\n  @Input() numConto: string;\n  /** nome del proprietario conto */\n  @Input() name: string;\n  /** regione sociale */\n  @Input() regSocial: string;\n  /** indirizzo del proprietario del conto */\n  @Input() address: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"title\">{{title}}</h1>\n<div class=\"info\">\n  <div class=\"labels\">\n    <div class=\"info--conto label\">Num. Conto:</div>\n    <div class=\"info--name label\">Nome:</div>\n    <div *ngIf=\"regSocial\" class=\"info--reg label\">Regione Sociale:</div>\n    <div class=\"info--addr label\">Indirizzo:</div>\n  </div>\n  <div class=\"values\">\n    <div class=\"info--conto value\">{{numConto || '-'}}</div>\n    <div class=\"info--name value\">{{name || '-'}}</div>\n    <div *ngIf=\"regSocial\" class=\"info--reg value\">{{regSocial}}</div>\n    <div class=\"info--addr value\">{{address || '-'}}</div>\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\nimport { AbstractJoinPartComponent } from '../abstract-join-part/abstract-join-part.component';\nimport { UtenteType } from 'src/app/core/constants/utente-type.enum';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-join-part2',\n  templateUrl: './join-part2.component.html',\n  styleUrls: ['./join-part2.component.scss']\n})\nexport class JoinPart2Component extends AbstractJoinPartComponent implements OnInit, OnDestroy {\n  readonly UserType = UtenteType;\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(private fb: FormBuilder) {\n    super();\n    this.formCrl = this.fb.group({\n      type: this.fb.control(UtenteType.cliente, []),\n      piva: this.fb.control({ value: '', disabled: true }, [Validators.required]),\n      ragSoc: this.fb.control({ value: '', disabled: true }, [Validators.required]),\n    });\n  }\n\n  ngOnInit() {\n    this.subscriptions.push(this.formCrl.get('type').valueChanges.subscribe(userType => {\n        if ( userType === UtenteType.cliente  ) {\n          this.formCrl.get('piva').disable();\n          this.formCrl.get('ragSoc').disable();\n        } else {\n          this.formCrl.get('piva').enable();\n          this.formCrl.get('ragSoc').enable();\n        }\n    }));\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  getValue() {\n    return {\n      type: this.formCrl.controls.type.value,\n      piva: this.formCrl.controls.piva.value,\n      ragSoc: this.formCrl.controls.ragSoc.value,\n    };\n  }\n}\n","<form class=\"form\" [formGroup]=\"formCrl\">\n  <mat-radio-group formControlName=\"type\">\n    <mat-radio-button [value]=\"UserType.cliente\" >Sono solo un cliente</mat-radio-button>\n    <mat-radio-button [value]=\"UserType.commerciante\" >Dati del commerciante</mat-radio-button>\n  </mat-radio-group>\n  <div #merchantInfo>\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput  class=\"mInfos\" placeholder=\"partita iva*\" formControlName=\"piva\" />\n        <mat-error *ngIf=\"formCrl.controls['piva'].hasError('required')\">\n          piva <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div>\n      <mat-form-field class=\"full-width\">\n        <input matInput class=\"mInfos\" placeholder=\"ragione sociale*\" formControlName=\"ragSoc\" />\n        <mat-error *ngIf=\"formCrl.controls['ragSoc'].hasError('required')\">\n          ragSoc <strong>obbligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n  </div>\n</form>\n","import { Injectable } from '@angular/core';\nimport { LocalStorageService } from 'src/app/core/services/local-storage.service';\nimport { UtenteType } from '../constants/utente-type.enum';\nimport { Cliente } from '../../shared/models/cliente.model';\nimport { Conto } from '../../shared/models/conto.model';\n\n/** Store che memorizza i dati dell' utente collegato (api/clienti/self) */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SelfStore {\n\n  readonly localStoreVariable = {\n    id: 'clienti.id',\n    email: 'clienti.email',\n    nome: 'clienti.nome',\n    cognome: 'clienti.cognome',\n    cf: 'clienti.cf',\n    createdAt: 'clienti.createdAt',\n    updatedAt: 'clienti.updatedAt',\n    idConto: 'clienti.idConto',\n    type: 'clienti.type',\n    address: 'clienti.address',\n    birthDate: 'clienti.birthDate',\n    phone: 'clienti.phone',\n    regSociale: 'commercianti.ragSociale',\n    pIva: 'commercianti.pIva',\n\n    budget: 'conto.budget',\n    saldo: 'conto.saldo',\n    // uscite: 'conto.uscite',\n    // entrate: 'conto.entrate',\n    // movimenti: 'conto.movimenti',\n    avariableBadget: 'conto.avBadget',\n\n  };\n\n  private pId: string;\n  private pEmail: string;\n  private pNome: string;\n  private pCognome: string;\n  private pCf: string;\n  private pCreatedAt: Date;\n  private pUpdatedAt: Date;\n  private pIdConto: string;\n  private pType: string;\n  private pAddress: string;\n  private pPhone: string;\n  private pBirthDate: string;\n  private pRagSociale: string;\n  private pPIva: string;\n\n  private pBudget: number;\n  private pSaldo: number;\n  // private pUscite: any[];\n  // private pEntrate: any[];\n  // private pMovimenti: any[];\n  private pAvariableBadget: number;\n\n\n  public get id() {\n    if (!this.pId) {\n      this.pId = this.localStorageService.getItem(this.localStoreVariable.id);\n    }\n    return this.pId;\n  }\n\n  public set id(value) {\n    this.pId = value;\n    this.localStorageService.setItem(this.localStoreVariable.id, value);\n  }\n\n\n  public get email() {\n    if (!this.pEmail) {\n      this.pEmail = this.localStorageService.getItem(this.localStoreVariable.email);\n    }\n    return this.pEmail;\n  }\n\n  public set email(value) {\n    this.pEmail = value;\n    this.localStorageService.setItem(this.localStoreVariable.email, value);\n  }\n\n\n  public get cognome() {\n    if (!this.pCognome) {\n      this.pCognome = this.localStorageService.getItem(this.localStoreVariable.cognome);\n    }\n    return this.pCognome;\n  }\n\n  public set cognome(value) {\n    this.pCognome = value;\n    this.localStorageService.setItem(this.localStoreVariable.cognome, value);\n  }\n\n  public get nome() {\n    if (!this.pNome) {\n      this.pNome = this.localStorageService.getItem(this.localStoreVariable.nome);\n    }\n    return this.pNome;\n  }\n\n  public set nome(value) {\n    this.pNome = value;\n    this.localStorageService.setItem(this.localStoreVariable.nome, value);\n  }\n\n  public get cf() {\n    if (!this.pCf) {\n      this.pCf = this.localStorageService.getItem(this.localStoreVariable.cf);\n    }\n    return this.pCf;\n  }\n\n  public set cf(value) {\n    this.pCf = value;\n    this.localStorageService.setItem(this.localStoreVariable.cf, value);\n  }\n\n  public get createdAt() {\n    if (!this.pCreatedAt) {\n      this.pCreatedAt = this.localStorageService.getItem(this.localStoreVariable.createdAt);\n    }\n    return this.pCreatedAt;\n  }\n\n  public set createdAt(value) {\n    this.pCreatedAt = value;\n    this.localStorageService.setItem(this.localStoreVariable.createdAt, value);\n  }\n\n  public get updatedAt() {\n    if (!this.pUpdatedAt) {\n      this.pUpdatedAt = this.localStorageService.getItem(this.localStoreVariable.updatedAt);\n    }\n    return this.pUpdatedAt;\n  }\n\n  public set updatedAt(value) {\n    this.pUpdatedAt = value;\n    this.localStorageService.setItem(this.localStoreVariable.updatedAt, value);\n  }\n\n  public get idConto() {\n    if (!this.pIdConto) {\n      this.pIdConto = this.localStorageService.getItem(this.localStoreVariable.idConto);\n    }\n    return this.pIdConto;\n  }\n\n  public set idConto(value) {\n    this.pIdConto = value;\n    this.localStorageService.setItem(this.localStoreVariable.idConto, value);\n  }\n\n\n  public get type() {\n    if (!this.pType) {\n      this.pType = this.localStorageService.getItem(this.localStoreVariable.type);\n    }\n    return this.pType;\n  }\n\n  public set type(value) {\n    this.pType = value;\n    this.localStorageService.setItem(this.localStoreVariable.type, value);\n  }\n\n  public get address() {\n    if (!this.pAddress) {\n      this.pAddress = this.localStorageService.getItem(this.localStoreVariable.address);\n    }\n    return this.pAddress;\n  }\n\n  public set address(value) {\n    this.pAddress = value;\n    this.localStorageService.setItem(this.localStoreVariable.address, value);\n  }\n\n  public get phone() {\n    if (!this.pPhone) {\n      this.pPhone = this.localStorageService.getItem(this.localStoreVariable.phone);\n    }\n    return this.pPhone;\n  }\n\n  public set phone(value) {\n    this.pPhone = value;\n    this.localStorageService.setItem(this.localStoreVariable.phone, value);\n  }\n\n  public get birthDate() {\n    if (!this.pBirthDate) {\n      this.pBirthDate = this.localStorageService.getItem(this.localStoreVariable.birthDate);\n    }\n    return this.pBirthDate;\n  }\n\n  public set birthDate(value) {\n    this.pBirthDate = value;\n    this.localStorageService.setItem(this.localStoreVariable.birthDate, value);\n  }\n\n\n\n  public get ragSociale() {\n    if (!this.pRagSociale) {\n      this.pRagSociale = this.localStorageService.getItem(this.localStoreVariable.regSociale);\n    }\n    return this.pRagSociale;\n  }\n\n  public set ragSociale(value) {\n    this.pRagSociale = value;\n    this.localStorageService.setItem(this.localStoreVariable.regSociale, value);\n  }\n\n  public get pIva() {\n    if (!this.pPIva) {\n      this.pPIva = this.localStorageService.getItem(this.localStoreVariable.pIva);\n    }\n    return this.pPIva;\n  }\n\n  public set pIva(value) {\n    this.pPIva = value;\n    this.localStorageService.setItem(this.localStoreVariable.pIva, value);\n  }\n\n  public get budget() {\n    if (!this.pBudget) {\n      this.pBudget = this.localStorageService.getItem(this.localStoreVariable.budget);\n    }\n    return this.pBudget;\n  }\n\n  public set budget(value) {\n    this.pBudget = value;\n    this.localStorageService.setItem(this.localStoreVariable.budget, value);\n  }\n\n  public get saldo() {\n    if (!this.pSaldo) {\n      this.pSaldo = this.localStorageService.getItem(this.localStoreVariable.saldo);\n    }\n    return this.pSaldo;\n  }\n\n  public set saldo(value) {\n    this.pSaldo = value;\n    this.localStorageService.setItem(this.localStoreVariable.saldo, value);\n  }\n\n  public get avariableBadget() {\n    if (!this.pAvariableBadget) {\n      this.pAvariableBadget = this.localStorageService.getItem(this.localStoreVariable.avariableBadget);\n    }\n    return this.pAvariableBadget;\n  }\n\n  public set avariableBadget(value) {\n    this.pAvariableBadget = value;\n    this.localStorageService.setItem(this.localStoreVariable.avariableBadget, value);\n  }\n\n\n  constructor(private localStorageService: LocalStorageService) { }\n\n  /** Aggiorna il selfStore salvando le informazioni ottenute  */\n  public updateCliente(cliente: Cliente) {\n    this.id = cliente.id;\n    this.type = cliente.type;\n    this.nome = cliente.nome;\n    this.cognome = cliente.cognome;\n    this.email = cliente.email;\n    this.cf = cliente.cf;\n    this.createdAt = cliente.createdAt;\n    this.updatedAt = cliente.updatedAt;\n    this.address = cliente.address;\n    this.phone = cliente.phone;\n    this.birthDate = cliente.birthDate;\n    this.idConto = cliente.idConto;\n    if (cliente.type === UtenteType.commerciante) {\n      this.ragSociale = cliente.ragSoc;\n      this.pIva = cliente.piva;\n    }\n  }\n\n  public updateConto(conto: Conto) {\n    this.idConto = conto.id;\n    this.saldo = conto.saldo;\n    this.budget = conto.budget;\n  }\n\n  /** resetta lo store (e il local store). Ideale dopo un logout */\n  public reset() {\n    this.id = undefined;\n    this.type = undefined;\n    this.nome = undefined;\n    this.cognome = undefined;\n    this.email = undefined;\n    this.cf = undefined;\n    this.createdAt = undefined;\n    this.updatedAt = undefined;\n    this.address = undefined;\n    this.phone = undefined;\n    this.birthDate = undefined;\n    this.idConto = undefined;\n    this.ragSociale = undefined;\n    this.pIva = undefined;\n\n    // this.idConto = undefined;\n    this.saldo = undefined;\n    this.budget = undefined;\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport {LoaderService, LoadingStatus } from 'src/app/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { debounceTime, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.scss']\n})\nexport class ErrorPageComponent implements OnInit {\n\n  /** titolo della pagina di errore */\n  titleLabel$: BehaviorSubject<string>;\n\n  /** contenuto html del messaggio di errore */\n  content$: BehaviorSubject<string>;\n\n  /** oggetto errore da stampare se presente */\n  error$: BehaviorSubject<any>;\n\n  constructor(private route: ActivatedRoute, private loaderService: LoaderService) {\n    this.titleLabel$ = new BehaviorSubject('Impossibile procedere con il pagamento. Se il problema persiste contattare il venditore');\n    this.content$ = new BehaviorSubject('SUGGERIMENTO PER IL VENDITORE: assicurarsi che il idConto e prezzo siano validi');\n    this.error$ = new BehaviorSubject(undefined);\n    this.loaderService.status$.next(LoadingStatus.FAILED);\n  }\n\n  ngOnInit() {\n    this.route.queryParams\n    .pipe(\n      // debounceTime evita l'emit iniziale prima che i param siano effettivamente inizializzati\n      debounceTime(200),\n      switchMap(params => {\n        if ( params.titleLabel) {\n          this.titleLabel$.next(params.titleLabel);\n        }\n        if ( params.content ) {\n          this.content$.next(params.content);\n        }\n        if ( params.error ) {\n          this.error$.next(JSON.parse(params.error));\n        }\n        return [];\n      })\n    )\n    .subscribe();\n  }\n}\n","<app-error [titleLabel]=\"titleLabel$ | async\" [content]=\"content$ | async\" [error]=\"error$ | async\"></app-error>\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MovimentoService } from 'src/app/core';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { SelfStore } from 'src/app/core/store/self.store';\nimport { Cliente } from 'src/app/shared/models/cliente.model';\n\nimport { DialogData } from '../../payments.component';\n\n@Component({\n  selector: 'app-dialog-payment',\n  templateUrl: './dialog-payment.component.html',\n  styleUrls: ['./dialog-payment.component.scss']\n})\nexport class DialogPaymentComponent {\n\n\n  public cliente: Cliente;\n  public priceInfo: DialogData['priceInfo'];\n\n  constructor(\n    private dialogRef: MatDialogRef<DialogPaymentComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: DialogData,\n    private movimentoService: MovimentoService,\n    private selfStore: SelfStore,\n    private routingService: RoutingService,\n    private snackBar: MatSnackBar,\n  ) {\n    this.cliente = data.cliente;\n    this.priceInfo = data.priceInfo;\n  }\n\n  completePayment() {\n    this.movimentoService\n      .pagamento(this.cliente.idConto, this.selfStore.idConto, this.priceInfo.price)\n      .subscribe(() => {\n        // pagamento avvenuto con successo\n        this.openSnackBar('pagamento effettuato con successo', 'success');\n      },\n      (error) => {\n        // errore nel pagamento\n        this.openSnackBar('pagamento fallito', 'failure');\n        console.error(error);\n      },\n      // complete\n      () => {\n        this.dialogRef.close();\n        this.routingService.gotoHome();\n      });\n  }\n\n  undo() {\n    this.dialogRef.close();\n    window.location.reload();\n  }\n\n  private openSnackBar(message: string, cssClass?: string) {\n    this.snackBar.open(message, 'chiudi', {\n      // verticalPosition: MatSnackBarVerticalPosition,\n      // horizontalPosition: MatSnackBarHorizontalPosition,\n      panelClass: ['paytost', cssClass],\n      duration: 10000,\n    });\n  }\n}\n","<div>\n  <h2>Confermi l'operazione?</h2>\n  <div class=\"container\">\n    <button class=\"marg\" mat-raised-button color=\"primary\" (click)=\"completePayment()\">PROSEGUI</button>\n    <button class=\"marg\" mat-raised-button color=\"secondary\" (click)=\"undo()\">INDIETRO</button>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { RoutingService } from 'src/app/core/services/routing.service';\nimport { InfoAtmComponent } from 'src/app/shared/info-atm/info-atm.component';\n\nenum FormTypes {\n  login = 'Login',\n  join = 'Join'\n}\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n  readonly FormTypes = FormTypes;\n\n\n  public formType: FormTypes = FormTypes.login;\n\n  constructor(private routingService: RoutingService, private dialog: MatDialog, ) { }\n\n  ngOnInit(): void {\n    this.routingService.updateHeader('Login');\n  }\n\n  clickInfo() {\n    const dialogRef = this.dialog.open(InfoAtmComponent);\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n\n  switchForm(formType: FormTypes) {\n    this.formType = formType;\n  }\n\n}\n","<div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-between start\">\n  <div fxFlex class=\"widget-container login-widget shadow-border\">\n    <app-login\n      *ngIf=\"formType === FormTypes.login\"\n      (joinRequest)=\"switchForm(FormTypes.join)\"\n    ></app-login>\n    <app-join\n      *ngIf=\"formType === FormTypes.join\"\n      (loginRequest)=\"switchForm(FormTypes.login)\"\n    ></app-join>\n  </div>\n  <div\n    fxFlex\n    ngClass.xs=\"info_conto_flex--xs\"\n    ngClass.gt-xs=\"info_conto_flex--gt-xs\"\n  >\n    <app-big-button\n      class=\"info_conto\"\n      label=\"Info Conto\"\n      icon=\"info\"\n      (clickEmitter)=\"clickInfo()\"\n    ></app-big-button>\n  </div>\n</div>\n<div fxLayout class=\"footer\">\n  <div class=\"widget-container shadow-border spam-widget\">\n    <app-banner></app-banner>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-info-atm',\n  templateUrl: './info-atm.component.html',\n  styleUrls: ['./info-atm.component.scss']\n})\nexport class InfoAtmComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  getATMCode(): string {\n    return 'ATM_01246843fdg';\n  }\n}\n","<h2 mat-dialog-title>Informazioni ATM</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <div class=\"info\">\n    <div class=\"labels\">\n      <div class=\"info--id label\">Identificativo ATM:</div>\n\n    </div>\n    <div class=\"values\">\n      <div class=\"info--id value\">{{getATMCode() || '-'}}</div>\n    </div>\n  </div>\n\n  </mat-dialog-content>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { RoutersPath } from './core';\nimport { AuthGuard } from './core/guards/auth-guard.service';\nimport { NoLoginGuard } from './core/guards/no-login-guard.service';\nimport { HomeComponent } from './features/home/home.component';\nimport { LoginPageComponent } from './features/login-page/login-page.component';\nimport { MovementsComponent } from './features/movements/movements.component';\nimport { PaymentsComponent } from './features/payments/payments.component';\nimport { RechargeComponent } from './features/recharge/recharge.component';\nimport { TemplateComponent } from './features/template/template.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TemplateComponent,\n    children: [\n      {\n        path: RoutersPath.base,\n        redirectTo: '/login',\n        pathMatch: 'full'\n      },\n      {\n        path: RoutersPath.home,\n        component: HomeComponent,\n        canActivate: [AuthGuard],\n      },\n      {\n        path: RoutersPath.login,\n        component: LoginPageComponent,\n        canActivate: [NoLoginGuard],\n      },\n      {\n        path: RoutersPath.payment,\n        component: PaymentsComponent,\n        canActivate: [AuthGuard],\n      },\n      {\n        path: RoutersPath.recharge,\n        component: RechargeComponent,\n        canActivate: [AuthGuard],\n      },\n      {\n        path: RoutersPath.movements,\n        component: MovementsComponent,\n        canActivate: [AuthGuard],\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { BarcodeFormat } from '@zxing/library';\nimport { ZXingScannerComponent } from '@zxing/ngx-scanner';\nimport { BehaviorSubject } from 'rxjs';\nimport { ClienteService } from 'src/app/core';\n\nimport { Cliente } from '../../models/cliente.model';\n\n@Component({\n  selector: 'app-qr-code',\n  templateUrl: './qr-code.component.html',\n  styleUrls: ['./qr-code.component.scss']\n})\nexport class QrCodeComponent implements OnInit {\n\n  /** standard accettati dal lettore */\n  readonly allowedFormats = [ BarcodeFormat.QR_CODE, BarcodeFormat.EAN_13];\n  availableDevices: MediaDeviceInfo[];\n  currentDevice: MediaDeviceInfo = null;\n\n  /**\n   * scanner.\n   * documentazione: https://github.com/zxing-js/ngx-scanner/wiki/Advanced-Usage\n   */\n  @ViewChild(ZXingScannerComponent)\n  scanner: ZXingScannerComponent;\n\n  @Output() clientAuthEvent = new EventEmitter<Cliente>();\n\n  /** determina se è riuscito ad aprire o meno lo scanner */\n  statusScanner$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(private clienteService: ClienteService) { }\n\n  ngOnInit() { }\n\n  /** alla lettura dello stato prova ad effettuare il login */\n  scanSuccessHandler(token: string) {\n    this.scanner.enable = false;\n    this.clienteService.getClienteByTokenOtp(token).subscribe(\n      cliente => {\n        console.warn(cliente);\n        this.clientAuthEvent.emit(cliente)},\n      error => this.scanner.enable = true);\n  }\n\n  onCamerasFound(devices: MediaDeviceInfo[]): void {\n    this.availableDevices = devices;\n\n    if (this.availableDevices && this.availableDevices.length > 0) {\n      this.currentDevice = this.availableDevices[0];\n    }\n  }\n\n  /** modifica lo stato del reader, che indica se è in funzione o ha dei problemi in esecuzione */\n  readerStatus(status: boolean) {\n    this.statusScanner$.next(status);\n  }\n}\n","<!-- scanner -->\n<div [hidden]=\"!(statusScanner$ | async)\">\n  <zxing-scanner\n    class=\"qr-reader\"\n    [(device)]=\"currentDevice\"\n    [formats]=\"allowedFormats\"\n    (camerasFound)=\"onCamerasFound($event)\"\n    (scanSuccess)=\"scanSuccessHandler($event)\"\n    (permissionResponse)=\"readerStatus($event)\"\n    [tryHarder]=\"true\"\n  ></zxing-scanner>\n</div>\n\n<!-- gestione in caso di scanner disabilitato o non funzionante -->\n<div [hidden]=\"statusScanner$ | async\">\n  <mat-icon svgIcon=\"qrcode\" class=\"qr-icon\"></mat-icon>\n  <div class=\"qr-message\">abilitare il lettore qrcode.</div>\n</div>\n","/** Tipologia di utente che può essere */\nexport enum UtenteType {\n  cliente = 'cliente',\n  commerciante = 'commerciante',\n}\n"]}